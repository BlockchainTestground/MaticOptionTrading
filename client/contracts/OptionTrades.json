{
  "contractName": "OptionTrades",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "maticOpts",
      "outputs": [
        {
          "internalType": "enum OptionTrades.OptionType",
          "name": "optionType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "strike",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "premium",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "exercised",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "canceled",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "latestCost",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "writer",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "buyer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getMaticPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "strike",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "premium",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tknAmt",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "optionType",
          "type": "string"
        }
      ],
      "name": "writeOption",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ID",
          "type": "uint256"
        }
      ],
      "name": "cancelOption",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ID",
          "type": "uint256"
        }
      ],
      "name": "buyOption",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ID",
          "type": "uint256"
        }
      ],
      "name": "exercise",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ID",
          "type": "uint256"
        }
      ],
      "name": "retrieveExpiredFunds",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ID",
          "type": "uint256"
        }
      ],
      "name": "updateExerciseCost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaticOptsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "maticOptsLength",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"}],\"name\":\"buyOption\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"}],\"name\":\"cancelOption\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"}],\"name\":\"exercise\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaticOptsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maticOptsLength\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaticPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"maticOpts\",\"outputs\":[{\"internalType\":\"enum OptionTrades.OptionType\",\"name\":\"optionType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"strike\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exercised\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"latestCost\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"writer\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"}],\"name\":\"retrieveExpiredFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"}],\"name\":\"updateExerciseCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strike\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tknAmt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"optionType\",\"type\":\"string\"}],\"name\":\"writeOption\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/turupawn/Projects/Blockchain/MaticOptionTrading/contracts/OptionTrades.sol\":\"OptionTrades\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/turupawn/Projects/Blockchain/MaticOptionTrading/contracts/OptionTrades.sol\":{\"keccak256\":\"0x70d7001e394f4eb10cc9ffa1f0f3c6cd6c85cb2abb51b140ceca3504de8f54aa\",\"urls\":[\"bzz-raw://7b428baf0c813691fbf0a64fee19b2f9b6ed60c1cfe44f1851936161bb8309e2\",\"dweb:/ipfs/QmNhQem3nXTff2t179LUpJTN8RhwaGwWzQB88G6qu54zkD\"]},\"/home/turupawn/Projects/Blockchain/MaticOptionTrading/contracts/dependencies/AggregatorV3Interface.sol\":{\"keccak256\":\"0x533261510414ff2b0ead90c32001a277e26bc4f5eb19c95b8b47e32be0b9aad7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28e428a666203d630b65ff58cfe6834c8f1d4552382812bd351cdb9b45ab2d46\",\"dweb:/ipfs/QmeKKVMoidNENnfSK5JExWJderSY6AS4H1ei9Zb5F1wXK1\"]},\"/home/turupawn/Projects/Blockchain/MaticOptionTrading/contracts/dependencies/LinkTokenInterface.sol\":{\"keccak256\":\"0x6afbff5516a4d765a698cfd3b49ab8f6c1368ea034bc9130fce0d0e54f4a0a01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65c865dcd409dbf82d60904e8d875a33496b4bbf0835a223cad7e0837bbf4bed\",\"dweb:/ipfs/QmXcLuSQFbbTqwLs7TobL7jQLFeqgc2YLbammu5fY1caFh\"]}},\"version\":1}",
  "bytecode": "0x60806040526040516020016200001590620001f1565b604051602081830303815290604052805190602001206004556040516020016200003f90620001da565b604051602081830303815290604052805190602001206005553480156200006557600080fd5b5073d0d5e3db44de05e9f294bb0a3beeaf030de24ada6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073326c977e6efc84e512bb9c30f76e30c160ed06fb600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555030600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000213565b60006200016560038362000208565b91507f50555400000000000000000000000000000000000000000000000000000000006000830152600382019050919050565b6000620001a760048362000208565b91507f43414c4c000000000000000000000000000000000000000000000000000000006000830152600482019050919050565b6000620001e78262000156565b9150819050919050565b6000620001fe8262000198565b9150819050919050565b600081905092915050565b61251f80620002236000396000f3fe6080604052600436106100865760003560e01c8063c83d324811610059578063c83d324814610126578063db99e79314610151578063de6bf6351461017a578063f1356ffc14610196578063fba225b9146101c157610086565b80633a39f6231461008b57806363259516146100a7578063790eee2e146100ee578063b07f0a411461010a575b600080fd5b6100a560048036038101906100a09190611a18565b6101dd565b005b3480156100b357600080fd5b506100ce60048036038101906100c991906119ef565b61053f565b6040516100e59b9a99989796959493929190611fac565b60405180910390f35b610108600480360381019061010391906119ef565b610610565b005b610124600480360381019061011f91906119ef565b61099f565b005b34801561013257600080fd5b5061013b611077565b60405161014891906121d7565b60405180910390f35b34801561015d57600080fd5b50610178600480360381019061017391906119ef565b611176565b005b610194600480360381019061018f91906119ef565b61128f565b005b3480156101a257600080fd5b506101ab611608565b6040516101b891906121d7565b60405180910390f35b6101db60048036038101906101d691906119ef565b611615565b005b6000816040516020016101f09190611f95565b604051602081830303815290604052805190602001209050600454811480610219575060055481145b610258576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024f90612097565b60405180910390fd5b82341461029a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610291906120f7565b60405180910390fd5b6102a2611923565b60006004548214156102b757600190506102bc565b600090505b60006402540be4006002546102d191906122ab565b85896102dd91906122ab565b6102e7919061227a565b90506006604051806101600160405280846001811115610330577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018a815260200189815260200188815260200187815260200160001515815260200160001515815260200160068054905081526020018381526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150506001900390600052602060002090600a020160009091909190915060008201518160000160006101000a81548160ff02191690836001811115610421577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff02191690831515021790555060e0820151816006015561010082015181600701556101208201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101408201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050505050565b6006818154811061054f57600080fd5b90600052602060002090600a02016000915090508060000160009054906101000a900460ff16908060010154908060020154908060030154908060040154908060050160009054906101000a900460ff16908060050160019054906101000a900460ff16908060060154908060070154908060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508b565b6006818154811061064a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e090612137565b60405180910390fd5b4260068281548110610724577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a0201600301541115801561079a575060068181548110610779577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160050160009054906101000a900460ff16155b80156107fc5750600681815481106107db577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160050160019054906101000a900460ff16155b61083b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083290612197565b60405180910390fd5b60068181548110610875577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600683815481106108fa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a0201600401549081150290604051600060405180830381858888f19350505050158015610937573d6000803e3d6000fd5b50600160068281548110610974577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160050160016101000a81548160ff02191690831515021790555050565b3373ffffffffffffffffffffffffffffffffffffffff16600682815481106109f0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6f906120b7565b60405180910390fd5b60068181548110610ab2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160050160009054906101000a900460ff1615610b11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b08906121b7565b60405180910390fd5b4260068281548110610b4c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a02016003015411610b9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b95906120d7565b60405180910390fd5b610ba6611923565b600060068281548110610be2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a02016004015460068381548110610c2e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160010154610c4a91906122ab565b905060006402540be400600254610c6191906122ab565b82610c6c919061227a565b9050803414610cb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca790612077565b60405180910390fd5b600180811115610ce9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60068481548110610d23577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160000160009054906101000a900460ff166001811115610d7a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610ec95760068381548110610dba577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610e31573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc60068581548110610e86577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a0201600401549081150290604051600060405180830381858888f19350505050158015610ec3573d6000803e3d6000fd5b5061100e565b3373ffffffffffffffffffffffffffffffffffffffff166108fc60068581548110610f1d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a0201600401549081150290604051600060405180830381858888f19350505050158015610f5a573d6000803e3d6000fd5b5060068381548110610f95577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561100c573d6000803e3d6000fd5b505b60016006848154811061104a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160050160006101000a81548160ff021916908315150217905550505050565b60008060008060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156110e657600080fd5b505afa1580156110fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111e9190611aa7565b945094509450945094506000821161116b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116290612157565b60405180910390fd5b839550505050505090565b61117e611923565b6402540be40060025461119191906122ab565b600682815481106111cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a02016004015460068381548110611217577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a02016001015461123391906122ab565b61123d919061227a565b60068281548110611277577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a02016007018190555050565b600681815481106112c9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135f90612137565b60405180910390fd5b600681815481106113a2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160050160019054906101000a900460ff161580156114655750600073ffffffffffffffffffffffffffffffffffffffff166006828154811061141b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b6114a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149b90612177565b60405180910390fd5b600681815481106114de577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60068381548110611563577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a0201600401549081150290604051600060405180830381858888f193505050501580156115a0573d6000803e3d6000fd5b506001600682815481106115dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160050160016101000a81548160ff02191690831515021790555050565b6000600680549050905090565b61161d611923565b60068181548110611657577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160050160019054906101000a900460ff161580156116cd575042600682815481106116b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160030154115b61170c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170390612057565b60405180910390fd5b60068181548110611746577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a0201600201543414611799576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179090612117565b60405180910390fd5b600681815481106117d3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60068381548110611858577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a0201600201549081150290604051600060405180830381858888f19350505050158015611895573d6000803e3d6000fd5b5033600682815481106118d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61192b611077565b600281905550565b600061194661194184612223565b6121f2565b90508281526020810184848401111561195e57600080fd5b611969848285612392565b509392505050565b600081519050611980816124a4565b92915050565b600082601f83011261199757600080fd5b81356119a7848260208601611933565b91505092915050565b6000813590506119bf816124bb565b92915050565b6000815190506119d4816124bb565b92915050565b6000815190506119e9816124d2565b92915050565b600060208284031215611a0157600080fd5b6000611a0f848285016119b0565b91505092915050565b600080600080600060a08688031215611a3057600080fd5b6000611a3e888289016119b0565b9550506020611a4f888289016119b0565b9450506040611a60888289016119b0565b9350506060611a71888289016119b0565b925050608086013567ffffffffffffffff811115611a8e57600080fd5b611a9a88828901611986565b9150509295509295909350565b600080600080600060a08688031215611abf57600080fd5b6000611acd888289016119da565b9550506020611ade88828901611971565b9450506040611aef888289016119c5565b9350506060611b00888289016119c5565b9250506080611b11888289016119da565b9150509295509295909350565b611b2781612305565b82525050565b611b3681612317565b82525050565b611b4581612380565b82525050565b6000611b5682612253565b611b60818561226f565b9350611b708185602086016123a1565b80840191505092915050565b6000611b89602f8361225e565b91507f4f7074696f6e2069732063616e63656c65642f6578706972656420616e64206360008301527f616e6e6f7420626520626f7567687400000000000000000000000000000000006020830152604082019050919050565b6000611bef60268361225e565b91507f496e636f7272656374204c494e4b20616d6f756e742073656e7420746f20657860008301527f65726369736500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611c55602c8361225e565b91507f4f6e6c792043414c4c20616e6420505554206f7074696f6e207479706573206160008301527f726520737570706f7274656400000000000000000000000000000000000000006020830152604082019050919050565b6000611cbb601a8361225e565b91507f596f7520646f206e6f74206f776e2074686973206f7074696f6e0000000000006000830152602082019050919050565b6000611cfb60118361225e565b91507f4f7074696f6e20697320657870697265640000000000000000000000000000006000830152602082019050919050565b6000611d3b60228361225e565b91507f496e636f727265637420616d6f756e74206f66204d6174696320737570706c6960008301527f65640000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611da1602a8361225e565b91507f496e636f727265637420616d6f756e74206f66204d415449432073656e74206660008301527f6f72207072656d69756d000000000000000000000000000000000000000000006020830152604082019050919050565b6000611e07601d8361225e565b91507f596f7520646964206e6f742077726974652074686973206f7074696f6e0000006000830152602082019050919050565b6000611e4760128361225e565b91507f526f756e64206e6f7420636f6d706c65746500000000000000000000000000006000830152602082019050919050565b6000611e87601e8361225e565b91507f54686973206f7074696f6e2063616e6e6f742062652063616e63656c656400006000830152602082019050919050565b6000611ec760288361225e565b91507f54686973206f7074696f6e206973206e6f7420656c696769626c6520666f722060008301527f77697468647261770000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611f2d60218361225e565b91507f4f7074696f6e2068617320616c7265616479206265656e20657865726369736560008301527f64000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b611f8f81612360565b82525050565b6000611fa18284611b4b565b915081905092915050565b600061016082019050611fc2600083018e611b3c565b611fcf602083018d611f86565b611fdc604083018c611f86565b611fe9606083018b611f86565b611ff6608083018a611f86565b61200360a0830189611b2d565b61201060c0830188611b2d565b61201d60e0830187611f86565b61202b610100830186611f86565b612039610120830185611b1e565b612047610140830184611b1e565b9c9b505050505050505050505050565b6000602082019050818103600083015261207081611b7c565b9050919050565b6000602082019050818103600083015261209081611be2565b9050919050565b600060208201905081810360008301526120b081611c48565b9050919050565b600060208201905081810360008301526120d081611cae565b9050919050565b600060208201905081810360008301526120f081611cee565b9050919050565b6000602082019050818103600083015261211081611d2e565b9050919050565b6000602082019050818103600083015261213081611d94565b9050919050565b6000602082019050818103600083015261215081611dfa565b9050919050565b6000602082019050818103600083015261217081611e3a565b9050919050565b6000602082019050818103600083015261219081611e7a565b9050919050565b600060208201905081810360008301526121b081611eba565b9050919050565b600060208201905081810360008301526121d081611f20565b9050919050565b60006020820190506121ec6000830184611f86565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561221957612218612461565b5b8060405250919050565b600067ffffffffffffffff82111561223e5761223d612461565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600061228582612360565b915061229083612360565b9250826122a05761229f612403565b5b828204905092915050565b60006122b682612360565b91506122c183612360565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156122fa576122f96123d4565b5b828202905092915050565b600061231082612340565b9050919050565b60008115159050919050565b600081905061233182612490565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061238b82612323565b9050919050565b82818337600083830152505050565b60005b838110156123bf5780820151818401526020810190506123a4565b838111156123ce576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600281106124a1576124a0612432565b5b50565b6124ad81612336565b81146124b857600080fd5b50565b6124c481612360565b81146124cf57600080fd5b50565b6124db8161236a565b81146124e657600080fd5b5056fea26469706673582212202a748bca04b591df019aea34b3555ea18bb8c7df51331c35288186232b07ab5e64736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c8063c83d324811610059578063c83d324814610126578063db99e79314610151578063de6bf6351461017a578063f1356ffc14610196578063fba225b9146101c157610086565b80633a39f6231461008b57806363259516146100a7578063790eee2e146100ee578063b07f0a411461010a575b600080fd5b6100a560048036038101906100a09190611a18565b6101dd565b005b3480156100b357600080fd5b506100ce60048036038101906100c991906119ef565b61053f565b6040516100e59b9a99989796959493929190611fac565b60405180910390f35b610108600480360381019061010391906119ef565b610610565b005b610124600480360381019061011f91906119ef565b61099f565b005b34801561013257600080fd5b5061013b611077565b60405161014891906121d7565b60405180910390f35b34801561015d57600080fd5b50610178600480360381019061017391906119ef565b611176565b005b610194600480360381019061018f91906119ef565b61128f565b005b3480156101a257600080fd5b506101ab611608565b6040516101b891906121d7565b60405180910390f35b6101db60048036038101906101d691906119ef565b611615565b005b6000816040516020016101f09190611f95565b604051602081830303815290604052805190602001209050600454811480610219575060055481145b610258576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024f90612097565b60405180910390fd5b82341461029a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610291906120f7565b60405180910390fd5b6102a2611923565b60006004548214156102b757600190506102bc565b600090505b60006402540be4006002546102d191906122ab565b85896102dd91906122ab565b6102e7919061227a565b90506006604051806101600160405280846001811115610330577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018a815260200189815260200188815260200187815260200160001515815260200160001515815260200160068054905081526020018381526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150506001900390600052602060002090600a020160009091909190915060008201518160000160006101000a81548160ff02191690836001811115610421577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff02191690831515021790555060e0820151816006015561010082015181600701556101208201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101408201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050505050565b6006818154811061054f57600080fd5b90600052602060002090600a02016000915090508060000160009054906101000a900460ff16908060010154908060020154908060030154908060040154908060050160009054906101000a900460ff16908060050160019054906101000a900460ff16908060060154908060070154908060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508b565b6006818154811061064a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e090612137565b60405180910390fd5b4260068281548110610724577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a0201600301541115801561079a575060068181548110610779577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160050160009054906101000a900460ff16155b80156107fc5750600681815481106107db577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160050160019054906101000a900460ff16155b61083b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083290612197565b60405180910390fd5b60068181548110610875577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600683815481106108fa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a0201600401549081150290604051600060405180830381858888f19350505050158015610937573d6000803e3d6000fd5b50600160068281548110610974577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160050160016101000a81548160ff02191690831515021790555050565b3373ffffffffffffffffffffffffffffffffffffffff16600682815481106109f0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6f906120b7565b60405180910390fd5b60068181548110610ab2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160050160009054906101000a900460ff1615610b11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b08906121b7565b60405180910390fd5b4260068281548110610b4c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a02016003015411610b9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b95906120d7565b60405180910390fd5b610ba6611923565b600060068281548110610be2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a02016004015460068381548110610c2e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160010154610c4a91906122ab565b905060006402540be400600254610c6191906122ab565b82610c6c919061227a565b9050803414610cb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca790612077565b60405180910390fd5b600180811115610ce9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60068481548110610d23577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160000160009054906101000a900460ff166001811115610d7a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610ec95760068381548110610dba577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610e31573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc60068581548110610e86577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a0201600401549081150290604051600060405180830381858888f19350505050158015610ec3573d6000803e3d6000fd5b5061100e565b3373ffffffffffffffffffffffffffffffffffffffff166108fc60068581548110610f1d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a0201600401549081150290604051600060405180830381858888f19350505050158015610f5a573d6000803e3d6000fd5b5060068381548110610f95577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561100c573d6000803e3d6000fd5b505b60016006848154811061104a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160050160006101000a81548160ff021916908315150217905550505050565b60008060008060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156110e657600080fd5b505afa1580156110fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111e9190611aa7565b945094509450945094506000821161116b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116290612157565b60405180910390fd5b839550505050505090565b61117e611923565b6402540be40060025461119191906122ab565b600682815481106111cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a02016004015460068381548110611217577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a02016001015461123391906122ab565b61123d919061227a565b60068281548110611277577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a02016007018190555050565b600681815481106112c9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135f90612137565b60405180910390fd5b600681815481106113a2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160050160019054906101000a900460ff161580156114655750600073ffffffffffffffffffffffffffffffffffffffff166006828154811061141b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b6114a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149b90612177565b60405180910390fd5b600681815481106114de577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60068381548110611563577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a0201600401549081150290604051600060405180830381858888f193505050501580156115a0573d6000803e3d6000fd5b506001600682815481106115dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160050160016101000a81548160ff02191690831515021790555050565b6000600680549050905090565b61161d611923565b60068181548110611657577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160050160019054906101000a900460ff161580156116cd575042600682815481106116b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160030154115b61170c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170390612057565b60405180910390fd5b60068181548110611746577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a0201600201543414611799576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179090612117565b60405180910390fd5b600681815481106117d3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60068381548110611858577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a0201600201549081150290604051600060405180830381858888f19350505050158015611895573d6000803e3d6000fd5b5033600682815481106118d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600a020160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61192b611077565b600281905550565b600061194661194184612223565b6121f2565b90508281526020810184848401111561195e57600080fd5b611969848285612392565b509392505050565b600081519050611980816124a4565b92915050565b600082601f83011261199757600080fd5b81356119a7848260208601611933565b91505092915050565b6000813590506119bf816124bb565b92915050565b6000815190506119d4816124bb565b92915050565b6000815190506119e9816124d2565b92915050565b600060208284031215611a0157600080fd5b6000611a0f848285016119b0565b91505092915050565b600080600080600060a08688031215611a3057600080fd5b6000611a3e888289016119b0565b9550506020611a4f888289016119b0565b9450506040611a60888289016119b0565b9350506060611a71888289016119b0565b925050608086013567ffffffffffffffff811115611a8e57600080fd5b611a9a88828901611986565b9150509295509295909350565b600080600080600060a08688031215611abf57600080fd5b6000611acd888289016119da565b9550506020611ade88828901611971565b9450506040611aef888289016119c5565b9350506060611b00888289016119c5565b9250506080611b11888289016119da565b9150509295509295909350565b611b2781612305565b82525050565b611b3681612317565b82525050565b611b4581612380565b82525050565b6000611b5682612253565b611b60818561226f565b9350611b708185602086016123a1565b80840191505092915050565b6000611b89602f8361225e565b91507f4f7074696f6e2069732063616e63656c65642f6578706972656420616e64206360008301527f616e6e6f7420626520626f7567687400000000000000000000000000000000006020830152604082019050919050565b6000611bef60268361225e565b91507f496e636f7272656374204c494e4b20616d6f756e742073656e7420746f20657860008301527f65726369736500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611c55602c8361225e565b91507f4f6e6c792043414c4c20616e6420505554206f7074696f6e207479706573206160008301527f726520737570706f7274656400000000000000000000000000000000000000006020830152604082019050919050565b6000611cbb601a8361225e565b91507f596f7520646f206e6f74206f776e2074686973206f7074696f6e0000000000006000830152602082019050919050565b6000611cfb60118361225e565b91507f4f7074696f6e20697320657870697265640000000000000000000000000000006000830152602082019050919050565b6000611d3b60228361225e565b91507f496e636f727265637420616d6f756e74206f66204d6174696320737570706c6960008301527f65640000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611da1602a8361225e565b91507f496e636f727265637420616d6f756e74206f66204d415449432073656e74206660008301527f6f72207072656d69756d000000000000000000000000000000000000000000006020830152604082019050919050565b6000611e07601d8361225e565b91507f596f7520646964206e6f742077726974652074686973206f7074696f6e0000006000830152602082019050919050565b6000611e4760128361225e565b91507f526f756e64206e6f7420636f6d706c65746500000000000000000000000000006000830152602082019050919050565b6000611e87601e8361225e565b91507f54686973206f7074696f6e2063616e6e6f742062652063616e63656c656400006000830152602082019050919050565b6000611ec760288361225e565b91507f54686973206f7074696f6e206973206e6f7420656c696769626c6520666f722060008301527f77697468647261770000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611f2d60218361225e565b91507f4f7074696f6e2068617320616c7265616479206265656e20657865726369736560008301527f64000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b611f8f81612360565b82525050565b6000611fa18284611b4b565b915081905092915050565b600061016082019050611fc2600083018e611b3c565b611fcf602083018d611f86565b611fdc604083018c611f86565b611fe9606083018b611f86565b611ff6608083018a611f86565b61200360a0830189611b2d565b61201060c0830188611b2d565b61201d60e0830187611f86565b61202b610100830186611f86565b612039610120830185611b1e565b612047610140830184611b1e565b9c9b505050505050505050505050565b6000602082019050818103600083015261207081611b7c565b9050919050565b6000602082019050818103600083015261209081611be2565b9050919050565b600060208201905081810360008301526120b081611c48565b9050919050565b600060208201905081810360008301526120d081611cae565b9050919050565b600060208201905081810360008301526120f081611cee565b9050919050565b6000602082019050818103600083015261211081611d2e565b9050919050565b6000602082019050818103600083015261213081611d94565b9050919050565b6000602082019050818103600083015261215081611dfa565b9050919050565b6000602082019050818103600083015261217081611e3a565b9050919050565b6000602082019050818103600083015261219081611e7a565b9050919050565b600060208201905081810360008301526121b081611eba565b9050919050565b600060208201905081810360008301526121d081611f20565b9050919050565b60006020820190506121ec6000830184611f86565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561221957612218612461565b5b8060405250919050565b600067ffffffffffffffff82111561223e5761223d612461565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600061228582612360565b915061229083612360565b9250826122a05761229f612403565b5b828204905092915050565b60006122b682612360565b91506122c183612360565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156122fa576122f96123d4565b5b828202905092915050565b600061231082612340565b9050919050565b60008115159050919050565b600081905061233182612490565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061238b82612323565b9050919050565b82818337600083830152505050565b60005b838110156123bf5780820151818401526020810190506123a4565b838111156123ce576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600281106124a1576124a0612432565b5b50565b6124ad81612336565b81146124b857600080fd5b50565b6124c481612360565b81146124cf57600080fd5b50565b6124db8161236a565b81146124e657600080fd5b5056fea26469706673582212202a748bca04b591df019aea34b3555ea18bb8c7df51331c35288186232b07ab5e64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1615:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "171:171:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "181:91:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "265:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "270:1:3",
                        "type": "",
                        "value": "3"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "188:76:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "188:84:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "181:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "293:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "298:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "289:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "289:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "302:5:3",
                        "type": "",
                        "value": "PUT"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "282:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "282:26:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "282:26:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "318:18:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "329:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "334:1:3",
                        "type": "",
                        "value": "3"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "325:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "325:11:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "318:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_08f5cef085f1c57c9b95d4f7af2f84617041386faf839e3dcfd4f97829a91e11_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "159:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "167:3:3",
                "type": ""
              }
            ],
            "src": "7:335:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "512:172:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "522:91:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "606:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "611:1:3",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "529:76:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "529:84:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "522:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "634:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "639:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "630:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "630:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "643:6:3",
                        "type": "",
                        "value": "CALL"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "623:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "623:27:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "623:27:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "660:18:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "671:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "676:1:3",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "667:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "667:11:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "660:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_706a455ca44ffc9f46e1c567fb1a4fdf73956f8e912065b7c4c6af237e247d9c_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "500:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "508:3:3",
                "type": ""
              }
            ],
            "src": "348:336:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "879:192:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "890:155:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1041:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_08f5cef085f1c57c9b95d4f7af2f84617041386faf839e3dcfd4f97829a91e11_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "897:142:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "897:148:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "890:3:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1055:10:3",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1062:3:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1055:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_08f5cef085f1c57c9b95d4f7af2f84617041386faf839e3dcfd4f97829a91e11__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "866:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "875:3:3",
                "type": ""
              }
            ],
            "src": "690:381:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1266:192:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1277:155:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1428:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_706a455ca44ffc9f46e1c567fb1a4fdf73956f8e912065b7c4c6af237e247d9c_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1284:142:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1284:148:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1277:3:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1442:10:3",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1449:3:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1442:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_706a455ca44ffc9f46e1c567fb1a4fdf73956f8e912065b7c4c6af237e247d9c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1253:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1262:3:3",
                "type": ""
              }
            ],
            "src": "1077:381:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1578:34:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1588:18:3",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1603:3:3"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1588:11:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1550:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1555:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1566:11:3",
                "type": ""
              }
            ],
            "src": "1464:148:3"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_stringliteral_08f5cef085f1c57c9b95d4f7af2f84617041386faf839e3dcfd4f97829a91e11_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 3)\n\n        mstore(add(pos, 0), \"PUT\")\n\n        end := add(pos, 3)\n    }\n\n    function abi_encode_t_stringliteral_706a455ca44ffc9f46e1c567fb1a4fdf73956f8e912065b7c4c6af237e247d9c_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 4)\n\n        mstore(add(pos, 0), \"CALL\")\n\n        end := add(pos, 4)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_08f5cef085f1c57c9b95d4f7af2f84617041386faf839e3dcfd4f97829a91e11__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_08f5cef085f1c57c9b95d4f7af2f84617041386faf839e3dcfd4f97829a91e11_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_706a455ca44ffc9f46e1c567fb1a4fdf73956f8e912065b7c4c6af237e247d9c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_706a455ca44ffc9f46e1c567fb1a4fdf73956f8e912065b7c4c6af237e247d9c_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:19825:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "91:260:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:74:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:3"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "125:41:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:49:3"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "110:14:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:65:3"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "191:5:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "198:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "184:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "184:21:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "184:21:3"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "214:27:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "229:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "236:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "225:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:16:3"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "218:3:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "260:3:3"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "265:6:3"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "256:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "256:16:3"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "274:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "253:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:25:3"
                  },
                  "nodeType": "YulIf",
                  "src": "250:2:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "328:3:3"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "333:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "338:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "304:23:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "304:41:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "304:41:3"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "64:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "69:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "77:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "85:5:3",
                "type": ""
              }
            ],
            "src": "7:344:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "419:79:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "429:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "444:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "438:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "438:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "429:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "486:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "460:25:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "460:32:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "460:32:3"
                }
              ]
            },
            "name": "abi_decode_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "397:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "405:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "413:5:3",
                "type": ""
              }
            ],
            "src": "357:141:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "580:211:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "629:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "638:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "641:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "631:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "631:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "631:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "608:6:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "616:4:3",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "604:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "604:17:3"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "623:3:3"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "600:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "600:27:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "593:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "593:35:3"
                  },
                  "nodeType": "YulIf",
                  "src": "590:2:3"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "654:34:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "681:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "668:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:20:3"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "658:6:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "697:88:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "758:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "766:4:3",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "754:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "754:17:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "773:6:3"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "781:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "706:47:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "706:79:3"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "697:5:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "558:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "566:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "574:5:3",
                "type": ""
              }
            ],
            "src": "518:273:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "849:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "859:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "881:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "868:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "868:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "859:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "924:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "897:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "897:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "897:33:3"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "827:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "835:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "843:5:3",
                "type": ""
              }
            ],
            "src": "797:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1005:80:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1015:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1030:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1024:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1024:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1015:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1073:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1046:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1046:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1046:33:3"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "983:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "991:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "999:5:3",
                "type": ""
              }
            ],
            "src": "942:143:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1153:79:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1163:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1178:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1172:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1172:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1163:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1220:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint80",
                      "nodeType": "YulIdentifier",
                      "src": "1194:25:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1194:32:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1194:32:3"
                }
              ]
            },
            "name": "abi_decode_t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1131:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1139:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1147:5:3",
                "type": ""
              }
            ],
            "src": "1091:141:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1304:196:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1350:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1359:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1362:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1352:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1352:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1352:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1325:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1334:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1321:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1321:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1346:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1317:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1317:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1314:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1376:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1391:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1405:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1395:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1420:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1455:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1466:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1451:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1451:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1475:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1430:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1430:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1420:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1274:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1285:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1297:6:3",
                "type": ""
              }
            ],
            "src": "1238:262:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1650:813:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1697:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1706:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1709:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1699:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1699:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1699:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1671:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1680:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1667:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1667:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1692:3:3",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1663:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1663:33:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1660:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1723:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1738:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1752:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1742:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1767:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1802:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1813:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1798:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1798:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1822:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1777:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1777:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1767:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1850:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1865:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1879:2:3",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1869:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1895:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1930:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1941:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1926:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1926:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1950:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1905:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1905:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1895:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1978:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1993:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2007:2:3",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1997:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2023:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2058:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2069:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2054:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2054:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2078:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2033:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2033:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2023:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2106:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2121:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2135:2:3",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2125:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2151:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2186:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2197:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2182:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2182:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2206:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2161:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2161:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "2151:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2234:222:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2249:47:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2280:9:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2291:3:3",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2276:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2276:19:3"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2263:12:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2263:33:3"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2253:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2343:16:3",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2352:1:3",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2355:1:3",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2345:6:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2345:12:3"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2345:12:3"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2315:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2323:18:3",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2312:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2312:30:3"
                      },
                      "nodeType": "YulIf",
                      "src": "2309:2:3"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2373:73:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2418:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2429:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2414:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2414:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2438:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2383:30:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2383:63:3"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "2373:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1588:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1599:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1611:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1619:6:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1627:6:3",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1635:6:3",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1643:6:3",
                "type": ""
              }
            ],
            "src": "1506:957:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2611:762:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2658:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2667:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2670:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2660:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2660:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2660:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2632:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2641:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2628:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2628:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2653:3:3",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2624:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2624:33:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2621:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2684:127:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2699:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2713:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2703:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2728:73:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2773:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2784:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2769:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2769:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2793:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2738:30:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2738:63:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2728:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2821:128:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2836:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2850:2:3",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2840:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2866:73:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2911:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2922:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2907:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2907:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2931:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2876:30:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2876:63:3"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2866:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2959:129:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2974:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2988:2:3",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2978:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3004:74:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3050:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3061:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3046:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3046:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3070:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3014:31:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3014:64:3"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3004:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3098:129:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3113:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3127:2:3",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3117:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3143:74:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3189:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3200:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3185:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3185:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3209:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3153:31:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3153:64:3"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3143:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3237:129:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3252:17:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3266:3:3",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3256:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3283:73:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3328:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3339:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3324:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3324:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3348:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3293:30:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3293:63:3"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3283:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2549:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2560:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2572:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2580:6:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2588:6:3",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2596:6:3",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2604:6:3",
                "type": ""
              }
            ],
            "src": "2469:904:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3460:61:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3477:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3508:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "3482:25:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3482:32:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3470:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3470:45:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3470:45:3"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3448:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3455:3:3",
                "type": ""
              }
            ],
            "src": "3379:142:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3586:50:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3603:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3623:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3608:14:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3608:21:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3596:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3596:34:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3596:34:3"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3574:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3581:3:3",
                "type": ""
              }
            ],
            "src": "3527:109:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3718:77:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3735:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3782:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_OptionType_$32_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "3740:41:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3740:48:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3728:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3728:61:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3728:61:3"
                }
              ]
            },
            "name": "abi_encode_t_enum$_OptionType_$32_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3706:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3713:3:3",
                "type": ""
              }
            ],
            "src": "3642:153:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3911:267:3",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3921:53:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3968:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3935:32:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3935:39:3"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3925:6:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3983:96:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4067:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4072:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3990:76:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3990:89:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3983:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4114:5:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4121:4:3",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4110:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4110:16:3"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4128:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4133:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4088:21:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4088:52:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4088:52:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4149:23:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4160:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4165:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4156:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4156:16:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4149:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3892:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3899:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3907:3:3",
                "type": ""
              }
            ],
            "src": "3801:377:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4330:233:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4340:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4406:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4411:2:3",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4347:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4347:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4340:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4435:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4440:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4431:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4431:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4444:34:3",
                        "type": "",
                        "value": "Option is canceled/expired and c"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4424:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4424:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4424:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4500:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4505:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4496:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4496:12:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4510:17:3",
                        "type": "",
                        "value": "annot be bought"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4489:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4489:39:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4489:39:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4538:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4549:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4554:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4545:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4545:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4538:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4318:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4326:3:3",
                "type": ""
              }
            ],
            "src": "4184:379:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4715:224:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4725:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4791:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4796:2:3",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4732:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4732:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4725:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4820:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4825:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4816:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4816:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4829:34:3",
                        "type": "",
                        "value": "Incorrect LINK amount sent to ex"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4809:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4809:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4809:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4885:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4890:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4881:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4881:12:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4895:8:3",
                        "type": "",
                        "value": "ercise"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4874:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4874:30:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4874:30:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4914:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4925:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4930:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4921:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4921:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4914:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4703:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4711:3:3",
                "type": ""
              }
            ],
            "src": "4569:370:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5091:230:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5101:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5167:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5172:2:3",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5108:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5108:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5101:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5196:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5201:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5192:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5192:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5205:34:3",
                        "type": "",
                        "value": "Only CALL and PUT option types a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5185:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5185:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5185:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5261:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5266:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5257:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5257:12:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5271:14:3",
                        "type": "",
                        "value": "re supported"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5250:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5250:36:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5250:36:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5296:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5307:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5312:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5303:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5303:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5296:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_46229350b868ccea281aa9277d359e6a560f0f2fd6d51e1f08ceca850f264338_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5079:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5087:3:3",
                "type": ""
              }
            ],
            "src": "4945:376:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5473:178:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5483:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5549:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5554:2:3",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5490:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5490:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5483:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5578:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5583:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5574:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5574:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5587:28:3",
                        "type": "",
                        "value": "You do not own this option"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5567:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5567:49:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5567:49:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5626:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5637:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5642:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5633:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5633:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5626:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5461:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5469:3:3",
                "type": ""
              }
            ],
            "src": "5327:324:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5803:169:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5813:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5879:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5884:2:3",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5820:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5820:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5813:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5908:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5913:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5904:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5904:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5917:19:3",
                        "type": "",
                        "value": "Option is expired"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5897:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5897:40:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5897:40:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5947:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5958:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5963:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5954:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5954:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5947:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5791:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5799:3:3",
                "type": ""
              }
            ],
            "src": "5657:315:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6124:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6134:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6200:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6205:2:3",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6141:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6141:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6134:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6229:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6234:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6225:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6225:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6238:34:3",
                        "type": "",
                        "value": "Incorrect amount of Matic suppli"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6218:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6218:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6218:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6294:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6299:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6290:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6290:12:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6304:4:3",
                        "type": "",
                        "value": "ed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6283:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6283:26:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6283:26:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6319:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6330:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6335:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6326:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6326:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6319:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6112:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6120:3:3",
                "type": ""
              }
            ],
            "src": "5978:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6496:228:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6506:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6572:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6577:2:3",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6513:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6513:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6506:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6601:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6606:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6597:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6597:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6610:34:3",
                        "type": "",
                        "value": "Incorrect amount of MATIC sent f"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6590:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6590:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6590:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6666:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6671:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6662:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6662:12:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6676:12:3",
                        "type": "",
                        "value": "or premium"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6655:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6655:34:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6655:34:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6699:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6710:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6715:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6706:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6706:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6699:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6484:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6492:3:3",
                "type": ""
              }
            ],
            "src": "6350:374:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6876:181:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6886:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6952:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6957:2:3",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6893:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6893:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6886:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6981:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6986:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6977:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6977:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6990:31:3",
                        "type": "",
                        "value": "You did not write this option"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6970:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6970:52:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6970:52:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7032:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7043:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7048:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7039:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7039:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7032:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6864:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6872:3:3",
                "type": ""
              }
            ],
            "src": "6730:327:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7209:170:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7219:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7285:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7290:2:3",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7226:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7226:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7219:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7314:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7319:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7310:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7310:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7323:20:3",
                        "type": "",
                        "value": "Round not complete"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7303:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7303:41:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7303:41:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7354:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7365:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7370:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7361:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7361:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7354:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7197:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7205:3:3",
                "type": ""
              }
            ],
            "src": "7063:316:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7531:182:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7541:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7607:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7612:2:3",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7548:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7548:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7541:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7636:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7641:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7632:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7632:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7645:32:3",
                        "type": "",
                        "value": "This option cannot be canceled"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7625:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7625:53:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7625:53:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7688:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7699:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7704:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7695:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7695:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7688:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7519:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7527:3:3",
                "type": ""
              }
            ],
            "src": "7385:328:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7865:226:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7875:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7941:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7946:2:3",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7882:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7882:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7875:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7970:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7975:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7966:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7966:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7979:34:3",
                        "type": "",
                        "value": "This option is not eligible for "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7959:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7959:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7959:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8035:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8040:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8031:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8031:12:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8045:10:3",
                        "type": "",
                        "value": "withdraw"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8024:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8024:32:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8024:32:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8066:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8077:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8082:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8073:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8073:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8066:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7853:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7861:3:3",
                "type": ""
              }
            ],
            "src": "7719:372:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8243:219:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8253:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8319:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8324:2:3",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8260:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8260:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8253:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8348:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8353:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8344:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8344:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8357:34:3",
                        "type": "",
                        "value": "Option has already been exercise"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8337:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8337:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8337:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8413:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8418:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8409:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8409:12:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8423:3:3",
                        "type": "",
                        "value": "d"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8402:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8402:25:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8402:25:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8437:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8448:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8453:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8444:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8444:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8437:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8231:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8239:3:3",
                "type": ""
              }
            ],
            "src": "8097:365:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8533:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8550:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8573:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "8555:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8555:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8543:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8543:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8543:37:3"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8521:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8528:3:3",
                "type": ""
              }
            ],
            "src": "8468:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8728:139:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8739:102:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8828:6:3"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8837:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8746:81:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8746:95:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8739:3:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8851:10:3",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "8858:3:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8851:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8707:3:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8713:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8724:3:3",
                "type": ""
              }
            ],
            "src": "8592:275:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9283:984:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9293:27:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9305:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9316:3:3",
                        "type": "",
                        "value": "352"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9301:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9301:19:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9293:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9385:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9398:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9409:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9394:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9394:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_OptionType_$32_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9330:54:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9330:82:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9330:82:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9466:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9479:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9490:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9475:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9475:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9422:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9422:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9422:72:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9548:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9561:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9572:2:3",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9557:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9557:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9504:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9504:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9504:72:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "9630:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9643:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9654:2:3",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9639:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9639:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9586:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9586:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9586:72:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "9712:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9725:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9736:3:3",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9721:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9721:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9668:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9668:73:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9668:73:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "9789:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9802:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9813:3:3",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9798:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9798:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9751:37:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9751:67:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9751:67:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "9866:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9879:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9890:3:3",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9875:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9875:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9828:37:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9828:67:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9828:67:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "9949:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9962:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9973:3:3",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9958:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9958:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9905:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9905:73:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9905:73:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value8",
                        "nodeType": "YulIdentifier",
                        "src": "10032:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10045:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10056:3:3",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10041:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10041:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9988:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9988:73:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9988:73:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value9",
                        "nodeType": "YulIdentifier",
                        "src": "10131:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10144:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10155:3:3",
                            "type": "",
                            "value": "288"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10140:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10140:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10071:59:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10071:89:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10071:89:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value10",
                        "nodeType": "YulIdentifier",
                        "src": "10230:7:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10244:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10255:3:3",
                            "type": "",
                            "value": "320"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10240:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10240:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10170:59:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10170:90:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10170:90:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_OptionType_$32_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_address_payable_t_address_payable__to_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_address_payable_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9174:9:3",
                "type": ""
              },
              {
                "name": "value10",
                "nodeType": "YulTypedName",
                "src": "9186:7:3",
                "type": ""
              },
              {
                "name": "value9",
                "nodeType": "YulTypedName",
                "src": "9195:6:3",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "9203:6:3",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "9211:6:3",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "9219:6:3",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "9227:6:3",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "9235:6:3",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9243:6:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9251:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9259:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9267:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9278:4:3",
                "type": ""
              }
            ],
            "src": "8873:1394:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10444:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10454:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10466:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10477:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10462:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10462:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10454:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10501:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10512:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10497:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10497:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10520:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10526:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10516:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10516:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10490:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10490:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10490:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10546:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10680:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10554:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10554:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10546:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10424:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10439:4:3",
                "type": ""
              }
            ],
            "src": "10273:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10869:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10879:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10891:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10902:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10887:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10887:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10879:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10926:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10937:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10922:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10922:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10945:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10951:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10941:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10941:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10915:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10915:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10915:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10971:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11105:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10979:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10979:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10971:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10849:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10864:4:3",
                "type": ""
              }
            ],
            "src": "10698:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11294:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11304:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11316:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11327:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11312:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11312:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11304:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11351:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11362:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11347:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11347:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11370:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11376:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11366:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11366:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11340:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11340:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11340:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11396:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11530:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_46229350b868ccea281aa9277d359e6a560f0f2fd6d51e1f08ceca850f264338_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11404:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11404:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11396:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_46229350b868ccea281aa9277d359e6a560f0f2fd6d51e1f08ceca850f264338__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11274:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11289:4:3",
                "type": ""
              }
            ],
            "src": "11123:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11719:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11729:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11741:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11752:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11737:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11737:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11729:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11776:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11787:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11772:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11772:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11795:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11801:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11791:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11791:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11765:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11765:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11765:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11821:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11955:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11829:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11829:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11821:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11699:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11714:4:3",
                "type": ""
              }
            ],
            "src": "11548:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12144:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12154:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12166:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12177:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12162:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12162:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12154:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12201:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12212:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12197:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12197:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12220:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12226:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12216:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12216:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12190:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12190:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12190:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12246:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12380:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12254:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12254:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12246:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12124:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12139:4:3",
                "type": ""
              }
            ],
            "src": "11973:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12569:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12579:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12591:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12602:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12587:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12587:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12579:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12626:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12637:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12622:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12622:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12645:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12651:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12641:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12641:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12615:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12615:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12615:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12671:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12805:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12679:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12679:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12671:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12549:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12564:4:3",
                "type": ""
              }
            ],
            "src": "12398:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12994:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13004:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13016:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13027:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13012:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13012:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13004:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13051:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13062:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13047:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13047:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13070:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13076:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13066:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13066:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13040:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13040:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13040:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13096:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13230:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13104:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13104:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13096:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12974:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12989:4:3",
                "type": ""
              }
            ],
            "src": "12823:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13419:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13429:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13441:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13452:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13437:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13437:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13429:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13476:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13487:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13472:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13472:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13495:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13501:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13491:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13491:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13465:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13465:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13465:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13521:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13655:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13529:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13529:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13521:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13399:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13414:4:3",
                "type": ""
              }
            ],
            "src": "13248:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13844:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13854:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13866:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13877:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13862:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13862:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13854:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13901:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13912:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13897:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13897:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13920:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13926:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13916:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13916:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13890:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13890:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13890:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13946:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14080:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13954:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13954:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13946:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13824:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13839:4:3",
                "type": ""
              }
            ],
            "src": "13673:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14269:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14279:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14291:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14302:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14287:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14287:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14279:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14326:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14337:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14322:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14322:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14345:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14351:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14341:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14341:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14315:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14315:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14315:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14371:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14505:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14379:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14379:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14371:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14249:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14264:4:3",
                "type": ""
              }
            ],
            "src": "14098:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14694:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14704:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14716:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14727:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14712:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14712:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14704:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14751:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14762:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14747:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14747:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14770:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14776:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14766:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14766:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14740:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14740:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14740:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14796:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14930:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14804:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14804:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14796:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14674:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14689:4:3",
                "type": ""
              }
            ],
            "src": "14523:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15119:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15129:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15141:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15152:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15137:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15137:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15129:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15176:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15187:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15172:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15172:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15195:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15201:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15191:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15191:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15165:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15165:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15165:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15221:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15355:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15229:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15229:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15221:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15099:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15114:4:3",
                "type": ""
              }
            ],
            "src": "14948:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15471:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15481:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15493:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15504:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15489:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15489:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15481:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15561:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15574:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15585:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15570:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15570:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15517:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15517:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15517:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15443:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15455:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15466:4:3",
                "type": ""
              }
            ],
            "src": "15373:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15641:243:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15651:19:3",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15667:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "15661:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15661:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "15651:6:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15679:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "15701:6:3"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "15709:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15697:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15697:17:3"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "15683:10:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15825:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "15827:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15827:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15827:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "15768:10:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15780:18:3",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "15765:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15765:34:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "15804:10:3"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15816:6:3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "15801:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15801:22:3"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "15762:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15762:62:3"
                  },
                  "nodeType": "YulIf",
                  "src": "15759:2:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15863:2:3",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "15867:10:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15856:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15856:22:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15856:22:3"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "15625:4:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15634:6:3",
                "type": ""
              }
            ],
            "src": "15601:283:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15957:265:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16062:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "16064:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16064:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16064:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16034:6:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16042:18:3",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "16031:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16031:30:3"
                  },
                  "nodeType": "YulIf",
                  "src": "16028:2:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16114:41:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "16130:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16138:4:3",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16126:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16126:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16149:4:3",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "16145:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16145:9:3"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "16122:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16122:33:3"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "16114:4:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16192:23:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "16204:4:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16210:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16200:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16200:15:3"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "16192:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "15941:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "15952:4:3",
                "type": ""
              }
            ],
            "src": "15890:332:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16287:40:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16298:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16314:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "16308:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16308:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "16298:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16270:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "16280:6:3",
                "type": ""
              }
            ],
            "src": "16228:99:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16429:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16446:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16451:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16439:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16439:19:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16439:19:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16467:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16486:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16491:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16482:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16482:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "16467:11:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16401:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "16406:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "16417:11:3",
                "type": ""
              }
            ],
            "src": "16333:169:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16622:34:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16632:18:3",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "16647:3:3"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "16632:11:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16594:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "16599:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "16610:11:3",
                "type": ""
              }
            ],
            "src": "16508:148:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16704:143:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16714:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16737:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16719:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16719:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "16714:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16748:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16771:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16753:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16753:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "16748:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16795:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "16797:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16797:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16797:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16792:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16785:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16785:9:3"
                  },
                  "nodeType": "YulIf",
                  "src": "16782:2:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16827:14:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16836:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16839:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "16832:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16832:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "16827:1:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16693:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16696:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "16702:1:3",
                "type": ""
              }
            ],
            "src": "16662:185:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16901:300:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16911:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16934:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16916:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16916:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "16911:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16945:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16968:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16950:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16950:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "16945:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17143:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "17145:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17145:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17145:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "17055:1:3"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "17048:6:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17048:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "17041:6:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17041:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "17063:1:3"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17070:66:3",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "17138:1:3"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "17066:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17066:74:3"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "17060:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17060:81:3"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "17037:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17037:105:3"
                  },
                  "nodeType": "YulIf",
                  "src": "17034:2:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17175:20:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17190:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17193:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "17186:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17186:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "17175:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16884:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16887:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "16893:7:3",
                "type": ""
              }
            ],
            "src": "16853:348:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17260:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17270:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17299:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "17281:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17281:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17270:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17242:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17252:7:3",
                "type": ""
              }
            ],
            "src": "17207:104:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17359:48:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17369:32:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17394:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "17387:6:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17387:13:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17380:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17380:21:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17369:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17341:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17351:7:3",
                "type": ""
              }
            ],
            "src": "17317:90:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17471:79:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17481:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "17492:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17481:7:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17538:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_OptionType_$32",
                      "nodeType": "YulIdentifier",
                      "src": "17498:39:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17498:46:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17498:46:3"
                }
              ]
            },
            "name": "cleanup_t_enum$_OptionType_$32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17453:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17463:7:3",
                "type": ""
              }
            ],
            "src": "17413:137:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17600:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17610:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "17621:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17610:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17582:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17592:7:3",
                "type": ""
              }
            ],
            "src": "17556:76:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17683:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17693:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17708:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17715:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "17704:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17704:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17693:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17665:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17675:7:3",
                "type": ""
              }
            ],
            "src": "17638:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17815:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17825:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "17836:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17825:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17797:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17807:7:3",
                "type": ""
              }
            ],
            "src": "17770:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17897:61:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17907:45:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17922:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17929:22:3",
                        "type": "",
                        "value": "0xffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "17918:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17918:34:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17907:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17879:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17889:7:3",
                "type": ""
              }
            ],
            "src": "17853:105:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18035:66:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18045:50:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18089:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_OptionType_$32",
                      "nodeType": "YulIdentifier",
                      "src": "18058:30:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18058:37:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "18045:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_OptionType_$32_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18015:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "18025:9:3",
                "type": ""
              }
            ],
            "src": "17964:137:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18158:103:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "18181:3:3"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "18186:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "18191:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "18168:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18168:30:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18168:30:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "18239:3:3"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "18244:6:3"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18235:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18235:16:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18253:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18228:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18228:27:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18228:27:3"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "18140:3:3",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "18145:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "18150:6:3",
                "type": ""
              }
            ],
            "src": "18107:154:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18316:258:3",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18326:10:3",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "18335:1:3",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "18330:1:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18395:63:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "18420:3:3"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "18425:1:3"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "18416:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "18416:11:3"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "18439:3:3"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "18444:1:3"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "18435:3:3"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "18435:11:3"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "18429:5:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "18429:18:3"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "18409:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18409:39:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18409:39:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "18356:1:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "18359:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "18353:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18353:13:3"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "18367:19:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "18369:15:3",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "18378:1:3"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18381:2:3",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "18374:3:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18374:10:3"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "18369:1:3"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "18349:3:3",
                    "statements": []
                  },
                  "src": "18345:113:3"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18492:76:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "18542:3:3"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "18547:6:3"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "18538:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "18538:16:3"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18556:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "18531:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18531:27:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18531:27:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "18473:1:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "18476:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "18470:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18470:13:3"
                  },
                  "nodeType": "YulIf",
                  "src": "18467:2:3"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "18298:3:3",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "18303:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "18308:6:3",
                "type": ""
              }
            ],
            "src": "18267:307:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18608:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18625:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18628:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18618:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18618:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18618:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18722:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18725:4:3",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18715:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18715:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18715:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18746:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18749:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18739:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18739:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18739:15:3"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "18580:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18794:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18811:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18814:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18804:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18804:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18804:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18908:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18911:4:3",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18901:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18901:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18901:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18932:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18935:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18925:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18925:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18925:15:3"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "18766:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18980:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18997:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19000:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18990:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18990:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18990:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19094:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19097:4:3",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19087:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19087:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19087:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19118:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19121:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "19111:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19111:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19111:15:3"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "18952:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19166:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19183:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19186:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19176:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19176:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19176:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19280:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19283:4:3",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19273:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19273:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19273:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19304:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19307:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "19297:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19297:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19297:15:3"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "19138:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19380:62:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19414:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "19416:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19416:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19416:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "19403:5:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19410:1:3",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "19400:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19400:12:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19393:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19393:20:3"
                  },
                  "nodeType": "YulIf",
                  "src": "19390:2:3"
                }
              ]
            },
            "name": "validator_assert_t_enum$_OptionType_$32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19373:5:3",
                "type": ""
              }
            ],
            "src": "19324:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19490:78:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19546:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19555:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19558:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19548:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19548:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19548:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "19513:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "19537:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "19520:16:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19520:23:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "19510:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19510:34:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19503:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19503:42:3"
                  },
                  "nodeType": "YulIf",
                  "src": "19500:2:3"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19483:5:3",
                "type": ""
              }
            ],
            "src": "19448:120:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19617:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19674:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19683:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19686:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19676:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19676:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19676:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "19640:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "19665:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "19647:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19647:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "19637:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19637:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19630:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19630:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "19627:2:3"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19610:5:3",
                "type": ""
              }
            ],
            "src": "19574:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19744:78:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19800:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19809:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19812:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19802:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19802:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19802:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "19767:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "19791:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint80",
                              "nodeType": "YulIdentifier",
                              "src": "19774:16:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19774:23:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "19764:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19764:34:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19757:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19757:42:3"
                  },
                  "nodeType": "YulIf",
                  "src": "19754:2:3"
                }
              ]
            },
            "name": "validator_revert_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19737:5:3",
                "type": ""
              }
            ],
            "src": "19702:120:3"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_enum$_OptionType_$32_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_OptionType_$32_to_t_uint8(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n\n        mstore(add(pos, 0), \"Option is canceled/expired and c\")\n\n        mstore(add(pos, 32), \"annot be bought\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Incorrect LINK amount sent to ex\")\n\n        mstore(add(pos, 32), \"ercise\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_46229350b868ccea281aa9277d359e6a560f0f2fd6d51e1f08ceca850f264338_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n\n        mstore(add(pos, 0), \"Only CALL and PUT option types a\")\n\n        mstore(add(pos, 32), \"re supported\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n\n        mstore(add(pos, 0), \"You do not own this option\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n\n        mstore(add(pos, 0), \"Option is expired\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n\n        mstore(add(pos, 0), \"Incorrect amount of Matic suppli\")\n\n        mstore(add(pos, 32), \"ed\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n\n        mstore(add(pos, 0), \"Incorrect amount of MATIC sent f\")\n\n        mstore(add(pos, 32), \"or premium\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n\n        mstore(add(pos, 0), \"You did not write this option\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n\n        mstore(add(pos, 0), \"Round not complete\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n\n        mstore(add(pos, 0), \"This option cannot be canceled\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n\n        mstore(add(pos, 0), \"This option is not eligible for \")\n\n        mstore(add(pos, 32), \"withdraw\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n\n        mstore(add(pos, 0), \"Option has already been exercise\")\n\n        mstore(add(pos, 32), \"d\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_enum$_OptionType_$32_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_address_payable_t_address_payable__to_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_address_payable_t_address_payable__fromStack_reversed(headStart , value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 352)\n\n        abi_encode_t_enum$_OptionType_$32_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value9,  add(headStart, 288))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value10,  add(headStart, 320))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_46229350b868ccea281aa9277d359e6a560f0f2fd6d51e1f08ceca850f264338__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_46229350b868ccea281aa9277d359e6a560f0f2fd6d51e1f08ceca850f264338_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_OptionType_$32(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_OptionType_$32(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function convert_t_enum$_OptionType_$32_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_OptionType_$32(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_OptionType_$32(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "124:7635:0:-:0;;;389:24;;;;;;;:::i;:::-;;;;;;;;;;;;;379:35;;;;;;360:54;;448:23;;;;;;;:::i;:::-;;;;;;;;;;;;;438:34;;;;;;420:52;;1390:599;;;;;;;;;;1784:42;1750:9;;:77;;;;;;;;;;;;;;;;;;1892:42;1866:4;;:69;;;;;;;;;;;;;;;;;;1976:4;1945:12;;:37;;;;;;;;;;;;;;;;;;124:7635;;7:335:3;;188:84;270:1;265:3;188:84;:::i;:::-;181:91;;302:5;298:1;293:3;289:11;282:26;334:1;329:3;325:11;318:18;;171:171;;;:::o;348:336::-;;529:84;611:1;606:3;529:84;:::i;:::-;522:91;;643:6;639:1;634:3;630:11;623:27;676:1;671:3;667:11;660:18;;512:172;;;:::o;690:381::-;;897:148;1041:3;897:148;:::i;:::-;890:155;;1062:3;1055:10;;879:192;;;:::o;1077:381::-;;1284:148;1428:3;1284:148;:::i;:::-;1277:155;;1449:3;1442:10;;1266:192;;;:::o;1464:148::-;;1603:3;1588:18;;1578:34;;;;:::o;124:7635:0:-;;;;;;;",
  "deployedSourceMap": "124:7635:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2933:910;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1290:25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;6727:532;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5037:1590;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2036:552;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7459:181;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3942:408;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7646:111;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4436:512;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2933:910;3058:18;3106:10;3089:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;3079:39;;;;;;3058:60;;3150:8;;3136:10;:22;:47;;;;3176:7;;3162:10;:21;3136:47;3128:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;3263:6;3250:9;:19;3242:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3319:14;:12;:14::i;:::-;3343:25;3395:8;;3381:10;:22;3378:161;;;3444:15;3427:32;;3378:161;;;3514:14;3497:31;;3378:161;3548:15;3600:6;3587:10;;:19;;;;:::i;:::-;3576:6;3567;:15;;;;:::i;:::-;3566:41;;;;:::i;:::-;3548:59;;3679:9;3694:141;;;;;;;;3701:14;3694:141;;;;;;;;;;;;;;;;;;;;3717:6;3694:141;;;;3725:7;3694:141;;;;3734:6;3694:141;;;;3742:6;3694:141;;;;3750:5;3694:141;;;;;;3757:5;3694:141;;;;;;3764:9;:16;;;;3694:141;;;;3782:10;3694:141;;;;3802:10;3694:141;;;;;;3831:1;3694:141;;;;;3679:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2933:910;;;;;;;;:::o;1290:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6727:532::-;6813:9;6823:2;6813:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;6799:34;;:10;:34;;;6791:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;6967:15;6943:9;6953:2;6943:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;:39;;:67;;;;;6987:9;6997:2;6987:13;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;6986:24;6943:67;:94;;;;;7015:9;7025:2;7015:13;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;7014:23;6943:94;6935:147;;;;;;;;;;;;:::i;:::-;;;;;;;;;7092:9;7102:2;7092:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;:29;;:51;7122:9;7132:2;7122:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;7092:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7248:4;7223:9;7233:2;7223:13;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;;:29;;;;;;;;;;;;;;;;;;6727:532;:::o;5037:1590::-;5340:10;5317:33;;:9;5327:2;5317:13;;;;;;;;;;;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:33;;;5309:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;5400:9;5410:2;5400:13;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;5399:24;5391:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;5502:15;5479:9;5489:2;5479:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;:38;5471:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5598:14;:12;:14::i;:::-;5649:16;5689:9;5699:2;5689:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;5668:9;5678:2;5668:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;:41;;;;:::i;:::-;5649:60;;5773:15;5819:6;5806:10;;:19;;;;:::i;:::-;5791:11;:35;;;;:::i;:::-;5773:53;;6005:10;5992:9;:23;5984:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;6099:15;6071:43;;;;;;;;;;;;;;;;:9;6081:2;6071:13;;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;6068:513;;;6181:9;6191:2;6181:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;:29;;:41;6211:10;6181:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6293:10;6285:28;;:50;6314:9;6324:2;6314:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;6285:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6068:513;;;6431:10;6423:28;;:50;6452:9;6462:2;6452:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;6423:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6529:9;6539:2;6529:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;:29;;:41;6559:10;6529:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6068:513;6616:4;6590:9;6600:2;6590:13;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;:30;;;;;;;;;;;;;;;;;;5037:1590;;;:::o;2036:552::-;2082:4;2112:14;2141:9;2164:14;2192;2220:22;2255:9;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2098:184;;;;;;;;;;2372:1;2360:9;:13;2352:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;2575:5;2563:18;;;;;;;2036:552;:::o;7459:181::-;7513:14;:12;:14::i;:::-;7626:6;7613:10;;:19;;;;:::i;:::-;7588:9;7598:2;7588:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;7565:9;7575:2;7565:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;:43;;;;:::i;:::-;7564:69;;;;:::i;:::-;7537:9;7547:2;7537:13;;;;;;;;;;;;;;;;;;;;;;;;;;:24;;:96;;;;7459:181;:::o;3942:408::-;4020:9;4030:2;4020:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;4006:34;;:10;:34;;;3998:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;4149:9;4159:2;4149:13;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;4148:23;:60;;;;;4206:1;4175:33;;:9;4185:2;4175:13;;;;;;;;;;;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:33;;;4148:60;4140:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;4253:9;4263:2;4253:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;:29;;:51;4283:9;4293:2;4283:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;4253:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4339:4;4314:9;4324:2;4314:13;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;;:29;;;;;;;;;;;;;;;;;;3942:408;:::o;7646:111::-;7692:23;7734:9;:16;;;;7727:23;;7646:111;:::o;4436:512::-;4489:14;:12;:14::i;:::-;4522:9;4532:2;4522:13;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;4521:23;:65;;;;;4571:15;4548:9;4558:2;4548:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;:38;4521:65;4513:125;;;;;;;;;;;;:::i;:::-;;;;;;;;;4715:9;4725:2;4715:13;;;;;;;;;;;;;;;;;;;;;;;;;;:21;;;4702:9;:34;4694:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;4838:9;4848:2;4838:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;:29;;:52;4868:9;4878:2;4868:13;;;;;;;;;;;;;;;;;;;;;;;;;;:21;;;4838:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4930:10;4900:9;4910:2;4900:13;;;;;;;;;;;;;;;;;;;;;;;;;;:19;;;:41;;;;;;;;;;;;;;;;;;4436:512;:::o;2629:78::-;2685:15;:13;:15::i;:::-;2672:10;:28;;;;2629:78::o;7:344:3:-;;110:65;125:49;167:6;125:49;:::i;:::-;110:65;:::i;:::-;101:74;;198:6;191:5;184:21;236:4;229:5;225:16;274:3;265:6;260:3;256:16;253:25;250:2;;;291:1;288;281:12;250:2;304:41;338:6;333:3;328;304:41;:::i;:::-;91:260;;;;;;:::o;357:141::-;;444:6;438:13;429:22;;460:32;486:5;460:32;:::i;:::-;419:79;;;;:::o;518:273::-;;623:3;616:4;608:6;604:17;600:27;590:2;;641:1;638;631:12;590:2;681:6;668:20;706:79;781:3;773:6;766:4;758:6;754:17;706:79;:::i;:::-;697:88;;580:211;;;;;:::o;797:139::-;;881:6;868:20;859:29;;897:33;924:5;897:33;:::i;:::-;849:87;;;;:::o;942:143::-;;1030:6;1024:13;1015:22;;1046:33;1073:5;1046:33;:::i;:::-;1005:80;;;;:::o;1091:141::-;;1178:6;1172:13;1163:22;;1194:32;1220:5;1194:32;:::i;:::-;1153:79;;;;:::o;1238:262::-;;1346:2;1334:9;1325:7;1321:23;1317:32;1314:2;;;1362:1;1359;1352:12;1314:2;1405:1;1430:53;1475:7;1466:6;1455:9;1451:22;1430:53;:::i;:::-;1420:63;;1376:117;1304:196;;;;:::o;1506:957::-;;;;;;1692:3;1680:9;1671:7;1667:23;1663:33;1660:2;;;1709:1;1706;1699:12;1660:2;1752:1;1777:53;1822:7;1813:6;1802:9;1798:22;1777:53;:::i;:::-;1767:63;;1723:117;1879:2;1905:53;1950:7;1941:6;1930:9;1926:22;1905:53;:::i;:::-;1895:63;;1850:118;2007:2;2033:53;2078:7;2069:6;2058:9;2054:22;2033:53;:::i;:::-;2023:63;;1978:118;2135:2;2161:53;2206:7;2197:6;2186:9;2182:22;2161:53;:::i;:::-;2151:63;;2106:118;2291:3;2280:9;2276:19;2263:33;2323:18;2315:6;2312:30;2309:2;;;2355:1;2352;2345:12;2309:2;2383:63;2438:7;2429:6;2418:9;2414:22;2383:63;:::i;:::-;2373:73;;2234:222;1650:813;;;;;;;;:::o;2469:904::-;;;;;;2653:3;2641:9;2632:7;2628:23;2624:33;2621:2;;;2670:1;2667;2660:12;2621:2;2713:1;2738:63;2793:7;2784:6;2773:9;2769:22;2738:63;:::i;:::-;2728:73;;2684:127;2850:2;2876:63;2931:7;2922:6;2911:9;2907:22;2876:63;:::i;:::-;2866:73;;2821:128;2988:2;3014:64;3070:7;3061:6;3050:9;3046:22;3014:64;:::i;:::-;3004:74;;2959:129;3127:2;3153:64;3209:7;3200:6;3189:9;3185:22;3153:64;:::i;:::-;3143:74;;3098:129;3266:3;3293:63;3348:7;3339:6;3328:9;3324:22;3293:63;:::i;:::-;3283:73;;3237:129;2611:762;;;;;;;;:::o;3379:142::-;3482:32;3508:5;3482:32;:::i;:::-;3477:3;3470:45;3460:61;;:::o;3527:109::-;3608:21;3623:5;3608:21;:::i;:::-;3603:3;3596:34;3586:50;;:::o;3642:153::-;3740:48;3782:5;3740:48;:::i;:::-;3735:3;3728:61;3718:77;;:::o;3801:377::-;;3935:39;3968:5;3935:39;:::i;:::-;3990:89;4072:6;4067:3;3990:89;:::i;:::-;3983:96;;4088:52;4133:6;4128:3;4121:4;4114:5;4110:16;4088:52;:::i;:::-;4165:6;4160:3;4156:16;4149:23;;3911:267;;;;;:::o;4184:379::-;;4347:67;4411:2;4406:3;4347:67;:::i;:::-;4340:74;;4444:34;4440:1;4435:3;4431:11;4424:55;4510:17;4505:2;4500:3;4496:12;4489:39;4554:2;4549:3;4545:12;4538:19;;4330:233;;;:::o;4569:370::-;;4732:67;4796:2;4791:3;4732:67;:::i;:::-;4725:74;;4829:34;4825:1;4820:3;4816:11;4809:55;4895:8;4890:2;4885:3;4881:12;4874:30;4930:2;4925:3;4921:12;4914:19;;4715:224;;;:::o;4945:376::-;;5108:67;5172:2;5167:3;5108:67;:::i;:::-;5101:74;;5205:34;5201:1;5196:3;5192:11;5185:55;5271:14;5266:2;5261:3;5257:12;5250:36;5312:2;5307:3;5303:12;5296:19;;5091:230;;;:::o;5327:324::-;;5490:67;5554:2;5549:3;5490:67;:::i;:::-;5483:74;;5587:28;5583:1;5578:3;5574:11;5567:49;5642:2;5637:3;5633:12;5626:19;;5473:178;;;:::o;5657:315::-;;5820:67;5884:2;5879:3;5820:67;:::i;:::-;5813:74;;5917:19;5913:1;5908:3;5904:11;5897:40;5963:2;5958:3;5954:12;5947:19;;5803:169;;;:::o;5978:366::-;;6141:67;6205:2;6200:3;6141:67;:::i;:::-;6134:74;;6238:34;6234:1;6229:3;6225:11;6218:55;6304:4;6299:2;6294:3;6290:12;6283:26;6335:2;6330:3;6326:12;6319:19;;6124:220;;;:::o;6350:374::-;;6513:67;6577:2;6572:3;6513:67;:::i;:::-;6506:74;;6610:34;6606:1;6601:3;6597:11;6590:55;6676:12;6671:2;6666:3;6662:12;6655:34;6715:2;6710:3;6706:12;6699:19;;6496:228;;;:::o;6730:327::-;;6893:67;6957:2;6952:3;6893:67;:::i;:::-;6886:74;;6990:31;6986:1;6981:3;6977:11;6970:52;7048:2;7043:3;7039:12;7032:19;;6876:181;;;:::o;7063:316::-;;7226:67;7290:2;7285:3;7226:67;:::i;:::-;7219:74;;7323:20;7319:1;7314:3;7310:11;7303:41;7370:2;7365:3;7361:12;7354:19;;7209:170;;;:::o;7385:328::-;;7548:67;7612:2;7607:3;7548:67;:::i;:::-;7541:74;;7645:32;7641:1;7636:3;7632:11;7625:53;7704:2;7699:3;7695:12;7688:19;;7531:182;;;:::o;7719:372::-;;7882:67;7946:2;7941:3;7882:67;:::i;:::-;7875:74;;7979:34;7975:1;7970:3;7966:11;7959:55;8045:10;8040:2;8035:3;8031:12;8024:32;8082:2;8077:3;8073:12;8066:19;;7865:226;;;:::o;8097:365::-;;8260:67;8324:2;8319:3;8260:67;:::i;:::-;8253:74;;8357:34;8353:1;8348:3;8344:11;8337:55;8423:3;8418:2;8413:3;8409:12;8402:25;8453:2;8448:3;8444:12;8437:19;;8243:219;;;:::o;8468:118::-;8555:24;8573:5;8555:24;:::i;:::-;8550:3;8543:37;8533:53;;:::o;8592:275::-;;8746:95;8837:3;8828:6;8746:95;:::i;:::-;8739:102;;8858:3;8851:10;;8728:139;;;;:::o;8873:1394::-;;9316:3;9305:9;9301:19;9293:27;;9330:82;9409:1;9398:9;9394:17;9385:6;9330:82;:::i;:::-;9422:72;9490:2;9479:9;9475:18;9466:6;9422:72;:::i;:::-;9504;9572:2;9561:9;9557:18;9548:6;9504:72;:::i;:::-;9586;9654:2;9643:9;9639:18;9630:6;9586:72;:::i;:::-;9668:73;9736:3;9725:9;9721:19;9712:6;9668:73;:::i;:::-;9751:67;9813:3;9802:9;9798:19;9789:6;9751:67;:::i;:::-;9828;9890:3;9879:9;9875:19;9866:6;9828:67;:::i;:::-;9905:73;9973:3;9962:9;9958:19;9949:6;9905:73;:::i;:::-;9988;10056:3;10045:9;10041:19;10032:6;9988:73;:::i;:::-;10071:89;10155:3;10144:9;10140:19;10131:6;10071:89;:::i;:::-;10170:90;10255:3;10244:9;10240:19;10230:7;10170:90;:::i;:::-;9283:984;;;;;;;;;;;;;;:::o;10273:419::-;;10477:2;10466:9;10462:18;10454:26;;10526:9;10520:4;10516:20;10512:1;10501:9;10497:17;10490:47;10554:131;10680:4;10554:131;:::i;:::-;10546:139;;10444:248;;;:::o;10698:419::-;;10902:2;10891:9;10887:18;10879:26;;10951:9;10945:4;10941:20;10937:1;10926:9;10922:17;10915:47;10979:131;11105:4;10979:131;:::i;:::-;10971:139;;10869:248;;;:::o;11123:419::-;;11327:2;11316:9;11312:18;11304:26;;11376:9;11370:4;11366:20;11362:1;11351:9;11347:17;11340:47;11404:131;11530:4;11404:131;:::i;:::-;11396:139;;11294:248;;;:::o;11548:419::-;;11752:2;11741:9;11737:18;11729:26;;11801:9;11795:4;11791:20;11787:1;11776:9;11772:17;11765:47;11829:131;11955:4;11829:131;:::i;:::-;11821:139;;11719:248;;;:::o;11973:419::-;;12177:2;12166:9;12162:18;12154:26;;12226:9;12220:4;12216:20;12212:1;12201:9;12197:17;12190:47;12254:131;12380:4;12254:131;:::i;:::-;12246:139;;12144:248;;;:::o;12398:419::-;;12602:2;12591:9;12587:18;12579:26;;12651:9;12645:4;12641:20;12637:1;12626:9;12622:17;12615:47;12679:131;12805:4;12679:131;:::i;:::-;12671:139;;12569:248;;;:::o;12823:419::-;;13027:2;13016:9;13012:18;13004:26;;13076:9;13070:4;13066:20;13062:1;13051:9;13047:17;13040:47;13104:131;13230:4;13104:131;:::i;:::-;13096:139;;12994:248;;;:::o;13248:419::-;;13452:2;13441:9;13437:18;13429:26;;13501:9;13495:4;13491:20;13487:1;13476:9;13472:17;13465:47;13529:131;13655:4;13529:131;:::i;:::-;13521:139;;13419:248;;;:::o;13673:419::-;;13877:2;13866:9;13862:18;13854:26;;13926:9;13920:4;13916:20;13912:1;13901:9;13897:17;13890:47;13954:131;14080:4;13954:131;:::i;:::-;13946:139;;13844:248;;;:::o;14098:419::-;;14302:2;14291:9;14287:18;14279:26;;14351:9;14345:4;14341:20;14337:1;14326:9;14322:17;14315:47;14379:131;14505:4;14379:131;:::i;:::-;14371:139;;14269:248;;;:::o;14523:419::-;;14727:2;14716:9;14712:18;14704:26;;14776:9;14770:4;14766:20;14762:1;14751:9;14747:17;14740:47;14804:131;14930:4;14804:131;:::i;:::-;14796:139;;14694:248;;;:::o;14948:419::-;;15152:2;15141:9;15137:18;15129:26;;15201:9;15195:4;15191:20;15187:1;15176:9;15172:17;15165:47;15229:131;15355:4;15229:131;:::i;:::-;15221:139;;15119:248;;;:::o;15373:222::-;;15504:2;15493:9;15489:18;15481:26;;15517:71;15585:1;15574:9;15570:17;15561:6;15517:71;:::i;:::-;15471:124;;;;:::o;15601:283::-;;15667:2;15661:9;15651:19;;15709:4;15701:6;15697:17;15816:6;15804:10;15801:22;15780:18;15768:10;15765:34;15762:62;15759:2;;;15827:18;;:::i;:::-;15759:2;15867:10;15863:2;15856:22;15641:243;;;;:::o;15890:332::-;;16042:18;16034:6;16031:30;16028:2;;;16064:18;;:::i;:::-;16028:2;16149:4;16145:9;16138:4;16130:6;16126:17;16122:33;16114:41;;16210:4;16204;16200:15;16192:23;;15957:265;;;:::o;16228:99::-;;16314:5;16308:12;16298:22;;16287:40;;;:::o;16333:169::-;;16451:6;16446:3;16439:19;16491:4;16486:3;16482:14;16467:29;;16429:73;;;;:::o;16508:148::-;;16647:3;16632:18;;16622:34;;;;:::o;16662:185::-;;16719:20;16737:1;16719:20;:::i;:::-;16714:25;;16753:20;16771:1;16753:20;:::i;:::-;16748:25;;16792:1;16782:2;;16797:18;;:::i;:::-;16782:2;16839:1;16836;16832:9;16827:14;;16704:143;;;;:::o;16853:348::-;;16916:20;16934:1;16916:20;:::i;:::-;16911:25;;16950:20;16968:1;16950:20;:::i;:::-;16945:25;;17138:1;17070:66;17066:74;17063:1;17060:81;17055:1;17048:9;17041:17;17037:105;17034:2;;;17145:18;;:::i;:::-;17034:2;17193:1;17190;17186:9;17175:20;;16901:300;;;;:::o;17207:104::-;;17281:24;17299:5;17281:24;:::i;:::-;17270:35;;17260:51;;;:::o;17317:90::-;;17394:5;17387:13;17380:21;17369:32;;17359:48;;;:::o;17413:137::-;;17492:5;17481:16;;17498:46;17538:5;17498:46;:::i;:::-;17471:79;;;:::o;17556:76::-;;17621:5;17610:16;;17600:32;;;:::o;17638:126::-;;17715:42;17708:5;17704:54;17693:65;;17683:81;;;:::o;17770:77::-;;17836:5;17825:16;;17815:32;;;:::o;17853:105::-;;17929:22;17922:5;17918:34;17907:45;;17897:61;;;:::o;17964:137::-;;18058:37;18089:5;18058:37;:::i;:::-;18045:50;;18035:66;;;:::o;18107:154::-;18191:6;18186:3;18181;18168:30;18253:1;18244:6;18239:3;18235:16;18228:27;18158:103;;;:::o;18267:307::-;18335:1;18345:113;18359:6;18356:1;18353:13;18345:113;;;18444:1;18439:3;18435:11;18429:18;18425:1;18420:3;18416:11;18409:39;18381:2;18378:1;18374:10;18369:15;;18345:113;;;18476:6;18473:1;18470:13;18467:2;;;18556:1;18547:6;18542:3;18538:16;18531:27;18467:2;18316:258;;;;:::o;18580:180::-;18628:77;18625:1;18618:88;18725:4;18722:1;18715:15;18749:4;18746:1;18739:15;18766:180;18814:77;18811:1;18804:88;18911:4;18908:1;18901:15;18935:4;18932:1;18925:15;18952:180;19000:77;18997:1;18990:88;19097:4;19094:1;19087:15;19121:4;19118:1;19111:15;19138:180;19186:77;19183:1;19176:88;19283:4;19280:1;19273:15;19307:4;19304:1;19297:15;19324:118;19410:1;19403:5;19400:12;19390:2;;19416:18;;:::i;:::-;19390:2;19380:62;:::o;19448:120::-;19520:23;19537:5;19520:23;:::i;:::-;19513:5;19510:34;19500:2;;19558:1;19555;19548:12;19500:2;19490:78;:::o;19574:122::-;19647:24;19665:5;19647:24;:::i;:::-;19640:5;19637:35;19627:2;;19686:1;19683;19676:12;19627:2;19617:79;:::o;19702:120::-;19774:23;19791:5;19774:23;:::i;:::-;19767:5;19764:34;19754:2;;19812:1;19809;19802:12;19754:2;19744:78;:::o",
  "source": "pragma solidity 0.8.0;\n\nimport \"./dependencies/LinkTokenInterface.sol\";\nimport \"./dependencies/AggregatorV3Interface.sol\";\n\ncontract OptionTrades {\n    //Pricefeed interfaces\n    AggregatorV3Interface internal maticFeed;\n    //Interface for LINK token functions\n    LinkTokenInterface internal LINK;\n    uint maticPrice;\n    address payable contractAddr;\n\n    bytes32 callHash = keccak256(abi.encodePacked(\"CALL\"));\n    bytes32 putHash = keccak256(abi.encodePacked(\"PUT\"));\n\n    enum OptionType { PUT, CALL }\n    \n    //Options stored in arrays of structs\n    struct option {\n        OptionType optionType; //Helper to show last updated cost to exercise\n        uint strike; //Price in USD (18 decimal places) option allows buyer to purchase tokens at\n        uint premium; //Fee in contract token that option writer charges\n        uint expiry; //Unix timestamp of expiration time\n        uint amount; //Amount of tokens the option contract is for\n        bool exercised; //Has option been exercised\n        bool canceled; //Has option been canceled\n        uint id; //Unique ID of option, also array index\n        uint latestCost; //Helper to show last updated cost to exercise\n        address payable writer; //Issuer of option\n        address payable buyer; //Buyer of option\n    }\n    option[] public maticOpts;\n\n    //Kovan feeds: https://docs.chain.link/docs/reference-contracts\n    constructor() public {\n        // -- Matic --\n        /*\n        //MATIC/USD feed\n        maticFeed = AggregatorV3Interface(0xAB594600376Ec9fD91F8e885dADF0CE036862dE0);\n        //LINK token address\n        LINK = LinkTokenInterface(0xb0897686c545045aFc77CF20eC7A532E3120E0F1);\n        */\n\n        // -- Mumbai --\n        /* */\n        //MATIC/USD feed\n        maticFeed = AggregatorV3Interface(0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada);\n        //LINK token address\n        LINK = LinkTokenInterface(0x326C977E6efc84E512bB9C30f76E30c160eD06FB);\n        contractAddr = payable(address(this));\n    }\n    \n    //Returns the latest MATIC price\n    function getMaticPrice() public view returns (uint) {\n        (\n            uint80 roundID, \n            int price,\n            uint startedAt,\n            uint timeStamp,\n            uint80 answeredInRound\n        ) = maticFeed.latestRoundData();\n        // If the round is not complete yet, timestamp is 0\n        require(timeStamp > 0, \"Round not complete\");\n        //Price should never be negative thus cast int to unit is ok\n        //Price is 8 decimal places and will require 1e10 correction later to 18 places\n        return uint(price);\n    }\n    \n    //Updates prices to latest\n    function updatePrices() internal {\n        maticPrice = getMaticPrice();\n    }\n    \n    //Allows user to write a covered call option\n    //Takes which token, a strike price(USD per token w/18 decimal places), premium(same unit as token), expiration time(unix) and how many tokens the contract is for\n    function writeOption(uint strike, uint premium, uint expiry, uint tknAmt, string memory optionType) public payable {\n        bytes32 optionType = keccak256(abi.encodePacked(optionType));\n        require(optionType == callHash || optionType == putHash, \"Only CALL and PUT option types are supported\");\n        require(msg.value == tknAmt, \"Incorrect amount of Matic supplied\"); \n        updatePrices();\n        OptionType optionTypeEnum;\n        if(optionType == callHash)\n        {\n            optionTypeEnum = OptionType.CALL;\n        }else\n        {\n            optionTypeEnum = OptionType.PUT;\n        }\n        uint latestCost = (strike * tknAmt) / (maticPrice * 10**10); //current cost to exercise in Matic, decimal places corrected\n        maticOpts.push(option(optionTypeEnum, strike, premium, expiry, tknAmt, false, false, maticOpts.length, latestCost, payable(msg.sender), payable(address(0))));\n    }\n    \n    //Allows option writer to cancel and get their funds back from an unpurchased option\n    function cancelOption(uint ID) public payable {\n        require(msg.sender == maticOpts[ID].writer, \"You did not write this option\");\n        //Must not have already been canceled or bought\n        require(!maticOpts[ID].canceled && maticOpts[ID].buyer == address(0), \"This option cannot be canceled\");\n        maticOpts[ID].writer.transfer(maticOpts[ID].amount);\n        maticOpts[ID].canceled = true;\n    }\n    \n    //Purchase a call option, needs desired token, ID of option and payment\n    function buyOption(uint ID) public payable {\n        updatePrices();\n        require(!maticOpts[ID].canceled && maticOpts[ID].expiry > block.timestamp, \"Option is canceled/expired and cannot be bought\");\n        //Transfer premium payment from buyer\n        require(msg.value == maticOpts[ID].premium, \"Incorrect amount of MATIC sent for premium\");\n        //Transfer premium payment to writer\n        maticOpts[ID].writer.transfer(maticOpts[ID].premium);\n        maticOpts[ID].buyer = payable(msg.sender);\n    }\n    \n    //Exercise your call option, needs desired token, ID of option and payment\n    function exercise(uint ID) public payable {\n        //If not expired and not already exercised, allow option owner to exercise\n        //To exercise, the strike value*amount equivalent paid to writer (from buyer) and amount of tokens in the contract paid to buyer\n        require(maticOpts[ID].buyer == msg.sender, \"You do not own this option\");\n        require(!maticOpts[ID].exercised, \"Option has already been exercised\");\n        require(maticOpts[ID].expiry > block.timestamp, \"Option is expired\");\n        //Conditions are met, proceed to payouts\n        updatePrices();\n        //Cost to exercise\n        uint exerciseVal = maticOpts[ID].strike*maticOpts[ID].amount;\n        //Equivalent MATIC value using Chainlink feed\n        uint equivMatic = exerciseVal / (maticPrice * 10**10); //move decimal 10 places right to account for 8 places of pricefeed\n        //Buyer exercises option by paying strike*amount equivalent MATIC value\n        require(msg.value == equivMatic, \"Incorrect LINK amount sent to exercise\");\n        if(maticOpts[ID].optionType == OptionType.CALL)\n        {\n            //Pay writer the exercise cost\n            maticOpts[ID].writer.transfer(equivMatic);\n            //Pay buyer contract amount of MATIC\n            payable(msg.sender).transfer(maticOpts[ID].amount);\n        }else\n        {\n            //Pay writer contract amount of MATIC\n            payable(msg.sender).transfer(maticOpts[ID].amount);\n            //Pay buyer the exercise cost\n            maticOpts[ID].writer.transfer(equivMatic);\n        }\n        maticOpts[ID].exercised = true;\n    }\n    \n    //Allows writer to retrieve funds from an expired, non-exercised, non-canceled option\n    function retrieveExpiredFunds(uint ID) public payable {\n        require(msg.sender == maticOpts[ID].writer, \"You did not write this option\");\n        //Must be expired, not exercised and not canceled\n        require(maticOpts[ID].expiry <= block.timestamp && !maticOpts[ID].exercised && !maticOpts[ID].canceled, \"This option is not eligible for withdraw\");\n        maticOpts[ID].writer.transfer(maticOpts[ID].amount);\n        //Repurposing canceled flag to prevent more than one withdraw\n        maticOpts[ID].canceled = true;\n    }\n    \n    //This is a helper function to help the user see what the cost to exercise an option is currently before they do so\n    //Updates lastestCost member of option which is publicly viewable\n    function updateExerciseCost(uint ID) public {\n        updatePrices();\n        maticOpts[ID].latestCost = (maticOpts[ID].strike * maticOpts[ID].amount) / (maticPrice * 10**10);\n    }\n\n    function getMaticOptsLength() public returns (uint256 maticOptsLength) {\n        return maticOpts.length;\n    }\n}",
  "sourcePath": "/home/turupawn/Projects/Blockchain/MaticOptionTrading/contracts/OptionTrades.sol",
  "ast": {
    "absolutePath": "/home/turupawn/Projects/Blockchain/MaticOptionTrading/contracts/OptionTrades.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        622
      ],
      "LinkTokenInterface": [
        717
      ],
      "OptionTrades": [
        576
      ]
    },
    "id": 577,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "absolutePath": "/home/turupawn/Projects/Blockchain/MaticOptionTrading/contracts/dependencies/LinkTokenInterface.sol",
        "file": "./dependencies/LinkTokenInterface.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 577,
        "sourceUnit": 718,
        "src": "24:47:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/turupawn/Projects/Blockchain/MaticOptionTrading/contracts/dependencies/AggregatorV3Interface.sol",
        "file": "./dependencies/AggregatorV3Interface.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 577,
        "sourceUnit": 623,
        "src": "72:50:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 576,
        "linearizedBaseContracts": [
          576
        ],
        "name": "OptionTrades",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "maticFeed",
            "nodeType": "VariableDeclaration",
            "scope": 576,
            "src": "179:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$622",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 5,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 622,
                "src": "179:21:0"
              },
              "referencedDeclaration": 622,
              "src": "179:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$622",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 9,
            "mutability": "mutable",
            "name": "LINK",
            "nodeType": "VariableDeclaration",
            "scope": 576,
            "src": "266:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkTokenInterface_$717",
              "typeString": "contract LinkTokenInterface"
            },
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "LinkTokenInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 717,
                "src": "266:18:0"
              },
              "referencedDeclaration": 717,
              "src": "266:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkTokenInterface_$717",
                "typeString": "contract LinkTokenInterface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "maticPrice",
            "nodeType": "VariableDeclaration",
            "scope": 576,
            "src": "304:15:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "304:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "contractAddr",
            "nodeType": "VariableDeclaration",
            "scope": 576,
            "src": "325:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 12,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "325:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 21,
            "mutability": "mutable",
            "name": "callHash",
            "nodeType": "VariableDeclaration",
            "scope": 576,
            "src": "360:54:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 14,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "360:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "43414c4c",
                      "id": 18,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "406:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_706a455ca44ffc9f46e1c567fb1a4fdf73956f8e912065b7c4c6af237e247d9c",
                        "typeString": "literal_string \"CALL\""
                      },
                      "value": "CALL"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_706a455ca44ffc9f46e1c567fb1a4fdf73956f8e912065b7c4c6af237e247d9c",
                        "typeString": "literal_string \"CALL\""
                      }
                    ],
                    "expression": {
                      "id": 16,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "389:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "389:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 19,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "389:24:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 15,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "379:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "379:35:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "putHash",
            "nodeType": "VariableDeclaration",
            "scope": 576,
            "src": "420:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 22,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "420:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "505554",
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "465:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_08f5cef085f1c57c9b95d4f7af2f84617041386faf839e3dcfd4f97829a91e11",
                        "typeString": "literal_string \"PUT\""
                      },
                      "value": "PUT"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_08f5cef085f1c57c9b95d4f7af2f84617041386faf839e3dcfd4f97829a91e11",
                        "typeString": "literal_string \"PUT\""
                      }
                    ],
                    "expression": {
                      "id": 24,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "448:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "448:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 27,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "448:23:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 23,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "438:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 28,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "438:34:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "OptionTrades.OptionType",
            "id": 32,
            "members": [
              {
                "id": 30,
                "name": "PUT",
                "nodeType": "EnumValue",
                "src": "497:3:0"
              },
              {
                "id": 31,
                "name": "CALL",
                "nodeType": "EnumValue",
                "src": "502:4:0"
              }
            ],
            "name": "OptionType",
            "nodeType": "EnumDefinition",
            "src": "479:29:0"
          },
          {
            "canonicalName": "OptionTrades.option",
            "id": 56,
            "members": [
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "optionType",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "584:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_OptionType_$32",
                  "typeString": "enum OptionTrades.OptionType"
                },
                "typeName": {
                  "id": 34,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 33,
                    "name": "OptionType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 32,
                    "src": "584:10:0"
                  },
                  "referencedDeclaration": 32,
                  "src": "584:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OptionType_$32",
                    "typeString": "enum OptionTrades.OptionType"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "strike",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "662:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 36,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "662:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "premium",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "760:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "760:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "mutability": "mutable",
                "name": "expiry",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "833:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "833:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 43,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "890:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 42,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "890:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45,
                "mutability": "mutable",
                "name": "exercised",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "957:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 44,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "957:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47,
                "mutability": "mutable",
                "name": "canceled",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "1009:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 46,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1009:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 49,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "1059:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1059:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51,
                "mutability": "mutable",
                "name": "latestCost",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "1116:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 50,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1116:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "writer",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "1188:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 52,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1188:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "buyer",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "1239:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 54,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1239:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "option",
            "nodeType": "StructDefinition",
            "scope": 576,
            "src": "560:725:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "63259516",
            "id": 60,
            "mutability": "mutable",
            "name": "maticOpts",
            "nodeType": "VariableDeclaration",
            "scope": 576,
            "src": "1290:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
              "typeString": "struct OptionTrades.option[]"
            },
            "typeName": {
              "baseType": {
                "id": 58,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 57,
                  "name": "option",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 56,
                  "src": "1290:6:0"
                },
                "referencedDeclaration": 56,
                "src": "1290:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_option_$56_storage_ptr",
                  "typeString": "struct OptionTrades.option"
                }
              },
              "id": 59,
              "nodeType": "ArrayTypeName",
              "src": "1290:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage_ptr",
                "typeString": "struct OptionTrades.option[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "1411:578:0",
              "statements": [
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63,
                      "name": "maticFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1750:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$622",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307864304435653344423434444530354539463239344242306133624545614630333044453234416461",
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1784:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 64,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 622,
                        "src": "1762:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$622_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1762:65:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$622",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "1750:77:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$622",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1750:77:0"
                },
                {
                  "expression": {
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 69,
                      "name": "LINK",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1866:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$717",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307833323643393737453665666338344535313262423943333066373645333063313630654430364642",
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1892:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x326C977E6efc84E512bB9C30f76E30c160eD06FB"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 70,
                        "name": "LinkTokenInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "1873:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$717_$",
                          "typeString": "type(contract LinkTokenInterface)"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1873:62:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$717",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "src": "1866:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkTokenInterface_$717",
                      "typeString": "contract LinkTokenInterface"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "1866:69:0"
                },
                {
                  "expression": {
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 75,
                      "name": "contractAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1945:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 80,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "1976:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptionTrades_$576",
                                "typeString": "contract OptionTrades"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptionTrades_$576",
                                "typeString": "contract OptionTrades"
                              }
                            ],
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1968:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 78,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1968:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1968:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1960:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 76,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1960:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1960:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1945:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:37:0"
                }
              ]
            },
            "id": 86,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1401:2:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1411:0:0"
            },
            "scope": 576,
            "src": "1390:599:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 117,
              "nodeType": "Block",
              "src": "2088:500:0",
              "statements": [
                {
                  "assignments": [
                    92,
                    94,
                    96,
                    98,
                    100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92,
                      "mutability": "mutable",
                      "name": "roundID",
                      "nodeType": "VariableDeclaration",
                      "scope": 117,
                      "src": "2112:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 91,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "2112:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 94,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "scope": 117,
                      "src": "2141:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 93,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "2141:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 96,
                      "mutability": "mutable",
                      "name": "startedAt",
                      "nodeType": "VariableDeclaration",
                      "scope": 117,
                      "src": "2164:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 95,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2164:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 98,
                      "mutability": "mutable",
                      "name": "timeStamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 117,
                      "src": "2192:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 97,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2192:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 100,
                      "mutability": "mutable",
                      "name": "answeredInRound",
                      "nodeType": "VariableDeclaration",
                      "scope": 117,
                      "src": "2220:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 99,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "2220:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 104,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 101,
                        "name": "maticFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "2255:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$622",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 621,
                      "src": "2255:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2255:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2098:184:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 106,
                          "name": "timeStamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2360:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2372:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2360:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f756e64206e6f7420636f6d706c657465",
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2375:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697",
                          "typeString": "literal_string \"Round not complete\""
                        },
                        "value": "Round not complete"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697",
                          "typeString": "literal_string \"Round not complete\""
                        }
                      ],
                      "id": 105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2352:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2352:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "2352:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 114,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "2575:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2570:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 112,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2570:4:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2570:11:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 90,
                  "id": 116,
                  "nodeType": "Return",
                  "src": "2563:18:0"
                }
              ]
            },
            "functionSelector": "c83d3248",
            "id": 118,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMaticPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2058:2:0"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "2082:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2082:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2081:6:0"
            },
            "scope": 576,
            "src": "2036:552:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "2662:45:0",
              "statements": [
                {
                  "expression": {
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 121,
                      "name": "maticPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2672:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 122,
                        "name": "getMaticPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "2685:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2685:15:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2672:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "2672:28:0"
                }
              ]
            },
            "id": 127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePrices",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2650:2:0"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2662:0:0"
            },
            "scope": 576,
            "src": "2629:78:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 234,
              "nodeType": "Block",
              "src": "3048:795:0",
              "statements": [
                {
                  "assignments": [
                    141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 141,
                      "mutability": "mutable",
                      "name": "optionType",
                      "nodeType": "VariableDeclaration",
                      "scope": 234,
                      "src": "3058:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 140,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3058:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 148,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 145,
                            "name": "optionType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "3106:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 143,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "3089:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3089:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3089:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 142,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "3079:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3079:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3058:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 150,
                            "name": "optionType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "3136:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 151,
                            "name": "callHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "3150:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3136:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 153,
                            "name": "optionType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "3162:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 154,
                            "name": "putHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "3176:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3162:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3136:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792043414c4c20616e6420505554206f7074696f6e2074797065732061726520737570706f72746564",
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3185:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46229350b868ccea281aa9277d359e6a560f0f2fd6d51e1f08ceca850f264338",
                          "typeString": "literal_string \"Only CALL and PUT option types are supported\""
                        },
                        "value": "Only CALL and PUT option types are supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46229350b868ccea281aa9277d359e6a560f0f2fd6d51e1f08ceca850f264338",
                          "typeString": "literal_string \"Only CALL and PUT option types are supported\""
                        }
                      ],
                      "id": 149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3128:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3128:104:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "3128:104:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 161,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3250:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3250:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 163,
                          "name": "tknAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "3263:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3250:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420616d6f756e74206f66204d6174696320737570706c696564",
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3271:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966",
                          "typeString": "literal_string \"Incorrect amount of Matic supplied\""
                        },
                        "value": "Incorrect amount of Matic supplied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966",
                          "typeString": "literal_string \"Incorrect amount of Matic supplied\""
                        }
                      ],
                      "id": 160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3242:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "3242:66:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 168,
                      "name": "updatePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "3319:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3319:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "3319:14:0"
                },
                {
                  "assignments": [
                    173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 173,
                      "mutability": "mutable",
                      "name": "optionTypeEnum",
                      "nodeType": "VariableDeclaration",
                      "scope": 234,
                      "src": "3343:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OptionType_$32",
                        "typeString": "enum OptionTrades.OptionType"
                      },
                      "typeName": {
                        "id": 172,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 171,
                          "name": "OptionType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32,
                          "src": "3343:10:0"
                        },
                        "referencedDeclaration": 32,
                        "src": "3343:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OptionType_$32",
                          "typeString": "enum OptionTrades.OptionType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 174,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3343:25:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 175,
                      "name": "optionType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "3381:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 176,
                      "name": "callHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "3395:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3381:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 189,
                    "nodeType": "Block",
                    "src": "3483:56:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 184,
                            "name": "optionTypeEnum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "3497:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OptionType_$32",
                              "typeString": "enum OptionTrades.OptionType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 185,
                              "name": "OptionType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "3514:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_OptionType_$32_$",
                                "typeString": "type(enum OptionTrades.OptionType)"
                              }
                            },
                            "id": 186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PUT",
                            "nodeType": "MemberAccess",
                            "src": "3514:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OptionType_$32",
                              "typeString": "enum OptionTrades.OptionType"
                            }
                          },
                          "src": "3497:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OptionType_$32",
                            "typeString": "enum OptionTrades.OptionType"
                          }
                        },
                        "id": 188,
                        "nodeType": "ExpressionStatement",
                        "src": "3497:31:0"
                      }
                    ]
                  },
                  "id": 190,
                  "nodeType": "IfStatement",
                  "src": "3378:161:0",
                  "trueBody": {
                    "id": 183,
                    "nodeType": "Block",
                    "src": "3413:57:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 178,
                            "name": "optionTypeEnum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "3427:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OptionType_$32",
                              "typeString": "enum OptionTrades.OptionType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 179,
                              "name": "OptionType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "3444:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_OptionType_$32_$",
                                "typeString": "type(enum OptionTrades.OptionType)"
                              }
                            },
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "CALL",
                            "nodeType": "MemberAccess",
                            "src": "3444:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OptionType_$32",
                              "typeString": "enum OptionTrades.OptionType"
                            }
                          },
                          "src": "3427:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OptionType_$32",
                            "typeString": "enum OptionTrades.OptionType"
                          }
                        },
                        "id": 182,
                        "nodeType": "ExpressionStatement",
                        "src": "3427:32:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 192,
                      "mutability": "mutable",
                      "name": "latestCost",
                      "nodeType": "VariableDeclaration",
                      "scope": 234,
                      "src": "3548:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 191,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3548:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 204,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 193,
                            "name": "strike",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3567:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 194,
                            "name": "tknAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "3576:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3567:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 196,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3566:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 197,
                            "name": "maticPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3587:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3600:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3130",
                              "id": 199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3604:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "src": "3600:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            }
                          },
                          "src": "3587:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 202,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3586:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3566:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3548:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 209,
                            "name": "optionTypeEnum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "3701:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OptionType_$32",
                              "typeString": "enum OptionTrades.OptionType"
                            }
                          },
                          {
                            "id": 210,
                            "name": "strike",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3717:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 211,
                            "name": "premium",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 131,
                            "src": "3725:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 212,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "3734:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 213,
                            "name": "tknAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "3742:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3750:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3757:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "expression": {
                              "id": 216,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "3764:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3764:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 218,
                            "name": "latestCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "3782:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 221,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3802:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3802:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3794:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 219,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3794:8:0",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3794:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 228,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3831:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 227,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3823:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 226,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3823:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3823:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3815:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 224,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3815:8:0",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3815:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_OptionType_$32",
                              "typeString": "enum OptionTrades.OptionType"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 208,
                          "name": "option",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "3694:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_option_$56_storage_ptr_$",
                            "typeString": "type(struct OptionTrades.option storage pointer)"
                          }
                        },
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3694:141:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$56_memory_ptr",
                          "typeString": "struct OptionTrades.option memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_option_$56_memory_ptr",
                          "typeString": "struct OptionTrades.option memory"
                        }
                      ],
                      "expression": {
                        "id": 205,
                        "name": "maticOpts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "3679:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                          "typeString": "struct OptionTrades.option storage ref[] storage ref"
                        }
                      },
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3679:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_option_$56_storage_$returns$__$",
                        "typeString": "function (struct OptionTrades.option storage ref)"
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3679:157:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "3679:157:0"
                }
              ]
            },
            "functionSelector": "3a39f623",
            "id": 235,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "writeOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "strike",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "2954:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2954:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "premium",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "2967:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2967:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "2981:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2981:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "tknAmt",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "2994:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2994:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "optionType",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "3007:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3007:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2953:79:0"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3048:0:0"
            },
            "scope": 576,
            "src": "2933:910:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 288,
              "nodeType": "Block",
              "src": "3988:362:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 241,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4006:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4006:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 243,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "4020:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 245,
                            "indexExpression": {
                              "id": 244,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "4030:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4020:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$56_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 246,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "writer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53,
                          "src": "4020:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4006:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646964206e6f742077726974652074686973206f7074696f6e",
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4042:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd",
                          "typeString": "literal_string \"You did not write this option\""
                        },
                        "value": "You did not write this option"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd",
                          "typeString": "literal_string \"You did not write this option\""
                        }
                      ],
                      "id": 240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3998:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3998:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "3998:76:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4148:23:0",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 252,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "4149:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 254,
                              "indexExpression": {
                                "id": 253,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 237,
                                "src": "4159:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4149:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$56_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 255,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "canceled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47,
                            "src": "4149:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 257,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "4175:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 259,
                              "indexExpression": {
                                "id": 258,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 237,
                                "src": "4185:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4175:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$56_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 260,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55,
                            "src": "4175:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4206:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4198:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 261,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4198:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4198:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4175:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4148:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206f7074696f6e2063616e6e6f742062652063616e63656c6564",
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4210:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a",
                          "typeString": "literal_string \"This option cannot be canceled\""
                        },
                        "value": "This option cannot be canceled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a",
                          "typeString": "literal_string \"This option cannot be canceled\""
                        }
                      ],
                      "id": 251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4140:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4140:103:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "4140:103:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 275,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "4283:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 277,
                          "indexExpression": {
                            "id": 276,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 237,
                            "src": "4293:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4283:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$56_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43,
                        "src": "4283:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 270,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "4253:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 272,
                          "indexExpression": {
                            "id": 271,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 237,
                            "src": "4263:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4253:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$56_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 273,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "writer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53,
                        "src": "4253:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4253:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4253:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "4253:51:0"
                },
                {
                  "expression": {
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 281,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "4314:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 283,
                        "indexExpression": {
                          "id": 282,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 237,
                          "src": "4324:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4314:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$56_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "canceled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47,
                      "src": "4314:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4339:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4314:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "4314:29:0"
                }
              ]
            },
            "functionSelector": "de6bf635",
            "id": 289,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "3964:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3964:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3963:9:0"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3988:0:0"
            },
            "scope": 576,
            "src": "3942:408:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "4479:469:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 294,
                      "name": "updatePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "4489:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4489:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "4489:14:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4521:23:0",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 298,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "4522:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 300,
                              "indexExpression": {
                                "id": 299,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 291,
                                "src": "4532:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4522:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$56_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 301,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "canceled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47,
                            "src": "4522:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 303,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "4548:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 305,
                              "indexExpression": {
                                "id": 304,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 291,
                                "src": "4558:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4548:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$56_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 306,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expiry",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41,
                            "src": "4548:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 307,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "4571:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4571:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4548:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4521:65:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696f6e2069732063616e63656c65642f6578706972656420616e642063616e6e6f7420626520626f75676874",
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4588:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77",
                          "typeString": "literal_string \"Option is canceled/expired and cannot be bought\""
                        },
                        "value": "Option is canceled/expired and cannot be bought"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77",
                          "typeString": "literal_string \"Option is canceled/expired and cannot be bought\""
                        }
                      ],
                      "id": 297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4513:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4513:125:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "4513:125:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 315,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4702:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4702:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 317,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "4715:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 319,
                            "indexExpression": {
                              "id": 318,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 291,
                              "src": "4725:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4715:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$56_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "premium",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "4715:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4702:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420616d6f756e74206f66204d415449432073656e7420666f72207072656d69756d",
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4738:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd",
                          "typeString": "literal_string \"Incorrect amount of MATIC sent for premium\""
                        },
                        "value": "Incorrect amount of MATIC sent for premium"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd",
                          "typeString": "literal_string \"Incorrect amount of MATIC sent for premium\""
                        }
                      ],
                      "id": 314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4694:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4694:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "4694:89:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 330,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "4868:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 332,
                          "indexExpression": {
                            "id": 331,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "4878:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4868:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$56_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "premium",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39,
                        "src": "4868:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 325,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "4838:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 327,
                          "indexExpression": {
                            "id": 326,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "4848:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4838:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$56_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "writer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53,
                        "src": "4838:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4838:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4838:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "4838:52:0"
                },
                {
                  "expression": {
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 336,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "4900:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 338,
                        "indexExpression": {
                          "id": 337,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "4910:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4900:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$56_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "buyer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55,
                      "src": "4900:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 342,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4930:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4930:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4922:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4922:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4922:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4900:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "4900:41:0"
                }
              ]
            },
            "functionSelector": "fba225b9",
            "id": 348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 291,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "4455:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 290,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4455:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4454:9:0"
            },
            "returnParameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4479:0:0"
            },
            "scope": 576,
            "src": "4436:512:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 475,
              "nodeType": "Block",
              "src": "5079:1548:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 354,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "5317:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 356,
                            "indexExpression": {
                              "id": 355,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 350,
                              "src": "5327:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5317:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$56_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55,
                          "src": "5317:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 358,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5340:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5340:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5317:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206f776e2074686973206f7074696f6e",
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5352:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62",
                          "typeString": "literal_string \"You do not own this option\""
                        },
                        "value": "You do not own this option"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62",
                          "typeString": "literal_string \"You do not own this option\""
                        }
                      ],
                      "id": 353,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5309:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5309:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "5309:72:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5399:24:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 365,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "5400:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 367,
                            "indexExpression": {
                              "id": 366,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 350,
                              "src": "5410:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5400:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$56_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exercised",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45,
                          "src": "5400:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696f6e2068617320616c7265616479206265656e20657865726369736564",
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5425:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e",
                          "typeString": "literal_string \"Option has already been exercised\""
                        },
                        "value": "Option has already been exercised"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e",
                          "typeString": "literal_string \"Option has already been exercised\""
                        }
                      ],
                      "id": 364,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5391:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5391:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "5391:70:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 374,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "5479:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 376,
                            "indexExpression": {
                              "id": 375,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 350,
                              "src": "5489:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5479:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$56_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 377,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "5479:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 378,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "5502:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5502:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5479:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696f6e2069732065787069726564",
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5519:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b",
                          "typeString": "literal_string \"Option is expired\""
                        },
                        "value": "Option is expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b",
                          "typeString": "literal_string \"Option is expired\""
                        }
                      ],
                      "id": 373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5471:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5471:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "5471:68:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 384,
                      "name": "updatePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "5598:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5598:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "5598:14:0"
                },
                {
                  "assignments": [
                    388
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 388,
                      "mutability": "mutable",
                      "name": "exerciseVal",
                      "nodeType": "VariableDeclaration",
                      "scope": 475,
                      "src": "5649:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 387,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5649:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 398,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 389,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "5668:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 391,
                        "indexExpression": {
                          "id": 390,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "5678:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5668:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$56_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 392,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "strike",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "5668:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 393,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "5689:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 395,
                        "indexExpression": {
                          "id": 394,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "5699:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5689:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$56_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "5689:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5668:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5649:60:0"
                },
                {
                  "assignments": [
                    400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 400,
                      "mutability": "mutable",
                      "name": "equivMatic",
                      "nodeType": "VariableDeclaration",
                      "scope": 475,
                      "src": "5773:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 399,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5773:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 409,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 401,
                      "name": "exerciseVal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 388,
                      "src": "5791:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 402,
                            "name": "maticPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "5806:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            },
                            "id": 405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5819:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3130",
                              "id": 404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5823:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "src": "5819:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            }
                          },
                          "src": "5806:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 407,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5805:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5791:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5773:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 411,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5992:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5992:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 413,
                          "name": "equivMatic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 400,
                          "src": "6005:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5992:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374204c494e4b20616d6f756e742073656e7420746f206578657263697365",
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6017:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e",
                          "typeString": "literal_string \"Incorrect LINK amount sent to exercise\""
                        },
                        "value": "Incorrect LINK amount sent to exercise"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e",
                          "typeString": "literal_string \"Incorrect LINK amount sent to exercise\""
                        }
                      ],
                      "id": 410,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5984:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5984:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "5984:74:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_OptionType_$32",
                      "typeString": "enum OptionTrades.OptionType"
                    },
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 418,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "6071:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 420,
                        "indexExpression": {
                          "id": 419,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "6081:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6071:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$56_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 421,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "optionType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35,
                      "src": "6071:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OptionType_$32",
                        "typeString": "enum OptionTrades.OptionType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 422,
                        "name": "OptionType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "6099:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_OptionType_$32_$",
                          "typeString": "type(enum OptionTrades.OptionType)"
                        }
                      },
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CALL",
                      "nodeType": "MemberAccess",
                      "src": "6099:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OptionType_$32",
                        "typeString": "enum OptionTrades.OptionType"
                      }
                    },
                    "src": "6071:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 466,
                    "nodeType": "Block",
                    "src": "6359:222:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 452,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "6452:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 454,
                                "indexExpression": {
                                  "id": 453,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 350,
                                  "src": "6462:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6452:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$56_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 455,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43,
                              "src": "6452:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 448,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "6431:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 449,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6431:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6423:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 446,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6423:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6423:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6423:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6423:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 457,
                        "nodeType": "ExpressionStatement",
                        "src": "6423:50:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 463,
                              "name": "equivMatic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 400,
                              "src": "6559:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 458,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "6529:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 460,
                                "indexExpression": {
                                  "id": 459,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 350,
                                  "src": "6539:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6529:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$56_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 461,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "writer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53,
                              "src": "6529:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6529:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6529:41:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 465,
                        "nodeType": "ExpressionStatement",
                        "src": "6529:41:0"
                      }
                    ]
                  },
                  "id": 467,
                  "nodeType": "IfStatement",
                  "src": "6068:513:0",
                  "trueBody": {
                    "id": 445,
                    "nodeType": "Block",
                    "src": "6124:222:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 430,
                              "name": "equivMatic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 400,
                              "src": "6211:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 425,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "6181:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 427,
                                "indexExpression": {
                                  "id": 426,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 350,
                                  "src": "6191:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6181:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$56_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 428,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "writer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53,
                              "src": "6181:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6181:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6181:41:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 432,
                        "nodeType": "ExpressionStatement",
                        "src": "6181:41:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 439,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "6314:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 441,
                                "indexExpression": {
                                  "id": 440,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 350,
                                  "src": "6324:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6314:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$56_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 442,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43,
                              "src": "6314:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 435,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "6293:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 436,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6293:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6285:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 433,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6285:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6285:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6285:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6285:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 444,
                        "nodeType": "ExpressionStatement",
                        "src": "6285:50:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 468,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "6590:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 470,
                        "indexExpression": {
                          "id": 469,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "6600:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6590:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$56_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 471,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exercised",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "6590:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6616:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6590:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "6590:30:0"
                }
              ]
            },
            "functionSelector": "b07f0a41",
            "id": 476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exercise",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 350,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "5055:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5055:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5054:9:0"
            },
            "returnParameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5079:0:0"
            },
            "scope": 576,
            "src": "5037:1590:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 533,
              "nodeType": "Block",
              "src": "6781:478:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 482,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6799:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6799:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 484,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "6813:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 486,
                            "indexExpression": {
                              "id": 485,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 478,
                              "src": "6823:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6813:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$56_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "writer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53,
                          "src": "6813:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6799:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646964206e6f742077726974652074686973206f7074696f6e",
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6835:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd",
                          "typeString": "literal_string \"You did not write this option\""
                        },
                        "value": "You did not write this option"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd",
                          "typeString": "literal_string \"You did not write this option\""
                        }
                      ],
                      "id": 481,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6791:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6791:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 491,
                  "nodeType": "ExpressionStatement",
                  "src": "6791:76:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 493,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "6943:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 495,
                                "indexExpression": {
                                  "id": 494,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 478,
                                  "src": "6953:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6943:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$56_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 496,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "expiry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41,
                              "src": "6943:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "expression": {
                                "id": 497,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "6967:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "6967:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6943:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6986:24:0",
                            "subExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 500,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "6987:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 502,
                                "indexExpression": {
                                  "id": 501,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 478,
                                  "src": "6997:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6987:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$56_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 503,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "exercised",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45,
                              "src": "6987:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6943:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "7014:23:0",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 506,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "7015:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 508,
                              "indexExpression": {
                                "id": 507,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 478,
                                "src": "7025:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7015:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$56_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 509,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "canceled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47,
                            "src": "7015:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6943:94:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206f7074696f6e206973206e6f7420656c696769626c6520666f72207769746864726177",
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7039:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21",
                          "typeString": "literal_string \"This option is not eligible for withdraw\""
                        },
                        "value": "This option is not eligible for withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21",
                          "typeString": "literal_string \"This option is not eligible for withdraw\""
                        }
                      ],
                      "id": 492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6935:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6935:147:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "6935:147:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 520,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "7122:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 522,
                          "indexExpression": {
                            "id": 521,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "7132:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7122:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$56_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 523,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43,
                        "src": "7122:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 515,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "7092:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 517,
                          "indexExpression": {
                            "id": 516,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "7102:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7092:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$56_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 518,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "writer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53,
                        "src": "7092:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "7092:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7092:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 525,
                  "nodeType": "ExpressionStatement",
                  "src": "7092:51:0"
                },
                {
                  "expression": {
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 526,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "7223:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 528,
                        "indexExpression": {
                          "id": 527,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 478,
                          "src": "7233:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7223:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$56_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 529,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "canceled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47,
                      "src": "7223:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7248:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7223:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "7223:29:0"
                }
              ]
            },
            "functionSelector": "790eee2e",
            "id": 534,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveExpiredFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 534,
                  "src": "6757:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6757:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6756:9:0"
            },
            "returnParameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6781:0:0"
            },
            "scope": 576,
            "src": "6727:532:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 565,
              "nodeType": "Block",
              "src": "7503:137:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 539,
                      "name": "updatePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "7513:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7513:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "7513:14:0"
                },
                {
                  "expression": {
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 542,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "7537:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 544,
                        "indexExpression": {
                          "id": 543,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 536,
                          "src": "7547:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7537:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$56_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 545,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "latestCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "7537:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 546,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "7565:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 548,
                                "indexExpression": {
                                  "id": 547,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "7575:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7565:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$56_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 549,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "strike",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37,
                              "src": "7565:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 550,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "7588:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 552,
                                "indexExpression": {
                                  "id": 551,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "7598:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7588:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$56_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 553,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43,
                              "src": "7588:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7565:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 555,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7564:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 556,
                              "name": "maticPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "7613:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_10000000000_by_1",
                                "typeString": "int_const 10000000000"
                              },
                              "id": 559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7626:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3130",
                                "id": 558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7630:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "src": "7626:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000000000_by_1",
                                "typeString": "int_const 10000000000"
                              }
                            },
                            "src": "7613:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 561,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7612:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7564:69:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7537:96:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "7537:96:0"
                }
              ]
            },
            "functionSelector": "db99e793",
            "id": 566,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateExerciseCost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 566,
                  "src": "7487:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7487:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7486:9:0"
            },
            "returnParameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7503:0:0"
            },
            "scope": 576,
            "src": "7459:181:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 574,
              "nodeType": "Block",
              "src": "7717:40:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 571,
                      "name": "maticOpts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "7734:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                        "typeString": "struct OptionTrades.option storage ref[] storage ref"
                      }
                    },
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7734:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 570,
                  "id": 573,
                  "nodeType": "Return",
                  "src": "7727:23:0"
                }
              ]
            },
            "functionSelector": "f1356ffc",
            "id": 575,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMaticOptsLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7673:2:0"
            },
            "returnParameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 569,
                  "mutability": "mutable",
                  "name": "maticOptsLength",
                  "nodeType": "VariableDeclaration",
                  "scope": 575,
                  "src": "7692:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7692:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7691:25:0"
            },
            "scope": 576,
            "src": "7646:111:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 577,
        "src": "124:7635:0"
      }
    ],
    "src": "0:7759:0"
  },
  "legacyAST": {
    "absolutePath": "/home/turupawn/Projects/Blockchain/MaticOptionTrading/contracts/OptionTrades.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        622
      ],
      "LinkTokenInterface": [
        717
      ],
      "OptionTrades": [
        576
      ]
    },
    "id": 577,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "absolutePath": "/home/turupawn/Projects/Blockchain/MaticOptionTrading/contracts/dependencies/LinkTokenInterface.sol",
        "file": "./dependencies/LinkTokenInterface.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 577,
        "sourceUnit": 718,
        "src": "24:47:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/turupawn/Projects/Blockchain/MaticOptionTrading/contracts/dependencies/AggregatorV3Interface.sol",
        "file": "./dependencies/AggregatorV3Interface.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 577,
        "sourceUnit": 623,
        "src": "72:50:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 576,
        "linearizedBaseContracts": [
          576
        ],
        "name": "OptionTrades",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "maticFeed",
            "nodeType": "VariableDeclaration",
            "scope": 576,
            "src": "179:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$622",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 5,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 622,
                "src": "179:21:0"
              },
              "referencedDeclaration": 622,
              "src": "179:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$622",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 9,
            "mutability": "mutable",
            "name": "LINK",
            "nodeType": "VariableDeclaration",
            "scope": 576,
            "src": "266:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkTokenInterface_$717",
              "typeString": "contract LinkTokenInterface"
            },
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "LinkTokenInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 717,
                "src": "266:18:0"
              },
              "referencedDeclaration": 717,
              "src": "266:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkTokenInterface_$717",
                "typeString": "contract LinkTokenInterface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "maticPrice",
            "nodeType": "VariableDeclaration",
            "scope": 576,
            "src": "304:15:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "304:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "contractAddr",
            "nodeType": "VariableDeclaration",
            "scope": 576,
            "src": "325:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 12,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "325:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 21,
            "mutability": "mutable",
            "name": "callHash",
            "nodeType": "VariableDeclaration",
            "scope": 576,
            "src": "360:54:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 14,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "360:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "43414c4c",
                      "id": 18,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "406:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_706a455ca44ffc9f46e1c567fb1a4fdf73956f8e912065b7c4c6af237e247d9c",
                        "typeString": "literal_string \"CALL\""
                      },
                      "value": "CALL"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_706a455ca44ffc9f46e1c567fb1a4fdf73956f8e912065b7c4c6af237e247d9c",
                        "typeString": "literal_string \"CALL\""
                      }
                    ],
                    "expression": {
                      "id": 16,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "389:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "389:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 19,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "389:24:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 15,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "379:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "379:35:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "putHash",
            "nodeType": "VariableDeclaration",
            "scope": 576,
            "src": "420:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 22,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "420:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "505554",
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "465:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_08f5cef085f1c57c9b95d4f7af2f84617041386faf839e3dcfd4f97829a91e11",
                        "typeString": "literal_string \"PUT\""
                      },
                      "value": "PUT"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_08f5cef085f1c57c9b95d4f7af2f84617041386faf839e3dcfd4f97829a91e11",
                        "typeString": "literal_string \"PUT\""
                      }
                    ],
                    "expression": {
                      "id": 24,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "448:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "448:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 27,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "448:23:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 23,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "438:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 28,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "438:34:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "OptionTrades.OptionType",
            "id": 32,
            "members": [
              {
                "id": 30,
                "name": "PUT",
                "nodeType": "EnumValue",
                "src": "497:3:0"
              },
              {
                "id": 31,
                "name": "CALL",
                "nodeType": "EnumValue",
                "src": "502:4:0"
              }
            ],
            "name": "OptionType",
            "nodeType": "EnumDefinition",
            "src": "479:29:0"
          },
          {
            "canonicalName": "OptionTrades.option",
            "id": 56,
            "members": [
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "optionType",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "584:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_OptionType_$32",
                  "typeString": "enum OptionTrades.OptionType"
                },
                "typeName": {
                  "id": 34,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 33,
                    "name": "OptionType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 32,
                    "src": "584:10:0"
                  },
                  "referencedDeclaration": 32,
                  "src": "584:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OptionType_$32",
                    "typeString": "enum OptionTrades.OptionType"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "strike",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "662:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 36,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "662:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "premium",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "760:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "760:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "mutability": "mutable",
                "name": "expiry",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "833:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "833:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 43,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "890:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 42,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "890:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45,
                "mutability": "mutable",
                "name": "exercised",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "957:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 44,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "957:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47,
                "mutability": "mutable",
                "name": "canceled",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "1009:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 46,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1009:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 49,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "1059:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1059:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51,
                "mutability": "mutable",
                "name": "latestCost",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "1116:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 50,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1116:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "writer",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "1188:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 52,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1188:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "buyer",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "1239:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 54,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1239:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "option",
            "nodeType": "StructDefinition",
            "scope": 576,
            "src": "560:725:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "63259516",
            "id": 60,
            "mutability": "mutable",
            "name": "maticOpts",
            "nodeType": "VariableDeclaration",
            "scope": 576,
            "src": "1290:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
              "typeString": "struct OptionTrades.option[]"
            },
            "typeName": {
              "baseType": {
                "id": 58,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 57,
                  "name": "option",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 56,
                  "src": "1290:6:0"
                },
                "referencedDeclaration": 56,
                "src": "1290:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_option_$56_storage_ptr",
                  "typeString": "struct OptionTrades.option"
                }
              },
              "id": 59,
              "nodeType": "ArrayTypeName",
              "src": "1290:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage_ptr",
                "typeString": "struct OptionTrades.option[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "1411:578:0",
              "statements": [
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63,
                      "name": "maticFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1750:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$622",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307864304435653344423434444530354539463239344242306133624545614630333044453234416461",
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1784:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 64,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 622,
                        "src": "1762:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$622_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1762:65:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$622",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "1750:77:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$622",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1750:77:0"
                },
                {
                  "expression": {
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 69,
                      "name": "LINK",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1866:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$717",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307833323643393737453665666338344535313262423943333066373645333063313630654430364642",
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1892:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x326C977E6efc84E512bB9C30f76E30c160eD06FB"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 70,
                        "name": "LinkTokenInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "1873:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$717_$",
                          "typeString": "type(contract LinkTokenInterface)"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1873:62:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$717",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "src": "1866:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkTokenInterface_$717",
                      "typeString": "contract LinkTokenInterface"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "1866:69:0"
                },
                {
                  "expression": {
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 75,
                      "name": "contractAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1945:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 80,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "1976:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptionTrades_$576",
                                "typeString": "contract OptionTrades"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptionTrades_$576",
                                "typeString": "contract OptionTrades"
                              }
                            ],
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1968:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 78,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1968:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1968:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1960:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 76,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1960:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1960:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1945:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:37:0"
                }
              ]
            },
            "id": 86,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1401:2:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1411:0:0"
            },
            "scope": 576,
            "src": "1390:599:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 117,
              "nodeType": "Block",
              "src": "2088:500:0",
              "statements": [
                {
                  "assignments": [
                    92,
                    94,
                    96,
                    98,
                    100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92,
                      "mutability": "mutable",
                      "name": "roundID",
                      "nodeType": "VariableDeclaration",
                      "scope": 117,
                      "src": "2112:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 91,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "2112:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 94,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "scope": 117,
                      "src": "2141:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 93,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "2141:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 96,
                      "mutability": "mutable",
                      "name": "startedAt",
                      "nodeType": "VariableDeclaration",
                      "scope": 117,
                      "src": "2164:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 95,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2164:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 98,
                      "mutability": "mutable",
                      "name": "timeStamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 117,
                      "src": "2192:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 97,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2192:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 100,
                      "mutability": "mutable",
                      "name": "answeredInRound",
                      "nodeType": "VariableDeclaration",
                      "scope": 117,
                      "src": "2220:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 99,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "2220:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 104,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 101,
                        "name": "maticFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "2255:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$622",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 621,
                      "src": "2255:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2255:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2098:184:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 106,
                          "name": "timeStamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2360:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2372:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2360:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f756e64206e6f7420636f6d706c657465",
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2375:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697",
                          "typeString": "literal_string \"Round not complete\""
                        },
                        "value": "Round not complete"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697",
                          "typeString": "literal_string \"Round not complete\""
                        }
                      ],
                      "id": 105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2352:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2352:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "2352:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 114,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "2575:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2570:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 112,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2570:4:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2570:11:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 90,
                  "id": 116,
                  "nodeType": "Return",
                  "src": "2563:18:0"
                }
              ]
            },
            "functionSelector": "c83d3248",
            "id": 118,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMaticPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2058:2:0"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "2082:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2082:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2081:6:0"
            },
            "scope": 576,
            "src": "2036:552:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "2662:45:0",
              "statements": [
                {
                  "expression": {
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 121,
                      "name": "maticPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2672:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 122,
                        "name": "getMaticPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "2685:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2685:15:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2672:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "2672:28:0"
                }
              ]
            },
            "id": 127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePrices",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2650:2:0"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2662:0:0"
            },
            "scope": 576,
            "src": "2629:78:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 234,
              "nodeType": "Block",
              "src": "3048:795:0",
              "statements": [
                {
                  "assignments": [
                    141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 141,
                      "mutability": "mutable",
                      "name": "optionType",
                      "nodeType": "VariableDeclaration",
                      "scope": 234,
                      "src": "3058:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 140,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3058:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 148,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 145,
                            "name": "optionType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "3106:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 143,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "3089:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3089:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3089:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 142,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "3079:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3079:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3058:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 150,
                            "name": "optionType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "3136:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 151,
                            "name": "callHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "3150:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3136:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 153,
                            "name": "optionType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "3162:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 154,
                            "name": "putHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "3176:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3162:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3136:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792043414c4c20616e6420505554206f7074696f6e2074797065732061726520737570706f72746564",
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3185:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46229350b868ccea281aa9277d359e6a560f0f2fd6d51e1f08ceca850f264338",
                          "typeString": "literal_string \"Only CALL and PUT option types are supported\""
                        },
                        "value": "Only CALL and PUT option types are supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46229350b868ccea281aa9277d359e6a560f0f2fd6d51e1f08ceca850f264338",
                          "typeString": "literal_string \"Only CALL and PUT option types are supported\""
                        }
                      ],
                      "id": 149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3128:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3128:104:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "3128:104:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 161,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3250:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3250:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 163,
                          "name": "tknAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "3263:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3250:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420616d6f756e74206f66204d6174696320737570706c696564",
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3271:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966",
                          "typeString": "literal_string \"Incorrect amount of Matic supplied\""
                        },
                        "value": "Incorrect amount of Matic supplied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966",
                          "typeString": "literal_string \"Incorrect amount of Matic supplied\""
                        }
                      ],
                      "id": 160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3242:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "3242:66:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 168,
                      "name": "updatePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "3319:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3319:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "3319:14:0"
                },
                {
                  "assignments": [
                    173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 173,
                      "mutability": "mutable",
                      "name": "optionTypeEnum",
                      "nodeType": "VariableDeclaration",
                      "scope": 234,
                      "src": "3343:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OptionType_$32",
                        "typeString": "enum OptionTrades.OptionType"
                      },
                      "typeName": {
                        "id": 172,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 171,
                          "name": "OptionType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32,
                          "src": "3343:10:0"
                        },
                        "referencedDeclaration": 32,
                        "src": "3343:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OptionType_$32",
                          "typeString": "enum OptionTrades.OptionType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 174,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3343:25:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 175,
                      "name": "optionType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "3381:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 176,
                      "name": "callHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "3395:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3381:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 189,
                    "nodeType": "Block",
                    "src": "3483:56:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 184,
                            "name": "optionTypeEnum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "3497:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OptionType_$32",
                              "typeString": "enum OptionTrades.OptionType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 185,
                              "name": "OptionType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "3514:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_OptionType_$32_$",
                                "typeString": "type(enum OptionTrades.OptionType)"
                              }
                            },
                            "id": 186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PUT",
                            "nodeType": "MemberAccess",
                            "src": "3514:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OptionType_$32",
                              "typeString": "enum OptionTrades.OptionType"
                            }
                          },
                          "src": "3497:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OptionType_$32",
                            "typeString": "enum OptionTrades.OptionType"
                          }
                        },
                        "id": 188,
                        "nodeType": "ExpressionStatement",
                        "src": "3497:31:0"
                      }
                    ]
                  },
                  "id": 190,
                  "nodeType": "IfStatement",
                  "src": "3378:161:0",
                  "trueBody": {
                    "id": 183,
                    "nodeType": "Block",
                    "src": "3413:57:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 178,
                            "name": "optionTypeEnum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "3427:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OptionType_$32",
                              "typeString": "enum OptionTrades.OptionType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 179,
                              "name": "OptionType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "3444:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_OptionType_$32_$",
                                "typeString": "type(enum OptionTrades.OptionType)"
                              }
                            },
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "CALL",
                            "nodeType": "MemberAccess",
                            "src": "3444:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OptionType_$32",
                              "typeString": "enum OptionTrades.OptionType"
                            }
                          },
                          "src": "3427:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OptionType_$32",
                            "typeString": "enum OptionTrades.OptionType"
                          }
                        },
                        "id": 182,
                        "nodeType": "ExpressionStatement",
                        "src": "3427:32:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 192,
                      "mutability": "mutable",
                      "name": "latestCost",
                      "nodeType": "VariableDeclaration",
                      "scope": 234,
                      "src": "3548:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 191,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3548:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 204,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 193,
                            "name": "strike",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3567:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 194,
                            "name": "tknAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "3576:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3567:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 196,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3566:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 197,
                            "name": "maticPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3587:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3600:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3130",
                              "id": 199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3604:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "src": "3600:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            }
                          },
                          "src": "3587:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 202,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3586:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3566:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3548:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 209,
                            "name": "optionTypeEnum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "3701:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OptionType_$32",
                              "typeString": "enum OptionTrades.OptionType"
                            }
                          },
                          {
                            "id": 210,
                            "name": "strike",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3717:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 211,
                            "name": "premium",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 131,
                            "src": "3725:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 212,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "3734:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 213,
                            "name": "tknAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "3742:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3750:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3757:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "expression": {
                              "id": 216,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "3764:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3764:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 218,
                            "name": "latestCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "3782:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 221,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3802:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3802:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3794:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 219,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3794:8:0",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3794:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 228,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3831:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 227,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3823:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 226,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3823:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3823:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3815:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 224,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3815:8:0",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3815:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_OptionType_$32",
                              "typeString": "enum OptionTrades.OptionType"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 208,
                          "name": "option",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "3694:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_option_$56_storage_ptr_$",
                            "typeString": "type(struct OptionTrades.option storage pointer)"
                          }
                        },
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3694:141:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$56_memory_ptr",
                          "typeString": "struct OptionTrades.option memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_option_$56_memory_ptr",
                          "typeString": "struct OptionTrades.option memory"
                        }
                      ],
                      "expression": {
                        "id": 205,
                        "name": "maticOpts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "3679:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                          "typeString": "struct OptionTrades.option storage ref[] storage ref"
                        }
                      },
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3679:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_option_$56_storage_$returns$__$",
                        "typeString": "function (struct OptionTrades.option storage ref)"
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3679:157:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "3679:157:0"
                }
              ]
            },
            "functionSelector": "3a39f623",
            "id": 235,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "writeOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "strike",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "2954:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2954:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "premium",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "2967:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2967:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "2981:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2981:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "tknAmt",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "2994:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2994:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "optionType",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "3007:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3007:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2953:79:0"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3048:0:0"
            },
            "scope": 576,
            "src": "2933:910:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 288,
              "nodeType": "Block",
              "src": "3988:362:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 241,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4006:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4006:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 243,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "4020:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 245,
                            "indexExpression": {
                              "id": 244,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "4030:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4020:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$56_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 246,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "writer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53,
                          "src": "4020:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4006:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646964206e6f742077726974652074686973206f7074696f6e",
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4042:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd",
                          "typeString": "literal_string \"You did not write this option\""
                        },
                        "value": "You did not write this option"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd",
                          "typeString": "literal_string \"You did not write this option\""
                        }
                      ],
                      "id": 240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3998:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3998:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "3998:76:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4148:23:0",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 252,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "4149:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 254,
                              "indexExpression": {
                                "id": 253,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 237,
                                "src": "4159:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4149:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$56_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 255,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "canceled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47,
                            "src": "4149:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 257,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "4175:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 259,
                              "indexExpression": {
                                "id": 258,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 237,
                                "src": "4185:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4175:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$56_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 260,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55,
                            "src": "4175:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4206:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4198:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 261,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4198:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4198:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4175:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4148:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206f7074696f6e2063616e6e6f742062652063616e63656c6564",
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4210:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a",
                          "typeString": "literal_string \"This option cannot be canceled\""
                        },
                        "value": "This option cannot be canceled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a",
                          "typeString": "literal_string \"This option cannot be canceled\""
                        }
                      ],
                      "id": 251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4140:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4140:103:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "4140:103:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 275,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "4283:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 277,
                          "indexExpression": {
                            "id": 276,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 237,
                            "src": "4293:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4283:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$56_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43,
                        "src": "4283:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 270,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "4253:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 272,
                          "indexExpression": {
                            "id": 271,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 237,
                            "src": "4263:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4253:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$56_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 273,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "writer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53,
                        "src": "4253:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4253:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4253:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "4253:51:0"
                },
                {
                  "expression": {
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 281,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "4314:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 283,
                        "indexExpression": {
                          "id": 282,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 237,
                          "src": "4324:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4314:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$56_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "canceled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47,
                      "src": "4314:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4339:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4314:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "4314:29:0"
                }
              ]
            },
            "functionSelector": "de6bf635",
            "id": 289,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "3964:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3964:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3963:9:0"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3988:0:0"
            },
            "scope": 576,
            "src": "3942:408:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "4479:469:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 294,
                      "name": "updatePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "4489:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4489:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "4489:14:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4521:23:0",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 298,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "4522:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 300,
                              "indexExpression": {
                                "id": 299,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 291,
                                "src": "4532:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4522:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$56_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 301,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "canceled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47,
                            "src": "4522:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 303,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "4548:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 305,
                              "indexExpression": {
                                "id": 304,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 291,
                                "src": "4558:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4548:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$56_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 306,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expiry",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41,
                            "src": "4548:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 307,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "4571:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4571:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4548:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4521:65:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696f6e2069732063616e63656c65642f6578706972656420616e642063616e6e6f7420626520626f75676874",
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4588:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77",
                          "typeString": "literal_string \"Option is canceled/expired and cannot be bought\""
                        },
                        "value": "Option is canceled/expired and cannot be bought"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77",
                          "typeString": "literal_string \"Option is canceled/expired and cannot be bought\""
                        }
                      ],
                      "id": 297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4513:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4513:125:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "4513:125:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 315,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4702:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4702:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 317,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "4715:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 319,
                            "indexExpression": {
                              "id": 318,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 291,
                              "src": "4725:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4715:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$56_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "premium",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "4715:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4702:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420616d6f756e74206f66204d415449432073656e7420666f72207072656d69756d",
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4738:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd",
                          "typeString": "literal_string \"Incorrect amount of MATIC sent for premium\""
                        },
                        "value": "Incorrect amount of MATIC sent for premium"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd",
                          "typeString": "literal_string \"Incorrect amount of MATIC sent for premium\""
                        }
                      ],
                      "id": 314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4694:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4694:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "4694:89:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 330,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "4868:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 332,
                          "indexExpression": {
                            "id": 331,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "4878:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4868:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$56_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "premium",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39,
                        "src": "4868:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 325,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "4838:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 327,
                          "indexExpression": {
                            "id": 326,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "4848:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4838:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$56_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "writer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53,
                        "src": "4838:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4838:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4838:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "4838:52:0"
                },
                {
                  "expression": {
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 336,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "4900:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 338,
                        "indexExpression": {
                          "id": 337,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "4910:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4900:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$56_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "buyer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55,
                      "src": "4900:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 342,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4930:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4930:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4922:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4922:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4922:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4900:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "4900:41:0"
                }
              ]
            },
            "functionSelector": "fba225b9",
            "id": 348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 291,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "4455:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 290,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4455:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4454:9:0"
            },
            "returnParameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4479:0:0"
            },
            "scope": 576,
            "src": "4436:512:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 475,
              "nodeType": "Block",
              "src": "5079:1548:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 354,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "5317:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 356,
                            "indexExpression": {
                              "id": 355,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 350,
                              "src": "5327:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5317:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$56_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55,
                          "src": "5317:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 358,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5340:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5340:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5317:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206f776e2074686973206f7074696f6e",
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5352:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62",
                          "typeString": "literal_string \"You do not own this option\""
                        },
                        "value": "You do not own this option"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62",
                          "typeString": "literal_string \"You do not own this option\""
                        }
                      ],
                      "id": 353,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5309:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5309:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "5309:72:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5399:24:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 365,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "5400:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 367,
                            "indexExpression": {
                              "id": 366,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 350,
                              "src": "5410:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5400:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$56_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exercised",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45,
                          "src": "5400:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696f6e2068617320616c7265616479206265656e20657865726369736564",
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5425:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e",
                          "typeString": "literal_string \"Option has already been exercised\""
                        },
                        "value": "Option has already been exercised"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e",
                          "typeString": "literal_string \"Option has already been exercised\""
                        }
                      ],
                      "id": 364,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5391:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5391:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "5391:70:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 374,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "5479:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 376,
                            "indexExpression": {
                              "id": 375,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 350,
                              "src": "5489:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5479:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$56_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 377,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "5479:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 378,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "5502:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5502:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5479:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696f6e2069732065787069726564",
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5519:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b",
                          "typeString": "literal_string \"Option is expired\""
                        },
                        "value": "Option is expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b",
                          "typeString": "literal_string \"Option is expired\""
                        }
                      ],
                      "id": 373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5471:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5471:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "5471:68:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 384,
                      "name": "updatePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "5598:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5598:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "5598:14:0"
                },
                {
                  "assignments": [
                    388
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 388,
                      "mutability": "mutable",
                      "name": "exerciseVal",
                      "nodeType": "VariableDeclaration",
                      "scope": 475,
                      "src": "5649:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 387,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5649:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 398,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 389,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "5668:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 391,
                        "indexExpression": {
                          "id": 390,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "5678:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5668:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$56_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 392,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "strike",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "5668:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 393,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "5689:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 395,
                        "indexExpression": {
                          "id": 394,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "5699:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5689:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$56_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "5689:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5668:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5649:60:0"
                },
                {
                  "assignments": [
                    400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 400,
                      "mutability": "mutable",
                      "name": "equivMatic",
                      "nodeType": "VariableDeclaration",
                      "scope": 475,
                      "src": "5773:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 399,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5773:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 409,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 401,
                      "name": "exerciseVal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 388,
                      "src": "5791:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 402,
                            "name": "maticPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "5806:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            },
                            "id": 405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5819:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3130",
                              "id": 404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5823:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "src": "5819:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            }
                          },
                          "src": "5806:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 407,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5805:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5791:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5773:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 411,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5992:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5992:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 413,
                          "name": "equivMatic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 400,
                          "src": "6005:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5992:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374204c494e4b20616d6f756e742073656e7420746f206578657263697365",
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6017:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e",
                          "typeString": "literal_string \"Incorrect LINK amount sent to exercise\""
                        },
                        "value": "Incorrect LINK amount sent to exercise"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e",
                          "typeString": "literal_string \"Incorrect LINK amount sent to exercise\""
                        }
                      ],
                      "id": 410,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5984:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5984:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "5984:74:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_OptionType_$32",
                      "typeString": "enum OptionTrades.OptionType"
                    },
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 418,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "6071:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 420,
                        "indexExpression": {
                          "id": 419,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "6081:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6071:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$56_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 421,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "optionType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35,
                      "src": "6071:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OptionType_$32",
                        "typeString": "enum OptionTrades.OptionType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 422,
                        "name": "OptionType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "6099:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_OptionType_$32_$",
                          "typeString": "type(enum OptionTrades.OptionType)"
                        }
                      },
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CALL",
                      "nodeType": "MemberAccess",
                      "src": "6099:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OptionType_$32",
                        "typeString": "enum OptionTrades.OptionType"
                      }
                    },
                    "src": "6071:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 466,
                    "nodeType": "Block",
                    "src": "6359:222:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 452,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "6452:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 454,
                                "indexExpression": {
                                  "id": 453,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 350,
                                  "src": "6462:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6452:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$56_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 455,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43,
                              "src": "6452:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 448,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "6431:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 449,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6431:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6423:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 446,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6423:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6423:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6423:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6423:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 457,
                        "nodeType": "ExpressionStatement",
                        "src": "6423:50:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 463,
                              "name": "equivMatic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 400,
                              "src": "6559:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 458,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "6529:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 460,
                                "indexExpression": {
                                  "id": 459,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 350,
                                  "src": "6539:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6529:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$56_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 461,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "writer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53,
                              "src": "6529:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6529:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6529:41:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 465,
                        "nodeType": "ExpressionStatement",
                        "src": "6529:41:0"
                      }
                    ]
                  },
                  "id": 467,
                  "nodeType": "IfStatement",
                  "src": "6068:513:0",
                  "trueBody": {
                    "id": 445,
                    "nodeType": "Block",
                    "src": "6124:222:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 430,
                              "name": "equivMatic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 400,
                              "src": "6211:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 425,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "6181:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 427,
                                "indexExpression": {
                                  "id": 426,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 350,
                                  "src": "6191:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6181:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$56_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 428,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "writer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53,
                              "src": "6181:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6181:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6181:41:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 432,
                        "nodeType": "ExpressionStatement",
                        "src": "6181:41:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 439,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "6314:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 441,
                                "indexExpression": {
                                  "id": 440,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 350,
                                  "src": "6324:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6314:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$56_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 442,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43,
                              "src": "6314:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 435,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "6293:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 436,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6293:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6285:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 433,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6285:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6285:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6285:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6285:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 444,
                        "nodeType": "ExpressionStatement",
                        "src": "6285:50:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 468,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "6590:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 470,
                        "indexExpression": {
                          "id": 469,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "6600:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6590:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$56_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 471,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exercised",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "6590:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6616:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6590:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "6590:30:0"
                }
              ]
            },
            "functionSelector": "b07f0a41",
            "id": 476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exercise",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 350,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "5055:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5055:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5054:9:0"
            },
            "returnParameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5079:0:0"
            },
            "scope": 576,
            "src": "5037:1590:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 533,
              "nodeType": "Block",
              "src": "6781:478:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 482,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6799:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6799:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 484,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "6813:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 486,
                            "indexExpression": {
                              "id": 485,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 478,
                              "src": "6823:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6813:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$56_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "writer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53,
                          "src": "6813:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6799:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646964206e6f742077726974652074686973206f7074696f6e",
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6835:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd",
                          "typeString": "literal_string \"You did not write this option\""
                        },
                        "value": "You did not write this option"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd",
                          "typeString": "literal_string \"You did not write this option\""
                        }
                      ],
                      "id": 481,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6791:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6791:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 491,
                  "nodeType": "ExpressionStatement",
                  "src": "6791:76:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 493,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "6943:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 495,
                                "indexExpression": {
                                  "id": 494,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 478,
                                  "src": "6953:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6943:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$56_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 496,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "expiry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41,
                              "src": "6943:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "expression": {
                                "id": 497,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "6967:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "6967:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6943:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6986:24:0",
                            "subExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 500,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "6987:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 502,
                                "indexExpression": {
                                  "id": 501,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 478,
                                  "src": "6997:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6987:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$56_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 503,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "exercised",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45,
                              "src": "6987:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6943:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "7014:23:0",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 506,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "7015:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 508,
                              "indexExpression": {
                                "id": 507,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 478,
                                "src": "7025:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7015:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$56_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 509,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "canceled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47,
                            "src": "7015:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6943:94:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206f7074696f6e206973206e6f7420656c696769626c6520666f72207769746864726177",
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7039:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21",
                          "typeString": "literal_string \"This option is not eligible for withdraw\""
                        },
                        "value": "This option is not eligible for withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21",
                          "typeString": "literal_string \"This option is not eligible for withdraw\""
                        }
                      ],
                      "id": 492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6935:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6935:147:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "6935:147:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 520,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "7122:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 522,
                          "indexExpression": {
                            "id": 521,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "7132:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7122:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$56_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 523,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43,
                        "src": "7122:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 515,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "7092:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 517,
                          "indexExpression": {
                            "id": 516,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "7102:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7092:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$56_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 518,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "writer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53,
                        "src": "7092:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "7092:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7092:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 525,
                  "nodeType": "ExpressionStatement",
                  "src": "7092:51:0"
                },
                {
                  "expression": {
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 526,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "7223:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 528,
                        "indexExpression": {
                          "id": 527,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 478,
                          "src": "7233:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7223:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$56_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 529,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "canceled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47,
                      "src": "7223:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7248:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7223:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "7223:29:0"
                }
              ]
            },
            "functionSelector": "790eee2e",
            "id": 534,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveExpiredFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 534,
                  "src": "6757:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6757:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6756:9:0"
            },
            "returnParameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6781:0:0"
            },
            "scope": 576,
            "src": "6727:532:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 565,
              "nodeType": "Block",
              "src": "7503:137:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 539,
                      "name": "updatePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "7513:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7513:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "7513:14:0"
                },
                {
                  "expression": {
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 542,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "7537:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 544,
                        "indexExpression": {
                          "id": 543,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 536,
                          "src": "7547:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7537:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$56_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 545,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "latestCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "7537:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 546,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "7565:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 548,
                                "indexExpression": {
                                  "id": 547,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "7575:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7565:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$56_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 549,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "strike",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37,
                              "src": "7565:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 550,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "7588:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 552,
                                "indexExpression": {
                                  "id": 551,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "7598:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7588:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$56_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 553,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43,
                              "src": "7588:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7565:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 555,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7564:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 556,
                              "name": "maticPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "7613:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_10000000000_by_1",
                                "typeString": "int_const 10000000000"
                              },
                              "id": 559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7626:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3130",
                                "id": 558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7630:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "src": "7626:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000000000_by_1",
                                "typeString": "int_const 10000000000"
                              }
                            },
                            "src": "7613:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 561,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7612:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7564:69:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7537:96:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "7537:96:0"
                }
              ]
            },
            "functionSelector": "db99e793",
            "id": 566,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateExerciseCost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 566,
                  "src": "7487:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7487:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7486:9:0"
            },
            "returnParameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7503:0:0"
            },
            "scope": 576,
            "src": "7459:181:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 574,
              "nodeType": "Block",
              "src": "7717:40:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 571,
                      "name": "maticOpts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "7734:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_option_$56_storage_$dyn_storage",
                        "typeString": "struct OptionTrades.option storage ref[] storage ref"
                      }
                    },
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7734:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 570,
                  "id": 573,
                  "nodeType": "Return",
                  "src": "7727:23:0"
                }
              ]
            },
            "functionSelector": "f1356ffc",
            "id": 575,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMaticOptsLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7673:2:0"
            },
            "returnParameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 569,
                  "mutability": "mutable",
                  "name": "maticOptsLength",
                  "nodeType": "VariableDeclaration",
                  "scope": 575,
                  "src": "7692:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7692:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7691:25:0"
            },
            "scope": 576,
            "src": "7646:111:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 577,
        "src": "124:7635:0"
      }
    ],
    "src": "0:7759:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "80001": {
      "events": {},
      "links": {},
      "address": "0xb717d396Bccc4B774285E3Dff4A0E91BbcDa4a74",
      "transactionHash": "0x5e01066ca02cfe43cc31f07fb847543168f4046edecdf8183a090edb6c2dc54b"
    }
  },
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-05-12T19:41:56.164Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}