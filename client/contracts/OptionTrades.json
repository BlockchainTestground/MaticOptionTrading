{
  "contractName": "OptionTrades",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "maticOpts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "strike",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "premium",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "exercised",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "canceled",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "latestCost",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "writer",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "buyer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getMaticPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "strike",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "premium",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tknAmt",
          "type": "uint256"
        }
      ],
      "name": "writeOption",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ID",
          "type": "uint256"
        }
      ],
      "name": "cancelOption",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ID",
          "type": "uint256"
        }
      ],
      "name": "buyOption",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ID",
          "type": "uint256"
        }
      ],
      "name": "exercise",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ID",
          "type": "uint256"
        }
      ],
      "name": "retrieveExpiredFunds",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ID",
          "type": "uint256"
        }
      ],
      "name": "updateExerciseCost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaticOptsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"}],\"name\":\"buyOption\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"}],\"name\":\"cancelOption\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"}],\"name\":\"exercise\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaticOptsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaticPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"maticOpts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"strike\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exercised\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"latestCost\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"writer\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"}],\"name\":\"retrieveExpiredFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"}],\"name\":\"updateExerciseCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strike\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tknAmt\",\"type\":\"uint256\"}],\"name\":\"writeOption\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/turupawn/Projects/Blockchain/MyOptionsTrade/contracts/OptionTrades.sol\":\"OptionTrades\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/turupawn/Projects/Blockchain/MyOptionsTrade/contracts/OptionTrades.sol\":{\"keccak256\":\"0x636512af3ecaa88bb8a690c79064e45575092f66ee7d72fa0c5d39c059802286\",\"urls\":[\"bzz-raw://d24b3f8bb39bc728ede22dfd4645b77a126fd1cc82c8766fdba79e623a7cda4b\",\"dweb:/ipfs/QmRVwoXmMebWNa5gr4KDuqJHU7uz37KE7GebPrZQhUQp4k\"]},\"/home/turupawn/Projects/Blockchain/MyOptionsTrade/contracts/dependencies/AggregatorV3Interface.sol\":{\"keccak256\":\"0x533261510414ff2b0ead90c32001a277e26bc4f5eb19c95b8b47e32be0b9aad7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28e428a666203d630b65ff58cfe6834c8f1d4552382812bd351cdb9b45ab2d46\",\"dweb:/ipfs/QmeKKVMoidNENnfSK5JExWJderSY6AS4H1ei9Zb5F1wXK1\"]},\"/home/turupawn/Projects/Blockchain/MyOptionsTrade/contracts/dependencies/LinkTokenInterface.sol\":{\"keccak256\":\"0x6afbff5516a4d765a698cfd3b49ab8f6c1368ea034bc9130fce0d0e54f4a0a01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65c865dcd409dbf82d60904e8d875a33496b4bbf0835a223cad7e0837bbf4bed\",\"dweb:/ipfs/QmXcLuSQFbbTqwLs7TobL7jQLFeqgc2YLbammu5fY1caFh\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5073d0d5e3db44de05e9f294bb0a3beeaf030de24ada6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073326c977e6efc84e512bb9c30f76e30c160ed06fb600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555030600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ef48061010a6000396000f3fe6080604052600436106100865760003560e01c8063c83d324811610059578063c83d324814610125578063db99e79314610150578063de6bf63514610179578063f1356ffc14610195578063fba225b9146101c057610086565b80635891a76b1461008b57806363259516146100a7578063790eee2e146100ed578063b07f0a4114610109575b600080fd5b6100a560048036038101906100a09190611655565b6101dc565b005b3480156100b357600080fd5b506100ce60048036038101906100c9919061162c565b610411565b6040516100e49a99989796959493929190611c7b565b60405180910390f35b6101076004803603810190610102919061162c565b6104cf565b005b610123600480360381019061011e919061162c565b61085e565b005b34801561013157600080fd5b5061013a610d1c565b6040516101479190611c60565b60405180910390f35b34801561015c57600080fd5b506101776004803603810190610172919061162c565b610e1b565b005b610193600480360381019061018e919061162c565b610f34565b005b3480156101a157600080fd5b506101aa6112ad565b6040516101b79190611c60565b60405180910390f35b6101da60048036038101906101d5919061162c565b6112ba565b005b6101e46115c8565b803414610226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021d90611b80565b60405180910390fd5b60006402540be40060025461023b9190611d59565b82866102479190611d59565b6102519190611d28565b9050600460405180610140016040528087815260200186815260200185815260200184815260200160001515815260200160001515815260200160048054905081526020018381526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150506001900390600052602060002090600902016000909190919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548160ff02191690831515021790555060c0820151816005015560e082015181600601556101008201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101208201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050565b6004818154811061042157600080fd5b90600052602060002090600902016000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900460ff16908060050154908060060154908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508a565b60048181548110610509577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059f90611bc0565b60405180910390fd5b42600482815481106105e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600902016002015411158015610659575060048181548110610638577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160040160009054906101000a900460ff16155b80156106bb57506004818154811061069a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160040160019054906101000a900460ff16155b6106fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f190611c20565b60405180910390fd5b60048181548110610734577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600483815481106107b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060090201600301549081150290604051600060405180830381858888f193505050501580156107f6573d6000803e3d6000fd5b50600160048281548110610833577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160040160016101000a81548160ff02191690831515021790555050565b3373ffffffffffffffffffffffffffffffffffffffff16600482815481106108af577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610937576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092e90611b40565b60405180910390fd5b60048181548110610971577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160040160009054906101000a900460ff16156109d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c790611c40565b60405180910390fd5b4260048281548110610a0b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600902016002015411610a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5490611b60565b60405180910390fd5b610a656115c8565b600060048281548110610aa1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600902016003015460048381548110610aed577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160000154610b099190611d59565b905060006402540be400600254610b209190611d59565b82610b2b9190611d28565b9050803414610b6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6690611b20565b60405180910390fd5b60048381548110610ba9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610c20573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc60048581548110610c75577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060090201600301549081150290604051600060405180830381858888f19350505050158015610cb2573d6000803e3d6000fd5b50600160048481548110610cef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160040160006101000a81548160ff021916908315150217905550505050565b60008060008060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610d8b57600080fd5b505afa158015610d9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc391906116b8565b9450945094509450945060008211610e10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0790611be0565b60405180910390fd5b839550505050505090565b610e236115c8565b6402540be400600254610e369190611d59565b60048281548110610e70577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600902016003015460048381548110610ebc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160000154610ed89190611d59565b610ee29190611d28565b60048281548110610f1c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600902016006018190555050565b60048181548110610f6e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461100d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100490611bc0565b60405180910390fd5b60048181548110611047577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160040160019054906101000a900460ff1615801561110a5750600073ffffffffffffffffffffffffffffffffffffffff16600482815481106110c0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b611149576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114090611c00565b60405180910390fd5b60048181548110611183577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60048381548110611208577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060090201600301549081150290604051600060405180830381858888f19350505050158015611245573d6000803e3d6000fd5b50600160048281548110611282577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160040160016101000a81548160ff02191690831515021790555050565b6000600480549050905090565b6112c26115c8565b600481815481106112fc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160040160019054906101000a900460ff161580156113725750426004828154811061135e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160020154115b6113b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a890611b00565b60405180910390fd5b600481815481106113eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160010154341461143e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143590611ba0565b60405180910390fd5b60048181548110611478577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600483815481106114fd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060090201600101549081150290604051600060405180830381858888f1935050505015801561153a573d6000803e3d6000fd5b503360048281548110611576577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6115d0610d1c565b600281905550565b6000815190506115e781611e79565b92915050565b6000813590506115fc81611e90565b92915050565b60008151905061161181611e90565b92915050565b60008151905061162681611ea7565b92915050565b60006020828403121561163e57600080fd5b600061164c848285016115ed565b91505092915050565b6000806000806080858703121561166b57600080fd5b6000611679878288016115ed565b945050602061168a878288016115ed565b935050604061169b878288016115ed565b92505060606116ac878288016115ed565b91505092959194509250565b600080600080600060a086880312156116d057600080fd5b60006116de88828901611617565b95505060206116ef888289016115d8565b945050604061170088828901611602565b935050606061171188828901611602565b925050608061172288828901611617565b9150509295509295909350565b61173881611db3565b82525050565b61174781611dc5565b82525050565b600061175a602f83611d17565b91507f4f7074696f6e2069732063616e63656c65642f6578706972656420616e64206360008301527f616e6e6f7420626520626f7567687400000000000000000000000000000000006020830152604082019050919050565b60006117c0602683611d17565b91507f496e636f7272656374204c494e4b20616d6f756e742073656e7420746f20657860008301527f65726369736500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611826601a83611d17565b91507f596f7520646f206e6f74206f776e2074686973206f7074696f6e0000000000006000830152602082019050919050565b6000611866601183611d17565b91507f4f7074696f6e20697320657870697265640000000000000000000000000000006000830152602082019050919050565b60006118a6602283611d17565b91507f496e636f727265637420616d6f756e74206f66204d6174696320737570706c6960008301527f65640000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061190c602a83611d17565b91507f496e636f727265637420616d6f756e74206f66204d415449432073656e74206660008301527f6f72207072656d69756d000000000000000000000000000000000000000000006020830152604082019050919050565b6000611972601d83611d17565b91507f596f7520646964206e6f742077726974652074686973206f7074696f6e0000006000830152602082019050919050565b60006119b2601283611d17565b91507f526f756e64206e6f7420636f6d706c65746500000000000000000000000000006000830152602082019050919050565b60006119f2601e83611d17565b91507f54686973206f7074696f6e2063616e6e6f742062652063616e63656c656400006000830152602082019050919050565b6000611a32602883611d17565b91507f54686973206f7074696f6e206973206e6f7420656c696769626c6520666f722060008301527f77697468647261770000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611a98602183611d17565b91507f4f7074696f6e2068617320616c7265616479206265656e20657865726369736560008301527f64000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b611afa81611dfb565b82525050565b60006020820190508181036000830152611b198161174d565b9050919050565b60006020820190508181036000830152611b39816117b3565b9050919050565b60006020820190508181036000830152611b5981611819565b9050919050565b60006020820190508181036000830152611b7981611859565b9050919050565b60006020820190508181036000830152611b9981611899565b9050919050565b60006020820190508181036000830152611bb9816118ff565b9050919050565b60006020820190508181036000830152611bd981611965565b9050919050565b60006020820190508181036000830152611bf9816119a5565b9050919050565b60006020820190508181036000830152611c19816119e5565b9050919050565b60006020820190508181036000830152611c3981611a25565b9050919050565b60006020820190508181036000830152611c5981611a8b565b9050919050565b6000602082019050611c756000830184611af1565b92915050565b600061014082019050611c91600083018d611af1565b611c9e602083018c611af1565b611cab604083018b611af1565b611cb8606083018a611af1565b611cc5608083018961173e565b611cd260a083018861173e565b611cdf60c0830187611af1565b611cec60e0830186611af1565b611cfa61010083018561172f565b611d0861012083018461172f565b9b9a5050505050505050505050565b600082825260208201905092915050565b6000611d3382611dfb565b9150611d3e83611dfb565b925082611d4e57611d4d611e4a565b5b828204905092915050565b6000611d6482611dfb565b9150611d6f83611dfb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611da857611da7611e1b565b5b828202905092915050565b6000611dbe82611ddb565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b611e8281611dd1565b8114611e8d57600080fd5b50565b611e9981611dfb565b8114611ea457600080fd5b50565b611eb081611e05565b8114611ebb57600080fd5b5056fea2646970667358221220d8e4b975970945a22625b7f8b1629d1a3fb1b1097d9b5ebed29400a33df406d364736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c8063c83d324811610059578063c83d324814610125578063db99e79314610150578063de6bf63514610179578063f1356ffc14610195578063fba225b9146101c057610086565b80635891a76b1461008b57806363259516146100a7578063790eee2e146100ed578063b07f0a4114610109575b600080fd5b6100a560048036038101906100a09190611655565b6101dc565b005b3480156100b357600080fd5b506100ce60048036038101906100c9919061162c565b610411565b6040516100e49a99989796959493929190611c7b565b60405180910390f35b6101076004803603810190610102919061162c565b6104cf565b005b610123600480360381019061011e919061162c565b61085e565b005b34801561013157600080fd5b5061013a610d1c565b6040516101479190611c60565b60405180910390f35b34801561015c57600080fd5b506101776004803603810190610172919061162c565b610e1b565b005b610193600480360381019061018e919061162c565b610f34565b005b3480156101a157600080fd5b506101aa6112ad565b6040516101b79190611c60565b60405180910390f35b6101da60048036038101906101d5919061162c565b6112ba565b005b6101e46115c8565b803414610226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021d90611b80565b60405180910390fd5b60006402540be40060025461023b9190611d59565b82866102479190611d59565b6102519190611d28565b9050600460405180610140016040528087815260200186815260200185815260200184815260200160001515815260200160001515815260200160048054905081526020018381526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150506001900390600052602060002090600902016000909190919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548160ff02191690831515021790555060c0820151816005015560e082015181600601556101008201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101208201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050565b6004818154811061042157600080fd5b90600052602060002090600902016000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900460ff16908060050154908060060154908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508a565b60048181548110610509577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059f90611bc0565b60405180910390fd5b42600482815481106105e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600902016002015411158015610659575060048181548110610638577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160040160009054906101000a900460ff16155b80156106bb57506004818154811061069a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160040160019054906101000a900460ff16155b6106fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f190611c20565b60405180910390fd5b60048181548110610734577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600483815481106107b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060090201600301549081150290604051600060405180830381858888f193505050501580156107f6573d6000803e3d6000fd5b50600160048281548110610833577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160040160016101000a81548160ff02191690831515021790555050565b3373ffffffffffffffffffffffffffffffffffffffff16600482815481106108af577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610937576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092e90611b40565b60405180910390fd5b60048181548110610971577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160040160009054906101000a900460ff16156109d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c790611c40565b60405180910390fd5b4260048281548110610a0b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600902016002015411610a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5490611b60565b60405180910390fd5b610a656115c8565b600060048281548110610aa1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600902016003015460048381548110610aed577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160000154610b099190611d59565b905060006402540be400600254610b209190611d59565b82610b2b9190611d28565b9050803414610b6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6690611b20565b60405180910390fd5b60048381548110610ba9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610c20573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc60048581548110610c75577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060090201600301549081150290604051600060405180830381858888f19350505050158015610cb2573d6000803e3d6000fd5b50600160048481548110610cef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160040160006101000a81548160ff021916908315150217905550505050565b60008060008060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610d8b57600080fd5b505afa158015610d9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc391906116b8565b9450945094509450945060008211610e10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0790611be0565b60405180910390fd5b839550505050505090565b610e236115c8565b6402540be400600254610e369190611d59565b60048281548110610e70577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600902016003015460048381548110610ebc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160000154610ed89190611d59565b610ee29190611d28565b60048281548110610f1c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600902016006018190555050565b60048181548110610f6e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461100d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100490611bc0565b60405180910390fd5b60048181548110611047577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160040160019054906101000a900460ff1615801561110a5750600073ffffffffffffffffffffffffffffffffffffffff16600482815481106110c0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b611149576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114090611c00565b60405180910390fd5b60048181548110611183577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60048381548110611208577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060090201600301549081150290604051600060405180830381858888f19350505050158015611245573d6000803e3d6000fd5b50600160048281548110611282577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160040160016101000a81548160ff02191690831515021790555050565b6000600480549050905090565b6112c26115c8565b600481815481106112fc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160040160019054906101000a900460ff161580156113725750426004828154811061135e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160020154115b6113b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a890611b00565b60405180910390fd5b600481815481106113eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160010154341461143e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143590611ba0565b60405180910390fd5b60048181548110611478577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600483815481106114fd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060090201600101549081150290604051600060405180830381858888f1935050505015801561153a573d6000803e3d6000fd5b503360048281548110611576577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906009020160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6115d0610d1c565b600281905550565b6000815190506115e781611e79565b92915050565b6000813590506115fc81611e90565b92915050565b60008151905061161181611e90565b92915050565b60008151905061162681611ea7565b92915050565b60006020828403121561163e57600080fd5b600061164c848285016115ed565b91505092915050565b6000806000806080858703121561166b57600080fd5b6000611679878288016115ed565b945050602061168a878288016115ed565b935050604061169b878288016115ed565b92505060606116ac878288016115ed565b91505092959194509250565b600080600080600060a086880312156116d057600080fd5b60006116de88828901611617565b95505060206116ef888289016115d8565b945050604061170088828901611602565b935050606061171188828901611602565b925050608061172288828901611617565b9150509295509295909350565b61173881611db3565b82525050565b61174781611dc5565b82525050565b600061175a602f83611d17565b91507f4f7074696f6e2069732063616e63656c65642f6578706972656420616e64206360008301527f616e6e6f7420626520626f7567687400000000000000000000000000000000006020830152604082019050919050565b60006117c0602683611d17565b91507f496e636f7272656374204c494e4b20616d6f756e742073656e7420746f20657860008301527f65726369736500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611826601a83611d17565b91507f596f7520646f206e6f74206f776e2074686973206f7074696f6e0000000000006000830152602082019050919050565b6000611866601183611d17565b91507f4f7074696f6e20697320657870697265640000000000000000000000000000006000830152602082019050919050565b60006118a6602283611d17565b91507f496e636f727265637420616d6f756e74206f66204d6174696320737570706c6960008301527f65640000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061190c602a83611d17565b91507f496e636f727265637420616d6f756e74206f66204d415449432073656e74206660008301527f6f72207072656d69756d000000000000000000000000000000000000000000006020830152604082019050919050565b6000611972601d83611d17565b91507f596f7520646964206e6f742077726974652074686973206f7074696f6e0000006000830152602082019050919050565b60006119b2601283611d17565b91507f526f756e64206e6f7420636f6d706c65746500000000000000000000000000006000830152602082019050919050565b60006119f2601e83611d17565b91507f54686973206f7074696f6e2063616e6e6f742062652063616e63656c656400006000830152602082019050919050565b6000611a32602883611d17565b91507f54686973206f7074696f6e206973206e6f7420656c696769626c6520666f722060008301527f77697468647261770000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611a98602183611d17565b91507f4f7074696f6e2068617320616c7265616479206265656e20657865726369736560008301527f64000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b611afa81611dfb565b82525050565b60006020820190508181036000830152611b198161174d565b9050919050565b60006020820190508181036000830152611b39816117b3565b9050919050565b60006020820190508181036000830152611b5981611819565b9050919050565b60006020820190508181036000830152611b7981611859565b9050919050565b60006020820190508181036000830152611b9981611899565b9050919050565b60006020820190508181036000830152611bb9816118ff565b9050919050565b60006020820190508181036000830152611bd981611965565b9050919050565b60006020820190508181036000830152611bf9816119a5565b9050919050565b60006020820190508181036000830152611c19816119e5565b9050919050565b60006020820190508181036000830152611c3981611a25565b9050919050565b60006020820190508181036000830152611c5981611a8b565b9050919050565b6000602082019050611c756000830184611af1565b92915050565b600061014082019050611c91600083018d611af1565b611c9e602083018c611af1565b611cab604083018b611af1565b611cb8606083018a611af1565b611cc5608083018961173e565b611cd260a083018861173e565b611cdf60c0830187611af1565b611cec60e0830186611af1565b611cfa61010083018561172f565b611d0861012083018461172f565b9b9a5050505050505050505050565b600082825260208201905092915050565b6000611d3382611dfb565b9150611d3e83611dfb565b925082611d4e57611d4d611e4a565b5b828204905092915050565b6000611d6482611dfb565b9150611d6f83611dfb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611da857611da7611e1b565b5b828202905092915050565b6000611dbe82611ddb565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b611e8281611dd1565b8114611e8d57600080fd5b50565b611e9981611dfb565b8114611ea457600080fd5b50565b611eb081611e05565b8114611ebb57600080fd5b5056fea2646970667358221220d8e4b975970945a22625b7f8b1629d1a3fb1b1097d9b5ebed29400a33df406d364736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15017:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "69:79:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "79:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "94:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "88:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "88:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "79:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "136:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "110:25:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:32:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "110:32:3"
                }
              ]
            },
            "name": "abi_decode_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "47:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "55:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "63:5:3",
                "type": ""
              }
            ],
            "src": "7:141:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "206:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "216:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "238:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "225:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "216:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "281:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "254:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "254:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "254:33:3"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "184:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "192:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "200:5:3",
                "type": ""
              }
            ],
            "src": "154:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "362:80:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "372:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "387:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "381:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "381:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "372:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "430:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "403:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "403:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "403:33:3"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "340:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "348:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "356:5:3",
                "type": ""
              }
            ],
            "src": "299:143:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "510:79:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "520:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "535:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "529:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "529:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "520:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "577:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint80",
                      "nodeType": "YulIdentifier",
                      "src": "551:25:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:32:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "551:32:3"
                }
              ]
            },
            "name": "abi_decode_t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "488:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "496:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "504:5:3",
                "type": ""
              }
            ],
            "src": "448:141:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "661:196:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "707:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "716:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "719:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "709:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "709:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "709:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "682:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "691:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "678:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "678:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "703:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "674:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "674:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "671:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "733:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "748:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "762:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "752:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "777:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "812:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "823:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "808:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "808:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "832:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "787:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "787:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "777:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "631:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "642:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "654:6:3",
                "type": ""
              }
            ],
            "src": "595:262:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "980:581:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1027:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1036:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1039:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1029:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1029:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1029:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1001:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1010:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "997:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "997:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1022:3:3",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "993:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "993:33:3"
                  },
                  "nodeType": "YulIf",
                  "src": "990:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1053:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1068:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1082:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1072:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1097:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1132:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1143:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1128:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1128:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1152:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1107:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1107:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1097:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1180:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1195:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1209:2:3",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1199:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1225:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1260:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1271:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1256:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1256:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1280:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1235:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1235:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1225:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1308:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1323:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1337:2:3",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1327:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1353:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1388:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1399:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1384:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1384:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1408:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1363:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1363:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1353:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1436:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1451:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1465:2:3",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1455:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1481:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1516:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1527:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1512:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1512:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1536:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1491:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1491:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "1481:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "926:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "937:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "949:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "957:6:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "965:6:3",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "973:6:3",
                "type": ""
              }
            ],
            "src": "863:698:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1709:762:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1756:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1765:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1768:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1758:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1758:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1758:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1730:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1739:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1726:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1726:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1751:3:3",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1722:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1722:33:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1719:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1782:127:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1797:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1811:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1801:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1826:73:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1871:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1882:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1867:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1867:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1891:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1836:30:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1836:63:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1826:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1919:128:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1934:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1948:2:3",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1938:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1964:73:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2009:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2020:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2005:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2005:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2029:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1974:30:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1974:63:3"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1964:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2057:129:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2072:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2086:2:3",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2076:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2102:74:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2148:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2159:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2144:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2144:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2168:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2112:31:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2112:64:3"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2102:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2196:129:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2211:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2225:2:3",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2215:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2241:74:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2287:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2298:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2283:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2283:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2307:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2251:31:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2251:64:3"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "2241:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2335:129:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2350:17:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2364:3:3",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2354:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2381:73:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2426:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2437:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2422:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2422:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2446:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2391:30:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2391:63:3"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "2381:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1647:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1658:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1670:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1678:6:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1686:6:3",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1694:6:3",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1702:6:3",
                "type": ""
              }
            ],
            "src": "1567:904:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2558:61:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2575:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2606:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "2580:25:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2580:32:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2568:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2568:45:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2568:45:3"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2546:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2553:3:3",
                "type": ""
              }
            ],
            "src": "2477:142:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2684:50:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2701:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2721:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2706:14:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2706:21:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2694:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2694:34:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2694:34:3"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2672:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2679:3:3",
                "type": ""
              }
            ],
            "src": "2625:109:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2886:233:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2896:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2962:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2967:2:3",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2903:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2903:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2896:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2991:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2996:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2987:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2987:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3000:34:3",
                        "type": "",
                        "value": "Option is canceled/expired and c"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2980:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2980:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2980:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3056:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3061:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3052:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3052:12:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3066:17:3",
                        "type": "",
                        "value": "annot be bought"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3045:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3045:39:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3045:39:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3094:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3105:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3110:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3101:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3101:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3094:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2874:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2882:3:3",
                "type": ""
              }
            ],
            "src": "2740:379:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3271:224:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3281:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3347:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3352:2:3",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3288:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3288:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3281:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3376:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3381:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3372:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3372:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3385:34:3",
                        "type": "",
                        "value": "Incorrect LINK amount sent to ex"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3365:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3365:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3365:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3441:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3446:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3437:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3437:12:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3451:8:3",
                        "type": "",
                        "value": "ercise"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3430:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3430:30:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3430:30:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3470:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3481:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3486:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3477:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3477:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3470:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3259:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3267:3:3",
                "type": ""
              }
            ],
            "src": "3125:370:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3647:178:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3657:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3723:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3728:2:3",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3664:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3664:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3657:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3752:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3757:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3748:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3748:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3761:28:3",
                        "type": "",
                        "value": "You do not own this option"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3741:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3741:49:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3741:49:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3800:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3811:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3816:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3807:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3807:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3800:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3635:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3643:3:3",
                "type": ""
              }
            ],
            "src": "3501:324:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3977:169:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3987:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4053:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4058:2:3",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3994:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3994:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3987:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4082:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4087:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4078:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4078:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4091:19:3",
                        "type": "",
                        "value": "Option is expired"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4071:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4071:40:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4071:40:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4121:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4132:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4137:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4128:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4128:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4121:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3965:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3973:3:3",
                "type": ""
              }
            ],
            "src": "3831:315:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4298:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4308:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4374:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4379:2:3",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4315:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4315:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4308:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4403:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4408:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4399:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4399:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4412:34:3",
                        "type": "",
                        "value": "Incorrect amount of Matic suppli"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4392:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4392:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4392:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4468:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4473:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4464:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4464:12:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4478:4:3",
                        "type": "",
                        "value": "ed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4457:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4457:26:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4457:26:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4493:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4504:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4509:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4500:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4500:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4493:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4286:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4294:3:3",
                "type": ""
              }
            ],
            "src": "4152:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4670:228:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4680:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4746:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4751:2:3",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4687:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4687:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4680:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4775:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4780:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4771:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4771:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4784:34:3",
                        "type": "",
                        "value": "Incorrect amount of MATIC sent f"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4764:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4764:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4764:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4840:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4845:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4836:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4836:12:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4850:12:3",
                        "type": "",
                        "value": "or premium"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4829:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4829:34:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4829:34:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4873:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4884:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4889:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4880:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4880:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4873:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4658:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4666:3:3",
                "type": ""
              }
            ],
            "src": "4524:374:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5050:181:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5060:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5126:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5131:2:3",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5067:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5067:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5060:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5155:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5160:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5151:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5151:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5164:31:3",
                        "type": "",
                        "value": "You did not write this option"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5144:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5144:52:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5144:52:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5206:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5217:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5222:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5213:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5213:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5206:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5038:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5046:3:3",
                "type": ""
              }
            ],
            "src": "4904:327:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5383:170:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5393:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5459:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5464:2:3",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5400:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5400:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5393:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5488:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5493:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5484:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5484:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5497:20:3",
                        "type": "",
                        "value": "Round not complete"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5477:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5477:41:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5477:41:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5528:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5539:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5544:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5535:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5535:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5528:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5371:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5379:3:3",
                "type": ""
              }
            ],
            "src": "5237:316:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5705:182:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5715:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5781:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5786:2:3",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5722:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5722:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5715:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5810:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5815:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5806:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5806:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5819:32:3",
                        "type": "",
                        "value": "This option cannot be canceled"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5799:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5799:53:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5799:53:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5862:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5873:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5878:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5869:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5869:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5862:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5693:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5701:3:3",
                "type": ""
              }
            ],
            "src": "5559:328:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6039:226:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6049:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6115:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6120:2:3",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6056:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6056:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6049:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6144:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6149:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6140:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6140:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6153:34:3",
                        "type": "",
                        "value": "This option is not eligible for "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6133:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6133:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6133:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6209:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6214:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6205:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6205:12:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6219:10:3",
                        "type": "",
                        "value": "withdraw"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6198:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6198:32:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6198:32:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6240:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6251:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6256:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6247:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6247:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6240:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6027:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6035:3:3",
                "type": ""
              }
            ],
            "src": "5893:372:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6417:219:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6427:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6493:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6498:2:3",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6434:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6434:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6427:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6522:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6527:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6518:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6518:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6531:34:3",
                        "type": "",
                        "value": "Option has already been exercise"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6511:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6511:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6511:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6587:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6592:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6583:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6583:12:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6597:3:3",
                        "type": "",
                        "value": "d"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6576:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6576:25:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6576:25:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6611:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6622:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6627:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6618:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6618:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6611:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6405:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6413:3:3",
                "type": ""
              }
            ],
            "src": "6271:365:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6707:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6724:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6747:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6729:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6729:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6717:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6717:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6717:37:3"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6695:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6702:3:3",
                "type": ""
              }
            ],
            "src": "6642:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6937:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6947:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6959:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6970:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6955:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6955:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6947:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6994:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7005:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6990:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6990:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7013:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7019:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7009:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7009:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6983:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6983:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6983:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7039:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7173:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7047:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7047:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7039:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6917:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6932:4:3",
                "type": ""
              }
            ],
            "src": "6766:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7362:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7372:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7384:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7395:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7380:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7380:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7372:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7419:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7430:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7415:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7415:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7438:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7444:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7434:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7434:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7408:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7408:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7408:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7464:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7598:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7472:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7472:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7464:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7342:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7357:4:3",
                "type": ""
              }
            ],
            "src": "7191:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7787:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7797:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7809:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7820:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7805:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7805:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7797:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7844:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7855:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7840:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7840:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7863:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7869:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7859:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7859:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7833:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7833:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7833:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7889:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8023:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7897:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7897:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7889:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7767:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7782:4:3",
                "type": ""
              }
            ],
            "src": "7616:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8212:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8222:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8234:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8245:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8230:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8230:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8222:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8269:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8280:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8265:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8265:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8288:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8294:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8284:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8284:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8258:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8258:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8258:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8314:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8448:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8322:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8322:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8314:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8192:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8207:4:3",
                "type": ""
              }
            ],
            "src": "8041:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8637:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8647:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8659:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8670:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8655:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8655:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8647:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8694:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8705:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8690:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8690:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8713:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8719:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8709:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8709:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8683:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8683:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8683:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8739:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8873:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8747:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8747:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8739:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8617:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8632:4:3",
                "type": ""
              }
            ],
            "src": "8466:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9062:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9072:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9084:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9095:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9080:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9080:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9072:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9119:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9130:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9115:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9115:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9138:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9144:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9134:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9134:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9108:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9108:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9108:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9164:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9298:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9172:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9172:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9164:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9042:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9057:4:3",
                "type": ""
              }
            ],
            "src": "8891:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9487:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9497:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9509:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9520:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9505:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9505:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9497:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9544:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9555:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9540:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9540:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9563:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9569:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9559:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9559:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9533:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9533:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9533:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9589:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9723:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9597:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9597:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9589:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9467:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9482:4:3",
                "type": ""
              }
            ],
            "src": "9316:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9912:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9922:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9934:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9945:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9930:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9930:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9922:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9969:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9980:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9965:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9965:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9988:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9994:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9984:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9984:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9958:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9958:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9958:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10014:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10148:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10022:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10022:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10014:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9892:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9907:4:3",
                "type": ""
              }
            ],
            "src": "9741:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10337:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10347:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10359:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10370:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10355:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10355:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10347:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10394:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10405:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10390:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10390:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10413:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10419:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10409:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10409:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10383:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10383:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10383:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10439:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10573:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10447:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10447:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10439:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10317:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10332:4:3",
                "type": ""
              }
            ],
            "src": "10166:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10762:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10772:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10784:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10795:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10780:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10780:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10772:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10819:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10830:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10815:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10815:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10838:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10844:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10834:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10834:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10808:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10808:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10808:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10864:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10998:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10872:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10872:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10864:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10742:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10757:4:3",
                "type": ""
              }
            ],
            "src": "10591:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11187:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11197:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11209:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11220:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11205:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11205:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11197:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11244:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11255:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11240:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11240:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11263:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11269:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11259:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11259:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11233:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11233:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11233:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11289:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11423:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11297:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11297:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11289:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11167:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11182:4:3",
                "type": ""
              }
            ],
            "src": "11016:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11539:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11549:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11561:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11572:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11557:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11557:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11549:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11629:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11642:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11653:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11638:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11638:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11585:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11585:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11585:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11511:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11523:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11534:4:3",
                "type": ""
              }
            ],
            "src": "11441:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12039:889:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12049:27:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12061:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12072:3:3",
                        "type": "",
                        "value": "320"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12057:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12057:19:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12049:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12130:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12143:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12154:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12139:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12139:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12086:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12086:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12086:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12211:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12224:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12235:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12220:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12220:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12167:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12167:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12167:72:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12293:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12306:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12317:2:3",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12302:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12302:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12249:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12249:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12249:72:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "12375:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12388:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12399:2:3",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12384:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12384:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12331:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12331:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12331:72:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "12451:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12464:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12475:3:3",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12460:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12460:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12413:37:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12413:67:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12413:67:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "12528:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12541:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12552:3:3",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12537:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12537:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12490:37:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12490:67:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12490:67:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "12611:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12624:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12635:3:3",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12620:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12620:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12567:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12567:73:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12567:73:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "12694:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12707:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12718:3:3",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12703:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12703:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12650:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12650:73:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12650:73:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value8",
                        "nodeType": "YulIdentifier",
                        "src": "12793:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12806:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12817:3:3",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12802:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12802:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12733:59:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12733:89:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12733:89:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value9",
                        "nodeType": "YulIdentifier",
                        "src": "12892:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12905:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12916:3:3",
                            "type": "",
                            "value": "288"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12901:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12901:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12832:59:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12832:89:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12832:89:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_address_payable_t_address_payable__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_address_payable_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11939:9:3",
                "type": ""
              },
              {
                "name": "value9",
                "nodeType": "YulTypedName",
                "src": "11951:6:3",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "11959:6:3",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "11967:6:3",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "11975:6:3",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "11983:6:3",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "11991:6:3",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "11999:6:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12007:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12015:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12023:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12034:4:3",
                "type": ""
              }
            ],
            "src": "11669:1259:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13030:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13047:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13052:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13040:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13040:19:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13040:19:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13068:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13087:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13092:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13083:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13083:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "13068:11:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13002:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "13007:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "13018:11:3",
                "type": ""
              }
            ],
            "src": "12934:169:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13151:143:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13161:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13184:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13166:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13166:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "13161:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13195:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13218:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13200:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13200:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "13195:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13242:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "13244:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13244:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13244:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13239:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13232:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13232:9:3"
                  },
                  "nodeType": "YulIf",
                  "src": "13229:2:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13274:14:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13283:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13286:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "13279:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13279:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "13274:1:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13140:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13143:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "13149:1:3",
                "type": ""
              }
            ],
            "src": "13109:185:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13348:300:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13358:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13381:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13363:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13363:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "13358:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13392:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13415:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13397:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13397:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "13392:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13590:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13592:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13592:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13592:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13502:1:3"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "13495:6:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13495:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "13488:6:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13488:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13510:1:3"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13517:66:3",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13585:1:3"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "13513:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13513:74:3"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "13507:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13507:81:3"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13484:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13484:105:3"
                  },
                  "nodeType": "YulIf",
                  "src": "13481:2:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13622:20:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13637:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13640:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "13633:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13633:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "13622:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13331:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13334:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "13340:7:3",
                "type": ""
              }
            ],
            "src": "13300:348:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13707:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13717:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13746:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "13728:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13728:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13717:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13689:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13699:7:3",
                "type": ""
              }
            ],
            "src": "13654:104:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13806:48:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13816:32:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13841:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "13834:6:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13834:13:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13827:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13827:21:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13816:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13788:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13798:7:3",
                "type": ""
              }
            ],
            "src": "13764:90:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13904:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13914:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13925:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13914:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13886:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13896:7:3",
                "type": ""
              }
            ],
            "src": "13860:76:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13987:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13997:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14012:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14019:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14008:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14008:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13997:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13969:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13979:7:3",
                "type": ""
              }
            ],
            "src": "13942:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14119:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14129:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "14140:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14129:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14101:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14111:7:3",
                "type": ""
              }
            ],
            "src": "14074:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14201:61:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14211:45:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14226:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14233:22:3",
                        "type": "",
                        "value": "0xffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14222:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14222:34:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14211:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14183:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14193:7:3",
                "type": ""
              }
            ],
            "src": "14157:105:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14296:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14313:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14316:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14306:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14306:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14306:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14410:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14413:4:3",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14403:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14403:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14403:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14434:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14437:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "14427:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14427:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14427:15:3"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "14268:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14482:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14499:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14502:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14492:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14492:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14492:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14596:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14599:4:3",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14589:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14589:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14589:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14620:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14623:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "14613:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14613:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14613:15:3"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "14454:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14682:78:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14738:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14747:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14750:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14740:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14740:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14740:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14705:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14729:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "14712:16:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14712:23:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14702:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14702:34:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14695:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14695:42:3"
                  },
                  "nodeType": "YulIf",
                  "src": "14692:2:3"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14675:5:3",
                "type": ""
              }
            ],
            "src": "14640:120:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14809:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14866:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14875:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14878:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14868:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14868:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14868:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14832:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14857:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "14839:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14839:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14829:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14829:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14822:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14822:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "14819:2:3"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14802:5:3",
                "type": ""
              }
            ],
            "src": "14766:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14936:78:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14992:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15001:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15004:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14994:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14994:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14994:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14959:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14983:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint80",
                              "nodeType": "YulIdentifier",
                              "src": "14966:16:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14966:23:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14956:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14956:34:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14949:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14949:42:3"
                  },
                  "nodeType": "YulIf",
                  "src": "14946:2:3"
                }
              ]
            },
            "name": "validator_revert_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14929:5:3",
                "type": ""
              }
            ],
            "src": "14894:120:3"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n\n        mstore(add(pos, 0), \"Option is canceled/expired and c\")\n\n        mstore(add(pos, 32), \"annot be bought\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Incorrect LINK amount sent to ex\")\n\n        mstore(add(pos, 32), \"ercise\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n\n        mstore(add(pos, 0), \"You do not own this option\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n\n        mstore(add(pos, 0), \"Option is expired\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n\n        mstore(add(pos, 0), \"Incorrect amount of Matic suppli\")\n\n        mstore(add(pos, 32), \"ed\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n\n        mstore(add(pos, 0), \"Incorrect amount of MATIC sent f\")\n\n        mstore(add(pos, 32), \"or premium\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n\n        mstore(add(pos, 0), \"You did not write this option\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n\n        mstore(add(pos, 0), \"Round not complete\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n\n        mstore(add(pos, 0), \"This option cannot be canceled\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n\n        mstore(add(pos, 0), \"This option is not eligible for \")\n\n        mstore(add(pos, 32), \"withdraw\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n\n        mstore(add(pos, 0), \"Option has already been exercise\")\n\n        mstore(add(pos, 32), \"d\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_address_payable_t_address_payable__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_address_payable_t_address_payable__fromStack_reversed(headStart , value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value9,  add(headStart, 288))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "124:6633:0:-:0;;;1158:599;;;;;;;;;;1552:42;1518:9;;:77;;;;;;;;;;;;;;;;;;1660:42;1634:4;;:69;;;;;;;;;;;;;;;;;;1744:4;1713:12;;:37;;;;;;;;;;;;;;;;;;124:6633;;;;;;",
  "deployedSourceMap": "124:6633:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2701:479;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1058:25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5737:532;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4374:1263;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1804:552;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6469:181;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3279:408;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6656:99;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3773:512;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2701:479;2800:14;:12;:14::i;:::-;2845:6;2832:9;:19;2824:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2901:15;2953:6;2940:10;;:19;;;;:::i;:::-;2929:6;2920;:15;;;;:::i;:::-;2919:41;;;;:::i;:::-;2901:59;;3032:9;3047:125;;;;;;;;3054:6;3047:125;;;;3062:7;3047:125;;;;3071:6;3047:125;;;;3079:6;3047:125;;;;3087:5;3047:125;;;;;;3094:5;3047:125;;;;;;3101:9;:16;;;;3047:125;;;;3119:10;3047:125;;;;3139:10;3047:125;;;;;;3168:1;3047:125;;;;;3032:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2701:479;;;;;:::o;1058:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5737:532::-;5823:9;5833:2;5823:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;5809:34;;:10;:34;;;5801:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5977:15;5953:9;5963:2;5953:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;:39;;:67;;;;;5997:9;6007:2;5997:13;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;5996:24;5953:67;:94;;;;;6025:9;6035:2;6025:13;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;6024:23;5953:94;5945:147;;;;;;;;;;;;:::i;:::-;;;;;;;;;6102:9;6112:2;6102:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;:29;;:51;6132:9;6142:2;6132:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;6102:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6258:4;6233:9;6243:2;6233:13;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;;:29;;;;;;;;;;;;;;;;;;5737:532;:::o;4374:1263::-;4677:10;4654:33;;:9;4664:2;4654:13;;;;;;;;;;;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:33;;;4646:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;4737:9;4747:2;4737:13;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;4736:24;4728:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;4839:15;4816:9;4826:2;4816:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;:38;4808:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4935:14;:12;:14::i;:::-;4986:16;5026:9;5036:2;5026:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;5005:9;5015:2;5005:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;:41;;;;:::i;:::-;4986:60;;5110:15;5156:6;5143:10;;:19;;;;:::i;:::-;5128:11;:35;;;;:::i;:::-;5110:53;;5342:10;5329:9;:23;5321:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;5444:9;5454:2;5444:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;:29;;:41;5474:10;5444:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5548:10;5540:28;;:50;5569:9;5579:2;5569:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;5540:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5626:4;5600:9;5610:2;5600:13;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;:30;;;;;;;;;;;;;;;;;;4374:1263;;;:::o;1804:552::-;1850:4;1880:14;1909:9;1932:14;1960;1988:22;2023:9;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1866:184;;;;;;;;;;2140:1;2128:9;:13;2120:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;2343:5;2331:18;;;;;;;1804:552;:::o;6469:181::-;6523:14;:12;:14::i;:::-;6636:6;6623:10;;:19;;;;:::i;:::-;6598:9;6608:2;6598:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;6575:9;6585:2;6575:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;:43;;;;:::i;:::-;6574:69;;;;:::i;:::-;6547:9;6557:2;6547:13;;;;;;;;;;;;;;;;;;;;;;;;;;:24;;:96;;;;6469:181;:::o;3279:408::-;3357:9;3367:2;3357:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;3343:34;;:10;:34;;;3335:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;3486:9;3496:2;3486:13;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;3485:23;:60;;;;;3543:1;3512:33;;:9;3522:2;3512:13;;;;;;;;;;;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:33;;;3485:60;3477:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;3590:9;3600:2;3590:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;:29;;:51;3620:9;3630:2;3620:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;3590:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3676:4;3651:9;3661:2;3651:13;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;;:29;;;;;;;;;;;;;;;;;;3279:408;:::o;6656:99::-;6706:7;6732:9;:16;;;;6725:23;;6656:99;:::o;3773:512::-;3826:14;:12;:14::i;:::-;3859:9;3869:2;3859:13;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;3858:23;:65;;;;;3908:15;3885:9;3895:2;3885:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;:38;3858:65;3850:125;;;;;;;;;;;;:::i;:::-;;;;;;;;;4052:9;4062:2;4052:13;;;;;;;;;;;;;;;;;;;;;;;;;;:21;;;4039:9;:34;4031:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;4175:9;4185:2;4175:13;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;:29;;:52;4205:9;4215:2;4205:13;;;;;;;;;;;;;;;;;;;;;;;;;;:21;;;4175:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4267:10;4237:9;4247:2;4237:13;;;;;;;;;;;;;;;;;;;;;;;;;;:19;;;:41;;;;;;;;;;;;;;;;;;3773:512;:::o;2397:78::-;2453:15;:13;:15::i;:::-;2440:10;:28;;;;2397:78::o;7:141:3:-;;94:6;88:13;79:22;;110:32;136:5;110:32;:::i;:::-;69:79;;;;:::o;154:139::-;;238:6;225:20;216:29;;254:33;281:5;254:33;:::i;:::-;206:87;;;;:::o;299:143::-;;387:6;381:13;372:22;;403:33;430:5;403:33;:::i;:::-;362:80;;;;:::o;448:141::-;;535:6;529:13;520:22;;551:32;577:5;551:32;:::i;:::-;510:79;;;;:::o;595:262::-;;703:2;691:9;682:7;678:23;674:32;671:2;;;719:1;716;709:12;671:2;762:1;787:53;832:7;823:6;812:9;808:22;787:53;:::i;:::-;777:63;;733:117;661:196;;;;:::o;863:698::-;;;;;1022:3;1010:9;1001:7;997:23;993:33;990:2;;;1039:1;1036;1029:12;990:2;1082:1;1107:53;1152:7;1143:6;1132:9;1128:22;1107:53;:::i;:::-;1097:63;;1053:117;1209:2;1235:53;1280:7;1271:6;1260:9;1256:22;1235:53;:::i;:::-;1225:63;;1180:118;1337:2;1363:53;1408:7;1399:6;1388:9;1384:22;1363:53;:::i;:::-;1353:63;;1308:118;1465:2;1491:53;1536:7;1527:6;1516:9;1512:22;1491:53;:::i;:::-;1481:63;;1436:118;980:581;;;;;;;:::o;1567:904::-;;;;;;1751:3;1739:9;1730:7;1726:23;1722:33;1719:2;;;1768:1;1765;1758:12;1719:2;1811:1;1836:63;1891:7;1882:6;1871:9;1867:22;1836:63;:::i;:::-;1826:73;;1782:127;1948:2;1974:63;2029:7;2020:6;2009:9;2005:22;1974:63;:::i;:::-;1964:73;;1919:128;2086:2;2112:64;2168:7;2159:6;2148:9;2144:22;2112:64;:::i;:::-;2102:74;;2057:129;2225:2;2251:64;2307:7;2298:6;2287:9;2283:22;2251:64;:::i;:::-;2241:74;;2196:129;2364:3;2391:63;2446:7;2437:6;2426:9;2422:22;2391:63;:::i;:::-;2381:73;;2335:129;1709:762;;;;;;;;:::o;2477:142::-;2580:32;2606:5;2580:32;:::i;:::-;2575:3;2568:45;2558:61;;:::o;2625:109::-;2706:21;2721:5;2706:21;:::i;:::-;2701:3;2694:34;2684:50;;:::o;2740:379::-;;2903:67;2967:2;2962:3;2903:67;:::i;:::-;2896:74;;3000:34;2996:1;2991:3;2987:11;2980:55;3066:17;3061:2;3056:3;3052:12;3045:39;3110:2;3105:3;3101:12;3094:19;;2886:233;;;:::o;3125:370::-;;3288:67;3352:2;3347:3;3288:67;:::i;:::-;3281:74;;3385:34;3381:1;3376:3;3372:11;3365:55;3451:8;3446:2;3441:3;3437:12;3430:30;3486:2;3481:3;3477:12;3470:19;;3271:224;;;:::o;3501:324::-;;3664:67;3728:2;3723:3;3664:67;:::i;:::-;3657:74;;3761:28;3757:1;3752:3;3748:11;3741:49;3816:2;3811:3;3807:12;3800:19;;3647:178;;;:::o;3831:315::-;;3994:67;4058:2;4053:3;3994:67;:::i;:::-;3987:74;;4091:19;4087:1;4082:3;4078:11;4071:40;4137:2;4132:3;4128:12;4121:19;;3977:169;;;:::o;4152:366::-;;4315:67;4379:2;4374:3;4315:67;:::i;:::-;4308:74;;4412:34;4408:1;4403:3;4399:11;4392:55;4478:4;4473:2;4468:3;4464:12;4457:26;4509:2;4504:3;4500:12;4493:19;;4298:220;;;:::o;4524:374::-;;4687:67;4751:2;4746:3;4687:67;:::i;:::-;4680:74;;4784:34;4780:1;4775:3;4771:11;4764:55;4850:12;4845:2;4840:3;4836:12;4829:34;4889:2;4884:3;4880:12;4873:19;;4670:228;;;:::o;4904:327::-;;5067:67;5131:2;5126:3;5067:67;:::i;:::-;5060:74;;5164:31;5160:1;5155:3;5151:11;5144:52;5222:2;5217:3;5213:12;5206:19;;5050:181;;;:::o;5237:316::-;;5400:67;5464:2;5459:3;5400:67;:::i;:::-;5393:74;;5497:20;5493:1;5488:3;5484:11;5477:41;5544:2;5539:3;5535:12;5528:19;;5383:170;;;:::o;5559:328::-;;5722:67;5786:2;5781:3;5722:67;:::i;:::-;5715:74;;5819:32;5815:1;5810:3;5806:11;5799:53;5878:2;5873:3;5869:12;5862:19;;5705:182;;;:::o;5893:372::-;;6056:67;6120:2;6115:3;6056:67;:::i;:::-;6049:74;;6153:34;6149:1;6144:3;6140:11;6133:55;6219:10;6214:2;6209:3;6205:12;6198:32;6256:2;6251:3;6247:12;6240:19;;6039:226;;;:::o;6271:365::-;;6434:67;6498:2;6493:3;6434:67;:::i;:::-;6427:74;;6531:34;6527:1;6522:3;6518:11;6511:55;6597:3;6592:2;6587:3;6583:12;6576:25;6627:2;6622:3;6618:12;6611:19;;6417:219;;;:::o;6642:118::-;6729:24;6747:5;6729:24;:::i;:::-;6724:3;6717:37;6707:53;;:::o;6766:419::-;;6970:2;6959:9;6955:18;6947:26;;7019:9;7013:4;7009:20;7005:1;6994:9;6990:17;6983:47;7047:131;7173:4;7047:131;:::i;:::-;7039:139;;6937:248;;;:::o;7191:419::-;;7395:2;7384:9;7380:18;7372:26;;7444:9;7438:4;7434:20;7430:1;7419:9;7415:17;7408:47;7472:131;7598:4;7472:131;:::i;:::-;7464:139;;7362:248;;;:::o;7616:419::-;;7820:2;7809:9;7805:18;7797:26;;7869:9;7863:4;7859:20;7855:1;7844:9;7840:17;7833:47;7897:131;8023:4;7897:131;:::i;:::-;7889:139;;7787:248;;;:::o;8041:419::-;;8245:2;8234:9;8230:18;8222:26;;8294:9;8288:4;8284:20;8280:1;8269:9;8265:17;8258:47;8322:131;8448:4;8322:131;:::i;:::-;8314:139;;8212:248;;;:::o;8466:419::-;;8670:2;8659:9;8655:18;8647:26;;8719:9;8713:4;8709:20;8705:1;8694:9;8690:17;8683:47;8747:131;8873:4;8747:131;:::i;:::-;8739:139;;8637:248;;;:::o;8891:419::-;;9095:2;9084:9;9080:18;9072:26;;9144:9;9138:4;9134:20;9130:1;9119:9;9115:17;9108:47;9172:131;9298:4;9172:131;:::i;:::-;9164:139;;9062:248;;;:::o;9316:419::-;;9520:2;9509:9;9505:18;9497:26;;9569:9;9563:4;9559:20;9555:1;9544:9;9540:17;9533:47;9597:131;9723:4;9597:131;:::i;:::-;9589:139;;9487:248;;;:::o;9741:419::-;;9945:2;9934:9;9930:18;9922:26;;9994:9;9988:4;9984:20;9980:1;9969:9;9965:17;9958:47;10022:131;10148:4;10022:131;:::i;:::-;10014:139;;9912:248;;;:::o;10166:419::-;;10370:2;10359:9;10355:18;10347:26;;10419:9;10413:4;10409:20;10405:1;10394:9;10390:17;10383:47;10447:131;10573:4;10447:131;:::i;:::-;10439:139;;10337:248;;;:::o;10591:419::-;;10795:2;10784:9;10780:18;10772:26;;10844:9;10838:4;10834:20;10830:1;10819:9;10815:17;10808:47;10872:131;10998:4;10872:131;:::i;:::-;10864:139;;10762:248;;;:::o;11016:419::-;;11220:2;11209:9;11205:18;11197:26;;11269:9;11263:4;11259:20;11255:1;11244:9;11240:17;11233:47;11297:131;11423:4;11297:131;:::i;:::-;11289:139;;11187:248;;;:::o;11441:222::-;;11572:2;11561:9;11557:18;11549:26;;11585:71;11653:1;11642:9;11638:17;11629:6;11585:71;:::i;:::-;11539:124;;;;:::o;11669:1259::-;;12072:3;12061:9;12057:19;12049:27;;12086:71;12154:1;12143:9;12139:17;12130:6;12086:71;:::i;:::-;12167:72;12235:2;12224:9;12220:18;12211:6;12167:72;:::i;:::-;12249;12317:2;12306:9;12302:18;12293:6;12249:72;:::i;:::-;12331;12399:2;12388:9;12384:18;12375:6;12331:72;:::i;:::-;12413:67;12475:3;12464:9;12460:19;12451:6;12413:67;:::i;:::-;12490;12552:3;12541:9;12537:19;12528:6;12490:67;:::i;:::-;12567:73;12635:3;12624:9;12620:19;12611:6;12567:73;:::i;:::-;12650;12718:3;12707:9;12703:19;12694:6;12650:73;:::i;:::-;12733:89;12817:3;12806:9;12802:19;12793:6;12733:89;:::i;:::-;12832;12916:3;12905:9;12901:19;12892:6;12832:89;:::i;:::-;12039:889;;;;;;;;;;;;;:::o;12934:169::-;;13052:6;13047:3;13040:19;13092:4;13087:3;13083:14;13068:29;;13030:73;;;;:::o;13109:185::-;;13166:20;13184:1;13166:20;:::i;:::-;13161:25;;13200:20;13218:1;13200:20;:::i;:::-;13195:25;;13239:1;13229:2;;13244:18;;:::i;:::-;13229:2;13286:1;13283;13279:9;13274:14;;13151:143;;;;:::o;13300:348::-;;13363:20;13381:1;13363:20;:::i;:::-;13358:25;;13397:20;13415:1;13397:20;:::i;:::-;13392:25;;13585:1;13517:66;13513:74;13510:1;13507:81;13502:1;13495:9;13488:17;13484:105;13481:2;;;13592:18;;:::i;:::-;13481:2;13640:1;13637;13633:9;13622:20;;13348:300;;;;:::o;13654:104::-;;13728:24;13746:5;13728:24;:::i;:::-;13717:35;;13707:51;;;:::o;13764:90::-;;13841:5;13834:13;13827:21;13816:32;;13806:48;;;:::o;13860:76::-;;13925:5;13914:16;;13904:32;;;:::o;13942:126::-;;14019:42;14012:5;14008:54;13997:65;;13987:81;;;:::o;14074:77::-;;14140:5;14129:16;;14119:32;;;:::o;14157:105::-;;14233:22;14226:5;14222:34;14211:45;;14201:61;;;:::o;14268:180::-;14316:77;14313:1;14306:88;14413:4;14410:1;14403:15;14437:4;14434:1;14427:15;14454:180;14502:77;14499:1;14492:88;14599:4;14596:1;14589:15;14623:4;14620:1;14613:15;14640:120;14712:23;14729:5;14712:23;:::i;:::-;14705:5;14702:34;14692:2;;14750:1;14747;14740:12;14692:2;14682:78;:::o;14766:122::-;14839:24;14857:5;14839:24;:::i;:::-;14832:5;14829:35;14819:2;;14878:1;14875;14868:12;14819:2;14809:79;:::o;14894:120::-;14966:23;14983:5;14966:23;:::i;:::-;14959:5;14956:34;14946:2;;15004:1;15001;14994:12;14946:2;14936:78;:::o",
  "source": "pragma solidity 0.8.0;\n\nimport \"./dependencies/LinkTokenInterface.sol\";\nimport \"./dependencies/AggregatorV3Interface.sol\";\n\ncontract OptionTrades {\n    //Pricefeed interfaces\n    AggregatorV3Interface internal maticFeed;\n    //Interface for LINK token functions\n    LinkTokenInterface internal LINK;\n    uint maticPrice;\n    address payable contractAddr;\n    \n    //Options stored in arrays of structs\n    struct option {\n        uint strike; //Price in USD (18 decimal places) option allows buyer to purchase tokens at\n        uint premium; //Fee in contract token that option writer charges\n        uint expiry; //Unix timestamp of expiration time\n        uint amount; //Amount of tokens the option contract is for\n        bool exercised; //Has option been exercised\n        bool canceled; //Has option been canceled\n        uint id; //Unique ID of option, also array index\n        uint latestCost; //Helper to show last updated cost to exercise\n        address payable writer; //Issuer of option\n        address payable buyer; //Buyer of option\n    }\n    option[] public maticOpts;\n\n    //Kovan feeds: https://docs.chain.link/docs/reference-contracts\n    constructor() public {\n        // -- Matic --\n        /*\n        //MATIC/USD feed\n        maticFeed = AggregatorV3Interface(0xAB594600376Ec9fD91F8e885dADF0CE036862dE0);\n        //LINK token address\n        LINK = LinkTokenInterface(0xb0897686c545045aFc77CF20eC7A532E3120E0F1);\n        */\n\n        // -- Mumbai --\n        /* */\n        //MATIC/USD feed\n        maticFeed = AggregatorV3Interface(0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada);\n        //LINK token address\n        LINK = LinkTokenInterface(0x326C977E6efc84E512bB9C30f76E30c160eD06FB);\n        contractAddr = payable(address(this));\n    }\n    \n    //Returns the latest MATIC price\n    function getMaticPrice() public view returns (uint) {\n        (\n            uint80 roundID, \n            int price,\n            uint startedAt,\n            uint timeStamp,\n            uint80 answeredInRound\n        ) = maticFeed.latestRoundData();\n        // If the round is not complete yet, timestamp is 0\n        require(timeStamp > 0, \"Round not complete\");\n        //Price should never be negative thus cast int to unit is ok\n        //Price is 8 decimal places and will require 1e10 correction later to 18 places\n        return uint(price);\n    }\n    \n    //Updates prices to latest\n    function updatePrices() internal {\n        maticPrice = getMaticPrice();\n    }\n    \n    //Allows user to write a covered call option\n    //Takes which token, a strike price(USD per token w/18 decimal places), premium(same unit as token), expiration time(unix) and how many tokens the contract is for\n    function writeOption(uint strike, uint premium, uint expiry, uint tknAmt) public payable {\n        updatePrices();\n        require(msg.value == tknAmt, \"Incorrect amount of Matic supplied\"); \n        uint latestCost = (strike * tknAmt) / (maticPrice * 10**10); //current cost to exercise in Matic, decimal places corrected\n        maticOpts.push(option(strike, premium, expiry, tknAmt, false, false, maticOpts.length, latestCost, payable(msg.sender), payable(address(0))));\n    }\n    \n    //Allows option writer to cancel and get their funds back from an unpurchased option\n    function cancelOption(uint ID) public payable {\n        require(msg.sender == maticOpts[ID].writer, \"You did not write this option\");\n        //Must not have already been canceled or bought\n        require(!maticOpts[ID].canceled && maticOpts[ID].buyer == address(0), \"This option cannot be canceled\");\n        maticOpts[ID].writer.transfer(maticOpts[ID].amount);\n        maticOpts[ID].canceled = true;\n    }\n    \n    //Purchase a call option, needs desired token, ID of option and payment\n    function buyOption(uint ID) public payable {\n        updatePrices();\n        require(!maticOpts[ID].canceled && maticOpts[ID].expiry > block.timestamp, \"Option is canceled/expired and cannot be bought\");\n        //Transfer premium payment from buyer\n        require(msg.value == maticOpts[ID].premium, \"Incorrect amount of MATIC sent for premium\");\n        //Transfer premium payment to writer\n        maticOpts[ID].writer.transfer(maticOpts[ID].premium);\n        maticOpts[ID].buyer = payable(msg.sender);\n    }\n    \n    //Exercise your call option, needs desired token, ID of option and payment\n    function exercise(uint ID) public payable {\n        //If not expired and not already exercised, allow option owner to exercise\n        //To exercise, the strike value*amount equivalent paid to writer (from buyer) and amount of tokens in the contract paid to buyer\n        require(maticOpts[ID].buyer == msg.sender, \"You do not own this option\");\n        require(!maticOpts[ID].exercised, \"Option has already been exercised\");\n        require(maticOpts[ID].expiry > block.timestamp, \"Option is expired\");\n        //Conditions are met, proceed to payouts\n        updatePrices();\n        //Cost to exercise\n        uint exerciseVal = maticOpts[ID].strike*maticOpts[ID].amount;\n        //Equivalent MATIC value using Chainlink feed\n        uint equivMatic = exerciseVal / (maticPrice * 10**10); //move decimal 10 places right to account for 8 places of pricefeed\n        //Buyer exercises option by paying strike*amount equivalent MATIC value\n        require(msg.value == equivMatic, \"Incorrect LINK amount sent to exercise\");\n        //Pay writer the exercise cost\n        maticOpts[ID].writer.transfer(equivMatic);\n        //Pay buyer contract amount of MATIC\n        payable(msg.sender).transfer(maticOpts[ID].amount);\n        maticOpts[ID].exercised = true;\n    }\n    \n    //Allows writer to retrieve funds from an expired, non-exercised, non-canceled option\n    function retrieveExpiredFunds(uint ID) public payable {\n        require(msg.sender == maticOpts[ID].writer, \"You did not write this option\");\n        //Must be expired, not exercised and not canceled\n        require(maticOpts[ID].expiry <= block.timestamp && !maticOpts[ID].exercised && !maticOpts[ID].canceled, \"This option is not eligible for withdraw\");\n        maticOpts[ID].writer.transfer(maticOpts[ID].amount);\n        //Repurposing canceled flag to prevent more than one withdraw\n        maticOpts[ID].canceled = true;\n    }\n    \n    //This is a helper function to help the user see what the cost to exercise an option is currently before they do so\n    //Updates lastestCost member of option which is publicly viewable\n    function updateExerciseCost(uint ID) public {\n        updatePrices();\n        maticOpts[ID].latestCost = (maticOpts[ID].strike * maticOpts[ID].amount) / (maticPrice * 10**10);\n    }\n\n    function getMaticOptsLength() public view returns(uint256) {\n        return maticOpts.length;\n    }\n}",
  "sourcePath": "/home/turupawn/Projects/Blockchain/MyOptionsTrade/contracts/OptionTrades.sol",
  "ast": {
    "absolutePath": "/home/turupawn/Projects/Blockchain/MyOptionsTrade/contracts/OptionTrades.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        527
      ],
      "LinkTokenInterface": [
        622
      ],
      "OptionTrades": [
        481
      ]
    },
    "id": 482,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "absolutePath": "/home/turupawn/Projects/Blockchain/MyOptionsTrade/contracts/dependencies/LinkTokenInterface.sol",
        "file": "./dependencies/LinkTokenInterface.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 482,
        "sourceUnit": 623,
        "src": "24:47:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/turupawn/Projects/Blockchain/MyOptionsTrade/contracts/dependencies/AggregatorV3Interface.sol",
        "file": "./dependencies/AggregatorV3Interface.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 482,
        "sourceUnit": 528,
        "src": "72:50:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 481,
        "linearizedBaseContracts": [
          481
        ],
        "name": "OptionTrades",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "maticFeed",
            "nodeType": "VariableDeclaration",
            "scope": 481,
            "src": "179:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$527",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 5,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 527,
                "src": "179:21:0"
              },
              "referencedDeclaration": 527,
              "src": "179:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$527",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 9,
            "mutability": "mutable",
            "name": "LINK",
            "nodeType": "VariableDeclaration",
            "scope": 481,
            "src": "266:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkTokenInterface_$622",
              "typeString": "contract LinkTokenInterface"
            },
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "LinkTokenInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 622,
                "src": "266:18:0"
              },
              "referencedDeclaration": 622,
              "src": "266:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkTokenInterface_$622",
                "typeString": "contract LinkTokenInterface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "maticPrice",
            "nodeType": "VariableDeclaration",
            "scope": 481,
            "src": "304:15:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "304:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "contractAddr",
            "nodeType": "VariableDeclaration",
            "scope": 481,
            "src": "325:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 12,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "325:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "OptionTrades.option",
            "id": 34,
            "members": [
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "strike",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "430:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "430:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "premium",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "528:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 16,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "528:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "expiry",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "601:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "601:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "658:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "658:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "exercised",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "725:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 22,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "725:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "canceled",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "777:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 24,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "777:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "827:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 26,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "827:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "latestCost",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "884:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "884:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "writer",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "956:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 30,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "956:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "buyer",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "1007:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 32,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1007:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "option",
            "nodeType": "StructDefinition",
            "scope": 481,
            "src": "406:647:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "63259516",
            "id": 38,
            "mutability": "mutable",
            "name": "maticOpts",
            "nodeType": "VariableDeclaration",
            "scope": 481,
            "src": "1058:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
              "typeString": "struct OptionTrades.option[]"
            },
            "typeName": {
              "baseType": {
                "id": 36,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 35,
                  "name": "option",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34,
                  "src": "1058:6:0"
                },
                "referencedDeclaration": 34,
                "src": "1058:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_option_$34_storage_ptr",
                  "typeString": "struct OptionTrades.option"
                }
              },
              "id": 37,
              "nodeType": "ArrayTypeName",
              "src": "1058:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage_ptr",
                "typeString": "struct OptionTrades.option[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 63,
              "nodeType": "Block",
              "src": "1179:578:0",
              "statements": [
                {
                  "expression": {
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41,
                      "name": "maticFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1518:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$527",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307864304435653344423434444530354539463239344242306133624545614630333044453234416461",
                          "id": 43,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1552:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 42,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 527,
                        "src": "1530:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$527_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1530:65:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$527",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "1518:77:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$527",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "1518:77:0"
                },
                {
                  "expression": {
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47,
                      "name": "LINK",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1634:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$622",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307833323643393737453665666338344535313262423943333066373645333063313630654430364642",
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1660:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x326C977E6efc84E512bB9C30f76E30c160eD06FB"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 48,
                        "name": "LinkTokenInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 622,
                        "src": "1641:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$622_$",
                          "typeString": "type(contract LinkTokenInterface)"
                        }
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1641:62:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$622",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "src": "1634:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkTokenInterface_$622",
                      "typeString": "contract LinkTokenInterface"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "1634:69:0"
                },
                {
                  "expression": {
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "contractAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1713:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 58,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "1744:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptionTrades_$481",
                                "typeString": "contract OptionTrades"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptionTrades_$481",
                                "typeString": "contract OptionTrades"
                              }
                            ],
                            "id": 57,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1736:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 56,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1736:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1736:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1728:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 54,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1728:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1728:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1713:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "1713:37:0"
                }
              ]
            },
            "id": 64,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1169:2:0"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1179:0:0"
            },
            "scope": 481,
            "src": "1158:599:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "1856:500:0",
              "statements": [
                {
                  "assignments": [
                    70,
                    72,
                    74,
                    76,
                    78
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70,
                      "mutability": "mutable",
                      "name": "roundID",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "1880:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 69,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "1880:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 72,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "1909:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 71,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "1909:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 74,
                      "mutability": "mutable",
                      "name": "startedAt",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "1932:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1932:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 76,
                      "mutability": "mutable",
                      "name": "timeStamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "1960:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 75,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1960:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 78,
                      "mutability": "mutable",
                      "name": "answeredInRound",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "1988:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 77,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "1988:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 82,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 79,
                        "name": "maticFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "2023:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$527",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 526,
                      "src": "2023:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2023:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1866:184:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 84,
                          "name": "timeStamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "2128:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2140:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2128:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f756e64206e6f7420636f6d706c657465",
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2143:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697",
                          "typeString": "literal_string \"Round not complete\""
                        },
                        "value": "Round not complete"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697",
                          "typeString": "literal_string \"Round not complete\""
                        }
                      ],
                      "id": 83,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2120:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2120:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "2120:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2343:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2338:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 90,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2338:4:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2338:11:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 68,
                  "id": 94,
                  "nodeType": "Return",
                  "src": "2331:18:0"
                }
              ]
            },
            "functionSelector": "c83d3248",
            "id": 96,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMaticPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1826:2:0"
            },
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "1850:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1849:6:0"
            },
            "scope": 481,
            "src": "1804:552:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "2430:45:0",
              "statements": [
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99,
                      "name": "maticPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2440:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 100,
                        "name": "getMaticPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "2453:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2453:15:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2440:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "2440:28:0"
                }
              ]
            },
            "id": 105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePrices",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2418:2:0"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2430:0:0"
            },
            "scope": 481,
            "src": "2397:78:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "2790:390:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 116,
                      "name": "updatePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "2800:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2800:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "2800:14:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2832:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2832:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 122,
                          "name": "tknAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "2845:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2832:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420616d6f756e74206f66204d6174696320737570706c696564",
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2853:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966",
                          "typeString": "literal_string \"Incorrect amount of Matic supplied\""
                        },
                        "value": "Incorrect amount of Matic supplied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966",
                          "typeString": "literal_string \"Incorrect amount of Matic supplied\""
                        }
                      ],
                      "id": 119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2824:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2824:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "2824:66:0"
                },
                {
                  "assignments": [
                    128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 128,
                      "mutability": "mutable",
                      "name": "latestCost",
                      "nodeType": "VariableDeclaration",
                      "scope": 169,
                      "src": "2901:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 127,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2901:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 140,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 129,
                            "name": "strike",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "2920:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 130,
                            "name": "tknAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "2929:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2920:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 132,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2919:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 133,
                            "name": "maticPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "2940:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            },
                            "id": 136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2953:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3130",
                              "id": 135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2957:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "src": "2953:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            }
                          },
                          "src": "2940:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 138,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2939:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2919:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2901:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 145,
                            "name": "strike",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "3054:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 146,
                            "name": "premium",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "3062:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 147,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "3071:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 148,
                            "name": "tknAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "3079:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3087:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3094:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "expression": {
                              "id": 151,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "3101:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3101:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 153,
                            "name": "latestCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "3119:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 156,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3139:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 157,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3139:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3131:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 154,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3131:8:0",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3131:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 163,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3168:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 162,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3160:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 161,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3160:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 164,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3160:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3152:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 159,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3152:8:0",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3152:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 144,
                          "name": "option",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "3047:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_option_$34_storage_ptr_$",
                            "typeString": "type(struct OptionTrades.option storage pointer)"
                          }
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3047:125:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$34_memory_ptr",
                          "typeString": "struct OptionTrades.option memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_option_$34_memory_ptr",
                          "typeString": "struct OptionTrades.option memory"
                        }
                      ],
                      "expression": {
                        "id": 141,
                        "name": "maticOpts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "3032:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                          "typeString": "struct OptionTrades.option storage ref[] storage ref"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3032:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_option_$34_storage_$returns$__$",
                        "typeString": "function (struct OptionTrades.option storage ref)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3032:141:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "3032:141:0"
                }
              ]
            },
            "functionSelector": "5891a76b",
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "writeOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "mutability": "mutable",
                  "name": "strike",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2722:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2722:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "premium",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2735:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2735:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2749:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2749:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "tknAmt",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2762:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2762:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2721:53:0"
            },
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2790:0:0"
            },
            "scope": 481,
            "src": "2701:479:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "3325:362:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 176,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3343:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3343:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 178,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "3357:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 180,
                            "indexExpression": {
                              "id": 179,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "3367:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3357:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$34_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "writer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "3357:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3343:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646964206e6f742077726974652074686973206f7074696f6e",
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3379:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd",
                          "typeString": "literal_string \"You did not write this option\""
                        },
                        "value": "You did not write this option"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd",
                          "typeString": "literal_string \"You did not write this option\""
                        }
                      ],
                      "id": 175,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3335:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3335:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "3335:76:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3485:23:0",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 187,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "3486:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 189,
                              "indexExpression": {
                                "id": 188,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 172,
                                "src": "3496:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3486:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$34_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 190,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "canceled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25,
                            "src": "3486:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 192,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "3512:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 194,
                              "indexExpression": {
                                "id": 193,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 172,
                                "src": "3522:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3512:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$34_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 195,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33,
                            "src": "3512:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3543:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3535:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 196,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3535:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3535:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3512:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3485:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206f7074696f6e2063616e6e6f742062652063616e63656c6564",
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3547:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a",
                          "typeString": "literal_string \"This option cannot be canceled\""
                        },
                        "value": "This option cannot be canceled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a",
                          "typeString": "literal_string \"This option cannot be canceled\""
                        }
                      ],
                      "id": 186,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3477:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3477:103:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "3477:103:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 210,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "3620:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 212,
                          "indexExpression": {
                            "id": 211,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "3630:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3620:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$34_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "3620:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 205,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "3590:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 207,
                          "indexExpression": {
                            "id": 206,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "3600:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3590:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$34_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 208,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "writer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31,
                        "src": "3590:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3590:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3590:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "3590:51:0"
                },
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 216,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "3651:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 218,
                        "indexExpression": {
                          "id": 217,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "3661:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3651:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$34_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 219,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "canceled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "3651:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3676:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3651:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "3651:29:0"
                }
              ]
            },
            "functionSelector": "de6bf635",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "3301:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3301:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3300:9:0"
            },
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3325:0:0"
            },
            "scope": 481,
            "src": "3279:408:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 282,
              "nodeType": "Block",
              "src": "3816:469:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 229,
                      "name": "updatePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "3826:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3826:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "3826:14:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3858:23:0",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 233,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "3859:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 235,
                              "indexExpression": {
                                "id": 234,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 226,
                                "src": "3869:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3859:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$34_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 236,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "canceled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25,
                            "src": "3859:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 238,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "3885:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 240,
                              "indexExpression": {
                                "id": 239,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 226,
                                "src": "3895:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3885:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$34_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 241,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expiry",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19,
                            "src": "3885:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 242,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "3908:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3908:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3885:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3858:65:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696f6e2069732063616e63656c65642f6578706972656420616e642063616e6e6f7420626520626f75676874",
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3925:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77",
                          "typeString": "literal_string \"Option is canceled/expired and cannot be bought\""
                        },
                        "value": "Option is canceled/expired and cannot be bought"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77",
                          "typeString": "literal_string \"Option is canceled/expired and cannot be bought\""
                        }
                      ],
                      "id": 232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3850:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3850:125:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "3850:125:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 250,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4039:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4039:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 252,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "4052:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 254,
                            "indexExpression": {
                              "id": 253,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 226,
                              "src": "4062:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4052:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$34_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 255,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "premium",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "4052:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4039:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420616d6f756e74206f66204d415449432073656e7420666f72207072656d69756d",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4075:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd",
                          "typeString": "literal_string \"Incorrect amount of MATIC sent for premium\""
                        },
                        "value": "Incorrect amount of MATIC sent for premium"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd",
                          "typeString": "literal_string \"Incorrect amount of MATIC sent for premium\""
                        }
                      ],
                      "id": 249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4031:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4031:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "4031:89:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 265,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "4205:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 267,
                          "indexExpression": {
                            "id": 266,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "4215:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4205:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$34_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "premium",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17,
                        "src": "4205:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 260,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "4175:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 262,
                          "indexExpression": {
                            "id": 261,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "4185:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4175:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$34_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "writer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31,
                        "src": "4175:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4175:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4175:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "4175:52:0"
                },
                {
                  "expression": {
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 271,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "4237:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 273,
                        "indexExpression": {
                          "id": 272,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 226,
                          "src": "4247:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4237:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$34_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "buyer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "4237:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 277,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4267:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4267:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4259:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 275,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4259:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4259:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4237:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 281,
                  "nodeType": "ExpressionStatement",
                  "src": "4237:41:0"
                }
              ]
            },
            "functionSelector": "fba225b9",
            "id": 283,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 283,
                  "src": "3792:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3792:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3791:9:0"
            },
            "returnParameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3816:0:0"
            },
            "scope": 481,
            "src": "3773:512:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 380,
              "nodeType": "Block",
              "src": "4416:1221:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 289,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "4654:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 291,
                            "indexExpression": {
                              "id": 290,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 285,
                              "src": "4664:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4654:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$34_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33,
                          "src": "4654:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 293,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4677:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4677:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4654:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206f776e2074686973206f7074696f6e",
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4689:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62",
                          "typeString": "literal_string \"You do not own this option\""
                        },
                        "value": "You do not own this option"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62",
                          "typeString": "literal_string \"You do not own this option\""
                        }
                      ],
                      "id": 288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4646:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4646:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "4646:72:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4736:24:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 300,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "4737:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 302,
                            "indexExpression": {
                              "id": 301,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 285,
                              "src": "4747:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4737:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$34_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exercised",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23,
                          "src": "4737:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696f6e2068617320616c7265616479206265656e20657865726369736564",
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4762:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e",
                          "typeString": "literal_string \"Option has already been exercised\""
                        },
                        "value": "Option has already been exercised"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e",
                          "typeString": "literal_string \"Option has already been exercised\""
                        }
                      ],
                      "id": 299,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4728:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4728:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "4728:70:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 309,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "4816:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 311,
                            "indexExpression": {
                              "id": 310,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 285,
                              "src": "4826:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4816:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$34_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "4816:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 313,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4839:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4839:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4816:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696f6e2069732065787069726564",
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4856:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b",
                          "typeString": "literal_string \"Option is expired\""
                        },
                        "value": "Option is expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b",
                          "typeString": "literal_string \"Option is expired\""
                        }
                      ],
                      "id": 308,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4808:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4808:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "4808:68:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 319,
                      "name": "updatePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "4935:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4935:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "4935:14:0"
                },
                {
                  "assignments": [
                    323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 323,
                      "mutability": "mutable",
                      "name": "exerciseVal",
                      "nodeType": "VariableDeclaration",
                      "scope": 380,
                      "src": "4986:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 322,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4986:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 333,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 324,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "5005:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 326,
                        "indexExpression": {
                          "id": 325,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "5015:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5005:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$34_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 327,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "strike",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "5005:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 328,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "5026:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 330,
                        "indexExpression": {
                          "id": 329,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "5036:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5026:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$34_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 331,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "5026:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5005:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4986:60:0"
                },
                {
                  "assignments": [
                    335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 335,
                      "mutability": "mutable",
                      "name": "equivMatic",
                      "nodeType": "VariableDeclaration",
                      "scope": 380,
                      "src": "5110:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 334,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5110:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 344,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 336,
                      "name": "exerciseVal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 323,
                      "src": "5128:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 337,
                            "name": "maticPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "5143:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            },
                            "id": 340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5156:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3130",
                              "id": 339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5160:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "src": "5156:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            }
                          },
                          "src": "5143:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 342,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5142:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5128:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5110:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 346,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5329:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5329:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 348,
                          "name": "equivMatic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 335,
                          "src": "5342:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5329:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374204c494e4b20616d6f756e742073656e7420746f206578657263697365",
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5354:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e",
                          "typeString": "literal_string \"Incorrect LINK amount sent to exercise\""
                        },
                        "value": "Incorrect LINK amount sent to exercise"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e",
                          "typeString": "literal_string \"Incorrect LINK amount sent to exercise\""
                        }
                      ],
                      "id": 345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5321:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5321:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "5321:74:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 358,
                        "name": "equivMatic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 335,
                        "src": "5474:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 353,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "5444:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 355,
                          "indexExpression": {
                            "id": 354,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 285,
                            "src": "5454:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5444:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$34_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 356,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "writer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31,
                        "src": "5444:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5444:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5444:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "5444:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 367,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "5569:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 369,
                          "indexExpression": {
                            "id": 368,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 285,
                            "src": "5579:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5569:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$34_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "5569:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 363,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5548:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5548:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5540:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 361,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5540:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5540:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5540:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5540:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "5540:50:0"
                },
                {
                  "expression": {
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 373,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "5600:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 375,
                        "indexExpression": {
                          "id": 374,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "5610:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5600:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$34_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 376,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exercised",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "5600:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5626:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5600:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "5600:30:0"
                }
              ]
            },
            "functionSelector": "b07f0a41",
            "id": 381,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exercise",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 285,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 381,
                  "src": "4392:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4392:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4391:9:0"
            },
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4416:0:0"
            },
            "scope": 481,
            "src": "4374:1263:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 438,
              "nodeType": "Block",
              "src": "5791:478:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 387,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5809:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5809:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 389,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "5823:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 391,
                            "indexExpression": {
                              "id": 390,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 383,
                              "src": "5833:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5823:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$34_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 392,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "writer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "5823:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5809:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646964206e6f742077726974652074686973206f7074696f6e",
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5845:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd",
                          "typeString": "literal_string \"You did not write this option\""
                        },
                        "value": "You did not write this option"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd",
                          "typeString": "literal_string \"You did not write this option\""
                        }
                      ],
                      "id": 386,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5801:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5801:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "5801:76:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 398,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38,
                                  "src": "5953:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 400,
                                "indexExpression": {
                                  "id": 399,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 383,
                                  "src": "5963:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5953:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$34_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 401,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "expiry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19,
                              "src": "5953:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "expression": {
                                "id": 402,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "5977:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5977:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5953:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "5996:24:0",
                            "subExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 405,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38,
                                  "src": "5997:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 407,
                                "indexExpression": {
                                  "id": 406,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 383,
                                  "src": "6007:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5997:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$34_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 408,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "exercised",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "5997:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5953:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6024:23:0",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 411,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "6025:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 413,
                              "indexExpression": {
                                "id": 412,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 383,
                                "src": "6035:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6025:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$34_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 414,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "canceled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25,
                            "src": "6025:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5953:94:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206f7074696f6e206973206e6f7420656c696769626c6520666f72207769746864726177",
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6049:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21",
                          "typeString": "literal_string \"This option is not eligible for withdraw\""
                        },
                        "value": "This option is not eligible for withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21",
                          "typeString": "literal_string \"This option is not eligible for withdraw\""
                        }
                      ],
                      "id": 397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5945:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5945:147:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "5945:147:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 425,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "6132:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 427,
                          "indexExpression": {
                            "id": 426,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 383,
                            "src": "6142:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6132:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$34_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "6132:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 420,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "6102:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 422,
                          "indexExpression": {
                            "id": 421,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 383,
                            "src": "6112:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6102:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$34_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 423,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "writer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31,
                        "src": "6102:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "6102:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6102:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "6102:51:0"
                },
                {
                  "expression": {
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 431,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "6233:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 433,
                        "indexExpression": {
                          "id": 432,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 383,
                          "src": "6243:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6233:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$34_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 434,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "canceled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "6233:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6258:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6233:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "6233:29:0"
                }
              ]
            },
            "functionSelector": "790eee2e",
            "id": 439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveExpiredFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 383,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "5767:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 382,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5767:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5766:9:0"
            },
            "returnParameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5791:0:0"
            },
            "scope": 481,
            "src": "5737:532:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 470,
              "nodeType": "Block",
              "src": "6513:137:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 444,
                      "name": "updatePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "6523:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6523:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 446,
                  "nodeType": "ExpressionStatement",
                  "src": "6523:14:0"
                },
                {
                  "expression": {
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 447,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "6547:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 449,
                        "indexExpression": {
                          "id": 448,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 441,
                          "src": "6557:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6547:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$34_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 450,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "latestCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "6547:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 451,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38,
                                  "src": "6575:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 453,
                                "indexExpression": {
                                  "id": 452,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 441,
                                  "src": "6585:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6575:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$34_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 454,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "strike",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15,
                              "src": "6575:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 455,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38,
                                  "src": "6598:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 457,
                                "indexExpression": {
                                  "id": 456,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 441,
                                  "src": "6608:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6598:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$34_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 458,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21,
                              "src": "6598:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6575:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 460,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6574:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 461,
                              "name": "maticPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "6623:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_10000000000_by_1",
                                "typeString": "int_const 10000000000"
                              },
                              "id": 464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6636:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3130",
                                "id": 463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6640:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "src": "6636:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000000000_by_1",
                                "typeString": "int_const 10000000000"
                              }
                            },
                            "src": "6623:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 466,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6622:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6574:69:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6547:96:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "6547:96:0"
                }
              ]
            },
            "functionSelector": "db99e793",
            "id": 471,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateExerciseCost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "6497:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6497:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6496:9:0"
            },
            "returnParameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6513:0:0"
            },
            "scope": 481,
            "src": "6469:181:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 479,
              "nodeType": "Block",
              "src": "6715:40:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 476,
                      "name": "maticOpts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "6732:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                        "typeString": "struct OptionTrades.option storage ref[] storage ref"
                      }
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6732:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 475,
                  "id": 478,
                  "nodeType": "Return",
                  "src": "6725:23:0"
                }
              ]
            },
            "functionSelector": "f1356ffc",
            "id": 480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMaticOptsLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6683:2:0"
            },
            "returnParameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 480,
                  "src": "6706:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6706:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6705:9:0"
            },
            "scope": 481,
            "src": "6656:99:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 482,
        "src": "124:6633:0"
      }
    ],
    "src": "0:6757:0"
  },
  "legacyAST": {
    "absolutePath": "/home/turupawn/Projects/Blockchain/MyOptionsTrade/contracts/OptionTrades.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        527
      ],
      "LinkTokenInterface": [
        622
      ],
      "OptionTrades": [
        481
      ]
    },
    "id": 482,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "absolutePath": "/home/turupawn/Projects/Blockchain/MyOptionsTrade/contracts/dependencies/LinkTokenInterface.sol",
        "file": "./dependencies/LinkTokenInterface.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 482,
        "sourceUnit": 623,
        "src": "24:47:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/turupawn/Projects/Blockchain/MyOptionsTrade/contracts/dependencies/AggregatorV3Interface.sol",
        "file": "./dependencies/AggregatorV3Interface.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 482,
        "sourceUnit": 528,
        "src": "72:50:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 481,
        "linearizedBaseContracts": [
          481
        ],
        "name": "OptionTrades",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "maticFeed",
            "nodeType": "VariableDeclaration",
            "scope": 481,
            "src": "179:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$527",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 5,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 527,
                "src": "179:21:0"
              },
              "referencedDeclaration": 527,
              "src": "179:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$527",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 9,
            "mutability": "mutable",
            "name": "LINK",
            "nodeType": "VariableDeclaration",
            "scope": 481,
            "src": "266:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkTokenInterface_$622",
              "typeString": "contract LinkTokenInterface"
            },
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "LinkTokenInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 622,
                "src": "266:18:0"
              },
              "referencedDeclaration": 622,
              "src": "266:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkTokenInterface_$622",
                "typeString": "contract LinkTokenInterface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "maticPrice",
            "nodeType": "VariableDeclaration",
            "scope": 481,
            "src": "304:15:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "304:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "contractAddr",
            "nodeType": "VariableDeclaration",
            "scope": 481,
            "src": "325:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 12,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "325:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "OptionTrades.option",
            "id": 34,
            "members": [
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "strike",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "430:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "430:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "premium",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "528:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 16,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "528:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "expiry",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "601:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "601:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "658:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "658:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "exercised",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "725:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 22,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "725:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "canceled",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "777:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 24,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "777:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "827:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 26,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "827:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "latestCost",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "884:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "884:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "writer",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "956:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 30,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "956:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "buyer",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "1007:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 32,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1007:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "option",
            "nodeType": "StructDefinition",
            "scope": 481,
            "src": "406:647:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "63259516",
            "id": 38,
            "mutability": "mutable",
            "name": "maticOpts",
            "nodeType": "VariableDeclaration",
            "scope": 481,
            "src": "1058:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
              "typeString": "struct OptionTrades.option[]"
            },
            "typeName": {
              "baseType": {
                "id": 36,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 35,
                  "name": "option",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34,
                  "src": "1058:6:0"
                },
                "referencedDeclaration": 34,
                "src": "1058:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_option_$34_storage_ptr",
                  "typeString": "struct OptionTrades.option"
                }
              },
              "id": 37,
              "nodeType": "ArrayTypeName",
              "src": "1058:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage_ptr",
                "typeString": "struct OptionTrades.option[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 63,
              "nodeType": "Block",
              "src": "1179:578:0",
              "statements": [
                {
                  "expression": {
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41,
                      "name": "maticFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1518:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$527",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307864304435653344423434444530354539463239344242306133624545614630333044453234416461",
                          "id": 43,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1552:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 42,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 527,
                        "src": "1530:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$527_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1530:65:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$527",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "1518:77:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$527",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "1518:77:0"
                },
                {
                  "expression": {
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47,
                      "name": "LINK",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1634:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$622",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307833323643393737453665666338344535313262423943333066373645333063313630654430364642",
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1660:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x326C977E6efc84E512bB9C30f76E30c160eD06FB"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 48,
                        "name": "LinkTokenInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 622,
                        "src": "1641:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$622_$",
                          "typeString": "type(contract LinkTokenInterface)"
                        }
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1641:62:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$622",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "src": "1634:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkTokenInterface_$622",
                      "typeString": "contract LinkTokenInterface"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "1634:69:0"
                },
                {
                  "expression": {
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "contractAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1713:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 58,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "1744:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptionTrades_$481",
                                "typeString": "contract OptionTrades"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptionTrades_$481",
                                "typeString": "contract OptionTrades"
                              }
                            ],
                            "id": 57,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1736:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 56,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1736:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1736:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1728:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 54,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1728:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1728:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1713:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "1713:37:0"
                }
              ]
            },
            "id": 64,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1169:2:0"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1179:0:0"
            },
            "scope": 481,
            "src": "1158:599:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "1856:500:0",
              "statements": [
                {
                  "assignments": [
                    70,
                    72,
                    74,
                    76,
                    78
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70,
                      "mutability": "mutable",
                      "name": "roundID",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "1880:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 69,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "1880:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 72,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "1909:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 71,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "1909:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 74,
                      "mutability": "mutable",
                      "name": "startedAt",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "1932:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1932:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 76,
                      "mutability": "mutable",
                      "name": "timeStamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "1960:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 75,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1960:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 78,
                      "mutability": "mutable",
                      "name": "answeredInRound",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "1988:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 77,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "1988:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 82,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 79,
                        "name": "maticFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "2023:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$527",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 526,
                      "src": "2023:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2023:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1866:184:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 84,
                          "name": "timeStamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "2128:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2140:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2128:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f756e64206e6f7420636f6d706c657465",
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2143:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697",
                          "typeString": "literal_string \"Round not complete\""
                        },
                        "value": "Round not complete"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697",
                          "typeString": "literal_string \"Round not complete\""
                        }
                      ],
                      "id": 83,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2120:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2120:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "2120:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2343:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2338:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 90,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2338:4:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2338:11:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 68,
                  "id": 94,
                  "nodeType": "Return",
                  "src": "2331:18:0"
                }
              ]
            },
            "functionSelector": "c83d3248",
            "id": 96,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMaticPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1826:2:0"
            },
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "1850:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1849:6:0"
            },
            "scope": 481,
            "src": "1804:552:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "2430:45:0",
              "statements": [
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99,
                      "name": "maticPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2440:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 100,
                        "name": "getMaticPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "2453:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2453:15:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2440:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "2440:28:0"
                }
              ]
            },
            "id": 105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePrices",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2418:2:0"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2430:0:0"
            },
            "scope": 481,
            "src": "2397:78:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "2790:390:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 116,
                      "name": "updatePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "2800:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2800:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "2800:14:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2832:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2832:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 122,
                          "name": "tknAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "2845:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2832:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420616d6f756e74206f66204d6174696320737570706c696564",
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2853:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966",
                          "typeString": "literal_string \"Incorrect amount of Matic supplied\""
                        },
                        "value": "Incorrect amount of Matic supplied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b9cd635b3ed5e0153a571fa62dae2df1d3405943cb8f74ef01bf51023134966",
                          "typeString": "literal_string \"Incorrect amount of Matic supplied\""
                        }
                      ],
                      "id": 119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2824:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2824:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "2824:66:0"
                },
                {
                  "assignments": [
                    128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 128,
                      "mutability": "mutable",
                      "name": "latestCost",
                      "nodeType": "VariableDeclaration",
                      "scope": 169,
                      "src": "2901:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 127,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2901:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 140,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 129,
                            "name": "strike",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "2920:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 130,
                            "name": "tknAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "2929:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2920:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 132,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2919:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 133,
                            "name": "maticPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "2940:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            },
                            "id": 136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2953:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3130",
                              "id": 135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2957:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "src": "2953:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            }
                          },
                          "src": "2940:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 138,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2939:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2919:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2901:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 145,
                            "name": "strike",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "3054:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 146,
                            "name": "premium",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "3062:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 147,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "3071:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 148,
                            "name": "tknAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "3079:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3087:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3094:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "expression": {
                              "id": 151,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "3101:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3101:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 153,
                            "name": "latestCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "3119:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 156,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3139:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 157,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3139:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3131:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 154,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3131:8:0",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3131:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 163,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3168:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 162,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3160:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 161,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3160:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 164,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3160:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3152:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 159,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3152:8:0",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3152:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 144,
                          "name": "option",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "3047:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_option_$34_storage_ptr_$",
                            "typeString": "type(struct OptionTrades.option storage pointer)"
                          }
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3047:125:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$34_memory_ptr",
                          "typeString": "struct OptionTrades.option memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_option_$34_memory_ptr",
                          "typeString": "struct OptionTrades.option memory"
                        }
                      ],
                      "expression": {
                        "id": 141,
                        "name": "maticOpts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "3032:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                          "typeString": "struct OptionTrades.option storage ref[] storage ref"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3032:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_option_$34_storage_$returns$__$",
                        "typeString": "function (struct OptionTrades.option storage ref)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3032:141:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "3032:141:0"
                }
              ]
            },
            "functionSelector": "5891a76b",
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "writeOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "mutability": "mutable",
                  "name": "strike",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2722:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2722:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "premium",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2735:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2735:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2749:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2749:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "tknAmt",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2762:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2762:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2721:53:0"
            },
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2790:0:0"
            },
            "scope": 481,
            "src": "2701:479:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "3325:362:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 176,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3343:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3343:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 178,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "3357:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 180,
                            "indexExpression": {
                              "id": 179,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "3367:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3357:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$34_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "writer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "3357:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3343:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646964206e6f742077726974652074686973206f7074696f6e",
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3379:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd",
                          "typeString": "literal_string \"You did not write this option\""
                        },
                        "value": "You did not write this option"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd",
                          "typeString": "literal_string \"You did not write this option\""
                        }
                      ],
                      "id": 175,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3335:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3335:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "3335:76:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3485:23:0",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 187,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "3486:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 189,
                              "indexExpression": {
                                "id": 188,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 172,
                                "src": "3496:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3486:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$34_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 190,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "canceled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25,
                            "src": "3486:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 192,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "3512:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 194,
                              "indexExpression": {
                                "id": 193,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 172,
                                "src": "3522:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3512:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$34_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 195,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33,
                            "src": "3512:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3543:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3535:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 196,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3535:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3535:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3512:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3485:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206f7074696f6e2063616e6e6f742062652063616e63656c6564",
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3547:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a",
                          "typeString": "literal_string \"This option cannot be canceled\""
                        },
                        "value": "This option cannot be canceled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1d2f8b91c7b7bc0bba4e15288d3d3da0db4b88141c4085a7d65440fe8347e5a",
                          "typeString": "literal_string \"This option cannot be canceled\""
                        }
                      ],
                      "id": 186,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3477:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3477:103:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "3477:103:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 210,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "3620:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 212,
                          "indexExpression": {
                            "id": 211,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "3630:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3620:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$34_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "3620:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 205,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "3590:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 207,
                          "indexExpression": {
                            "id": 206,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "3600:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3590:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$34_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 208,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "writer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31,
                        "src": "3590:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3590:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3590:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "3590:51:0"
                },
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 216,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "3651:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 218,
                        "indexExpression": {
                          "id": 217,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "3661:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3651:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$34_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 219,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "canceled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "3651:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3676:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3651:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "3651:29:0"
                }
              ]
            },
            "functionSelector": "de6bf635",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "3301:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3301:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3300:9:0"
            },
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3325:0:0"
            },
            "scope": 481,
            "src": "3279:408:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 282,
              "nodeType": "Block",
              "src": "3816:469:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 229,
                      "name": "updatePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "3826:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3826:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "3826:14:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3858:23:0",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 233,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "3859:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 235,
                              "indexExpression": {
                                "id": 234,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 226,
                                "src": "3869:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3859:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$34_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 236,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "canceled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25,
                            "src": "3859:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 238,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "3885:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 240,
                              "indexExpression": {
                                "id": 239,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 226,
                                "src": "3895:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3885:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$34_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 241,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expiry",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19,
                            "src": "3885:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 242,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "3908:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3908:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3885:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3858:65:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696f6e2069732063616e63656c65642f6578706972656420616e642063616e6e6f7420626520626f75676874",
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3925:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77",
                          "typeString": "literal_string \"Option is canceled/expired and cannot be bought\""
                        },
                        "value": "Option is canceled/expired and cannot be bought"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_070b56deffb3f5b5e755f65b1090a404958e8369a6ddb10df55d317168769b77",
                          "typeString": "literal_string \"Option is canceled/expired and cannot be bought\""
                        }
                      ],
                      "id": 232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3850:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3850:125:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "3850:125:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 250,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4039:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4039:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 252,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "4052:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 254,
                            "indexExpression": {
                              "id": 253,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 226,
                              "src": "4062:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4052:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$34_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 255,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "premium",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "4052:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4039:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420616d6f756e74206f66204d415449432073656e7420666f72207072656d69756d",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4075:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd",
                          "typeString": "literal_string \"Incorrect amount of MATIC sent for premium\""
                        },
                        "value": "Incorrect amount of MATIC sent for premium"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_850b7c380a34167833c8d828def375a2181beb01307d8e68ccd66453753442cd",
                          "typeString": "literal_string \"Incorrect amount of MATIC sent for premium\""
                        }
                      ],
                      "id": 249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4031:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4031:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "4031:89:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 265,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "4205:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 267,
                          "indexExpression": {
                            "id": 266,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "4215:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4205:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$34_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "premium",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17,
                        "src": "4205:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 260,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "4175:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 262,
                          "indexExpression": {
                            "id": 261,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "4185:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4175:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$34_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "writer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31,
                        "src": "4175:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4175:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4175:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "4175:52:0"
                },
                {
                  "expression": {
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 271,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "4237:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 273,
                        "indexExpression": {
                          "id": 272,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 226,
                          "src": "4247:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4237:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$34_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "buyer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "4237:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 277,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4267:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4267:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4259:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 275,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4259:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4259:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4237:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 281,
                  "nodeType": "ExpressionStatement",
                  "src": "4237:41:0"
                }
              ]
            },
            "functionSelector": "fba225b9",
            "id": 283,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 283,
                  "src": "3792:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3792:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3791:9:0"
            },
            "returnParameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3816:0:0"
            },
            "scope": 481,
            "src": "3773:512:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 380,
              "nodeType": "Block",
              "src": "4416:1221:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 289,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "4654:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 291,
                            "indexExpression": {
                              "id": 290,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 285,
                              "src": "4664:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4654:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$34_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33,
                          "src": "4654:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 293,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4677:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4677:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4654:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206f776e2074686973206f7074696f6e",
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4689:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62",
                          "typeString": "literal_string \"You do not own this option\""
                        },
                        "value": "You do not own this option"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ac0a0e6589754b20830679a31b24333a19547854fed0a56d41646e941223f62",
                          "typeString": "literal_string \"You do not own this option\""
                        }
                      ],
                      "id": 288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4646:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4646:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "4646:72:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4736:24:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 300,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "4737:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 302,
                            "indexExpression": {
                              "id": 301,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 285,
                              "src": "4747:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4737:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$34_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exercised",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23,
                          "src": "4737:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696f6e2068617320616c7265616479206265656e20657865726369736564",
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4762:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e",
                          "typeString": "literal_string \"Option has already been exercised\""
                        },
                        "value": "Option has already been exercised"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc660fdd49f2d194bf85ca677574475bc176599cf26abbeaae2146ff91927b6e",
                          "typeString": "literal_string \"Option has already been exercised\""
                        }
                      ],
                      "id": 299,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4728:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4728:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "4728:70:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 309,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "4816:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 311,
                            "indexExpression": {
                              "id": 310,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 285,
                              "src": "4826:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4816:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$34_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "4816:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 313,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4839:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4839:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4816:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696f6e2069732065787069726564",
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4856:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b",
                          "typeString": "literal_string \"Option is expired\""
                        },
                        "value": "Option is expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_796baa653ba53a38adc8083dc76d483411e9e64bf302ffcf4d0ec1bec255d32b",
                          "typeString": "literal_string \"Option is expired\""
                        }
                      ],
                      "id": 308,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4808:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4808:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "4808:68:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 319,
                      "name": "updatePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "4935:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4935:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "4935:14:0"
                },
                {
                  "assignments": [
                    323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 323,
                      "mutability": "mutable",
                      "name": "exerciseVal",
                      "nodeType": "VariableDeclaration",
                      "scope": 380,
                      "src": "4986:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 322,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4986:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 333,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 324,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "5005:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 326,
                        "indexExpression": {
                          "id": 325,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "5015:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5005:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$34_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 327,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "strike",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "5005:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 328,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "5026:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 330,
                        "indexExpression": {
                          "id": 329,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "5036:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5026:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$34_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 331,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "5026:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5005:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4986:60:0"
                },
                {
                  "assignments": [
                    335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 335,
                      "mutability": "mutable",
                      "name": "equivMatic",
                      "nodeType": "VariableDeclaration",
                      "scope": 380,
                      "src": "5110:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 334,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5110:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 344,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 336,
                      "name": "exerciseVal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 323,
                      "src": "5128:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 337,
                            "name": "maticPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "5143:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            },
                            "id": 340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5156:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3130",
                              "id": 339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5160:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "src": "5156:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            }
                          },
                          "src": "5143:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 342,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5142:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5128:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5110:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 346,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5329:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5329:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 348,
                          "name": "equivMatic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 335,
                          "src": "5342:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5329:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374204c494e4b20616d6f756e742073656e7420746f206578657263697365",
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5354:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e",
                          "typeString": "literal_string \"Incorrect LINK amount sent to exercise\""
                        },
                        "value": "Incorrect LINK amount sent to exercise"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0af06d548f479db5ab3246e15f6ebbefe898e513ba4d8592866ef00484ec026e",
                          "typeString": "literal_string \"Incorrect LINK amount sent to exercise\""
                        }
                      ],
                      "id": 345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5321:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5321:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "5321:74:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 358,
                        "name": "equivMatic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 335,
                        "src": "5474:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 353,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "5444:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 355,
                          "indexExpression": {
                            "id": 354,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 285,
                            "src": "5454:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5444:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$34_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 356,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "writer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31,
                        "src": "5444:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5444:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5444:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "5444:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 367,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "5569:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 369,
                          "indexExpression": {
                            "id": 368,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 285,
                            "src": "5579:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5569:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$34_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "5569:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 363,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5548:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5548:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5540:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 361,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5540:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5540:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5540:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5540:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "5540:50:0"
                },
                {
                  "expression": {
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 373,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "5600:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 375,
                        "indexExpression": {
                          "id": 374,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "5610:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5600:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$34_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 376,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exercised",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "5600:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5626:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5600:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "5600:30:0"
                }
              ]
            },
            "functionSelector": "b07f0a41",
            "id": 381,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exercise",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 285,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 381,
                  "src": "4392:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4392:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4391:9:0"
            },
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4416:0:0"
            },
            "scope": 481,
            "src": "4374:1263:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 438,
              "nodeType": "Block",
              "src": "5791:478:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 387,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5809:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5809:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 389,
                              "name": "maticOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "5823:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                "typeString": "struct OptionTrades.option storage ref[] storage ref"
                              }
                            },
                            "id": 391,
                            "indexExpression": {
                              "id": 390,
                              "name": "ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 383,
                              "src": "5833:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5823:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$34_storage",
                              "typeString": "struct OptionTrades.option storage ref"
                            }
                          },
                          "id": 392,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "writer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "5823:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5809:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646964206e6f742077726974652074686973206f7074696f6e",
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5845:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd",
                          "typeString": "literal_string \"You did not write this option\""
                        },
                        "value": "You did not write this option"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a78fb6b1924ee060c42c917f575e3fafeb8374bdbabe54aa5047b98db59758cd",
                          "typeString": "literal_string \"You did not write this option\""
                        }
                      ],
                      "id": 386,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5801:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5801:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "5801:76:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 398,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38,
                                  "src": "5953:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 400,
                                "indexExpression": {
                                  "id": 399,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 383,
                                  "src": "5963:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5953:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$34_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 401,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "expiry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19,
                              "src": "5953:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "expression": {
                                "id": 402,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "5977:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5977:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5953:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "5996:24:0",
                            "subExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 405,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38,
                                  "src": "5997:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 407,
                                "indexExpression": {
                                  "id": 406,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 383,
                                  "src": "6007:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5997:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$34_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 408,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "exercised",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "5997:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5953:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6024:23:0",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 411,
                                "name": "maticOpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "6025:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                  "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                }
                              },
                              "id": 413,
                              "indexExpression": {
                                "id": 412,
                                "name": "ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 383,
                                "src": "6035:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6025:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$34_storage",
                                "typeString": "struct OptionTrades.option storage ref"
                              }
                            },
                            "id": 414,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "canceled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25,
                            "src": "6025:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5953:94:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206f7074696f6e206973206e6f7420656c696769626c6520666f72207769746864726177",
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6049:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21",
                          "typeString": "literal_string \"This option is not eligible for withdraw\""
                        },
                        "value": "This option is not eligible for withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee93e37ba4be408d5460c6b01b7e691ad8053484b7b45411b2dd2d6b3242aa21",
                          "typeString": "literal_string \"This option is not eligible for withdraw\""
                        }
                      ],
                      "id": 397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5945:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5945:147:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "5945:147:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 425,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "6132:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 427,
                          "indexExpression": {
                            "id": 426,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 383,
                            "src": "6142:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6132:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$34_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "6132:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 420,
                            "name": "maticOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "6102:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                              "typeString": "struct OptionTrades.option storage ref[] storage ref"
                            }
                          },
                          "id": 422,
                          "indexExpression": {
                            "id": 421,
                            "name": "ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 383,
                            "src": "6112:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6102:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$34_storage",
                            "typeString": "struct OptionTrades.option storage ref"
                          }
                        },
                        "id": 423,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "writer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31,
                        "src": "6102:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "6102:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6102:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "6102:51:0"
                },
                {
                  "expression": {
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 431,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "6233:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 433,
                        "indexExpression": {
                          "id": 432,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 383,
                          "src": "6243:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6233:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$34_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 434,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "canceled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "6233:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6258:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6233:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "6233:29:0"
                }
              ]
            },
            "functionSelector": "790eee2e",
            "id": 439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveExpiredFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 383,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "5767:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 382,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5767:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5766:9:0"
            },
            "returnParameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5791:0:0"
            },
            "scope": 481,
            "src": "5737:532:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 470,
              "nodeType": "Block",
              "src": "6513:137:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 444,
                      "name": "updatePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "6523:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6523:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 446,
                  "nodeType": "ExpressionStatement",
                  "src": "6523:14:0"
                },
                {
                  "expression": {
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 447,
                          "name": "maticOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "6547:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                            "typeString": "struct OptionTrades.option storage ref[] storage ref"
                          }
                        },
                        "id": 449,
                        "indexExpression": {
                          "id": 448,
                          "name": "ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 441,
                          "src": "6557:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6547:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$34_storage",
                          "typeString": "struct OptionTrades.option storage ref"
                        }
                      },
                      "id": 450,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "latestCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "6547:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 451,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38,
                                  "src": "6575:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 453,
                                "indexExpression": {
                                  "id": 452,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 441,
                                  "src": "6585:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6575:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$34_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 454,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "strike",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15,
                              "src": "6575:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 455,
                                  "name": "maticOpts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38,
                                  "src": "6598:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                                    "typeString": "struct OptionTrades.option storage ref[] storage ref"
                                  }
                                },
                                "id": 457,
                                "indexExpression": {
                                  "id": 456,
                                  "name": "ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 441,
                                  "src": "6608:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6598:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_$34_storage",
                                  "typeString": "struct OptionTrades.option storage ref"
                                }
                              },
                              "id": 458,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21,
                              "src": "6598:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6575:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 460,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6574:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 461,
                              "name": "maticPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "6623:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_10000000000_by_1",
                                "typeString": "int_const 10000000000"
                              },
                              "id": 464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6636:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3130",
                                "id": 463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6640:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "src": "6636:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000000000_by_1",
                                "typeString": "int_const 10000000000"
                              }
                            },
                            "src": "6623:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 466,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6622:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6574:69:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6547:96:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "6547:96:0"
                }
              ]
            },
            "functionSelector": "db99e793",
            "id": 471,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateExerciseCost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "6497:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6497:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6496:9:0"
            },
            "returnParameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6513:0:0"
            },
            "scope": 481,
            "src": "6469:181:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 479,
              "nodeType": "Block",
              "src": "6715:40:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 476,
                      "name": "maticOpts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "6732:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_option_$34_storage_$dyn_storage",
                        "typeString": "struct OptionTrades.option storage ref[] storage ref"
                      }
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6732:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 475,
                  "id": 478,
                  "nodeType": "Return",
                  "src": "6725:23:0"
                }
              ]
            },
            "functionSelector": "f1356ffc",
            "id": 480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMaticOptsLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6683:2:0"
            },
            "returnParameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 480,
                  "src": "6706:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6706:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6705:9:0"
            },
            "scope": 481,
            "src": "6656:99:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 482,
        "src": "124:6633:0"
      }
    ],
    "src": "0:6757:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "80001": {
      "events": {},
      "links": {},
      "address": "0x85e4a4B68edDEF665e139651b63AbE7AED921f90",
      "transactionHash": "0xd9eebb922272ed17fe5ac4f6ef34be0dfc0742b7c5c5630f0061387744b42bbf"
    }
  },
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-05-06T17:40:20.648Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}